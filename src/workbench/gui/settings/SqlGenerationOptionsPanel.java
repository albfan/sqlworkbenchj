/*
 * SqlGenerationOptionsPanel.java
 *
 * This file is part of SQL Workbench/J, http://www.sql-workbench.net
 *
 * Copyright 2002-2011, Thomas Kellerer
 * No part of this code maybe reused without the permission of the author
 *
 * To contact the author please send an email to: support@sql-workbench.net
 *
 */
package workbench.gui.settings;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import workbench.interfaces.Restoreable;
import workbench.resource.ResourceMgr;
import workbench.resource.Settings;

/**
 *
 * @author  Thomas Kellerer
 */
public class SqlGenerationOptionsPanel
	extends JPanel
	implements Restoreable, ActionListener
{

	public SqlGenerationOptionsPanel()
	{
		super();
		initComponents();

		List<String> types = Settings.getInstance().getLiteralTypeList();
		ComboBoxModel model1 = new DefaultComboBoxModel(types.toArray());
		literalTypes.setModel(model1);
		ComboBoxModel model2 = new DefaultComboBoxModel(types.toArray());
		exportLiteralTypes.setModel(model2);
		ComboBoxModel model3 = new DefaultComboBoxModel(types.toArray());
		diffLiteralsType.setModel(model3);
	}

	@Override
	public void restoreSettings()
	{
		String genCase = Settings.getInstance().getGeneratedSqlTableCase();
		if ("lower".equals(genCase)) this.tableNameCase.setSelectedIndex(1);
		else if ("upper".equals(genCase)) this.tableNameCase.setSelectedIndex(2);
		else this.tableNameCase.setSelectedIndex(0);
		this.literalTypes.setSelectedItem(Settings.getInstance().getDefaultCopyDateLiteralType());
		this.exportLiteralTypes.setSelectedItem(Settings.getInstance().getDefaultExportDateLiteralType());
		this.diffLiteralsType.setSelectedItem(Settings.getInstance().getDefaultDiffDateLiteralType());
		this.includeEmptyComments.setSelected(Settings.getInstance().getIncludeEmptyComments());
	}

	@Override
	public void saveSettings()
	{
		Settings set = Settings.getInstance();
		set.setDoFormatUpdates(formatUpdates.isSelected());
		set.setDoFormatInserts(formatInserts.isSelected());
		set.setDoFormatDeletes(formatDeletes.isSelected());
		set.setIncludeOwnerInSqlExport(includeOwner.isSelected());
		set.setGeneratedSqlTableCase((String)tableNameCase.getSelectedItem());
		set.setDefaultCopyDateLiteralType((String)literalTypes.getSelectedItem());
		set.setDefaultExportDateLiteralType((String)exportLiteralTypes.getSelectedItem());
		set.setDefaultDiffDateLiteralType((String)diffLiteralsType.getSelectedItem());
		set.setIncludeEmptyComments(includeEmptyComments.isSelected());
		set.setFormatInsertIgnoreIdentity(ignoreIdentity.isSelected());
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
		GridBagConstraints gridBagConstraints;

        formatUpdates = new JCheckBox();
        formatInserts = new JCheckBox();
        formatDeletes = new JCheckBox();
        ignoreIdentity = new JCheckBox();
        tableNameCaseLabel = new JLabel();
        tableNameCase = new JComboBox();
        jPanel1 = new JPanel();
        includeEmptyComments = new JCheckBox();
        includeOwner = new JCheckBox();
        jPanel2 = new JPanel();
        copyLiteralLabel = new JLabel();
        exportLiteralLabel = new JLabel();
        literalTypes = new JComboBox();
        exportLiteralTypes = new JComboBox();
        diffLiteralsLabel = new JLabel();
        diffLiteralsType = new JComboBox();
        jPanel3 = new JPanel();
        jPanel5 = new JPanel();

        setLayout(new GridBagLayout());

        formatUpdates.setSelected(Settings.getInstance().getDoFormatUpdates());
        formatUpdates.setText(ResourceMgr.getString("LblFmtUpd"));         formatUpdates.setToolTipText(ResourceMgr.getString("d_LblFmtUpd"));         formatUpdates.setBorder(null);
        formatUpdates.setHorizontalAlignment(SwingConstants.LEFT);
        formatUpdates.setHorizontalTextPosition(SwingConstants.RIGHT);
        formatUpdates.setIconTextGap(5);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(10, 12, 0, 11);
        add(formatUpdates, gridBagConstraints);

        formatInserts.setSelected(Settings.getInstance().getDoFormatInserts());
        formatInserts.setText(ResourceMgr.getString("LblFmtIns"));         formatInserts.setToolTipText(ResourceMgr.getString("d_LblFmtIns"));         formatInserts.setBorder(null);
        formatInserts.setHorizontalAlignment(SwingConstants.LEFT);
        formatInserts.setHorizontalTextPosition(SwingConstants.RIGHT);
        formatInserts.setIconTextGap(5);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(10, 12, 0, 11);
        add(formatInserts, gridBagConstraints);

        formatDeletes.setSelected(Settings.getInstance().getDoFormatDeletes());
        formatDeletes.setText(ResourceMgr.getString("LblFmtDel"));         formatDeletes.setToolTipText(ResourceMgr.getString("d_LblFmtDel"));         formatDeletes.setBorder(null);
        formatDeletes.setHorizontalAlignment(SwingConstants.LEFT);
        formatDeletes.setHorizontalTextPosition(SwingConstants.RIGHT);
        formatDeletes.setIconTextGap(5);
        formatDeletes.addActionListener(this);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(10, 12, 0, 11);
        add(formatDeletes, gridBagConstraints);

        ignoreIdentity.setSelected(Settings.getInstance().getFormatInsertIgnoreIdentity());
        ignoreIdentity.setText(ResourceMgr.getString("LblInsIgnoreId"));         ignoreIdentity.setToolTipText(ResourceMgr.getString("d_LblInsIgnoreId"));         ignoreIdentity.setBorder(null);
        ignoreIdentity.setHorizontalAlignment(SwingConstants.LEFT);
        ignoreIdentity.setHorizontalTextPosition(SwingConstants.RIGHT);
        ignoreIdentity.setIconTextGap(5);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(10, 12, 0, 11);
        add(ignoreIdentity, gridBagConstraints);

        tableNameCaseLabel.setLabelFor(tableNameCase);
        tableNameCaseLabel.setText(ResourceMgr.getString("LblGenTableNameCase"));         tableNameCaseLabel.setToolTipText(ResourceMgr.getString("d_LblGenTableNameCase"));         gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(11, 12, 0, 0);
        add(tableNameCaseLabel, gridBagConstraints);

        tableNameCase.setModel(new DefaultComboBoxModel(new String[] { "As is", "Lowercase", "Uppercase" }));
        tableNameCase.setToolTipText(ResourceMgr.getDescription("LblGenTableNameCase"));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(6, 10, 0, 15);
        add(tableNameCase, gridBagConstraints);

        jPanel1.setLayout(new GridBagLayout());

        includeEmptyComments.setSelected(Settings.getInstance().getIncludeOwnerInSqlExport());
        includeEmptyComments.setText(ResourceMgr.getString("LblGenInclEmptyComments"));         includeEmptyComments.setToolTipText(ResourceMgr.getString("d_LblGenInclEmptyComments"));         includeEmptyComments.setBorder(null);
        includeEmptyComments.setHorizontalAlignment(SwingConstants.LEFT);
        includeEmptyComments.setHorizontalTextPosition(SwingConstants.RIGHT);
        includeEmptyComments.setIconTextGap(5);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new Insets(0, 5, 0, 0);
        jPanel1.add(includeEmptyComments, gridBagConstraints);

        includeOwner.setSelected(Settings.getInstance().getIncludeOwnerInSqlExport());
        includeOwner.setText(ResourceMgr.getString("LblGenInclOwn"));         includeOwner.setToolTipText(ResourceMgr.getString("d_LblGenInclOwn"));         includeOwner.setBorder(null);
        includeOwner.setHorizontalAlignment(SwingConstants.LEFT);
        includeOwner.setHorizontalTextPosition(SwingConstants.RIGHT);
        includeOwner.setIconTextGap(5);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(0, 0, 0, 11);
        jPanel1.add(includeOwner, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new Insets(10, 12, 0, 0);
        add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(BorderFactory.createTitledBorder(ResourceMgr.getString("LblDefDateLiterals")));         jPanel2.setLayout(new GridBagLayout());

        copyLiteralLabel.setText(ResourceMgr.getString("LblDefCopyLiteralType"));         copyLiteralLabel.setToolTipText(ResourceMgr.getString("d_LblDefCopyLiteralType"));         gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(0, 8, 0, 0);
        jPanel2.add(copyLiteralLabel, gridBagConstraints);

        exportLiteralLabel.setLabelFor(exportLiteralTypes);
        exportLiteralLabel.setText(ResourceMgr.getString("LblDefExportLiteralType"));         exportLiteralLabel.setToolTipText(ResourceMgr.getString("d_LblDefExportLiteralType"));         gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(9, 8, 3, 0);
        jPanel2.add(exportLiteralLabel, gridBagConstraints);

        literalTypes.setToolTipText(ResourceMgr.getDescription("LblDefCopyLiteralType"));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(0, 8, 0, 0);
        jPanel2.add(literalTypes, gridBagConstraints);

        exportLiteralTypes.setToolTipText(ResourceMgr.getDescription("LblDefExportLiteralType"));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(6, 8, 3, 0);
        jPanel2.add(exportLiteralTypes, gridBagConstraints);

        diffLiteralsLabel.setLabelFor(diffLiteralsType);
        diffLiteralsLabel.setText(ResourceMgr.getString("LblDefDiffLiteralType"));         diffLiteralsLabel.setToolTipText(ResourceMgr.getString("d_LblDefDiffLiteralType"));         gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(0, 12, 0, 0);
        jPanel2.add(diffLiteralsLabel, gridBagConstraints);

        diffLiteralsType.setToolTipText(ResourceMgr.getDescription("LblDefExportLiteralType"));
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(0, 8, 0, 0);
        jPanel2.add(diffLiteralsType, gridBagConstraints);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = GridBagConstraints.WEST;
        gridBagConstraints.insets = new Insets(11, 10, 3, 14);
        add(jPanel2, gridBagConstraints);
        gridBagConstraints = new GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel5, gridBagConstraints);
    }

    // Code for dispatching events from components to event handlers.

    public void actionPerformed(ActionEvent evt) {
        if (evt.getSource() == formatDeletes) {
            SqlGenerationOptionsPanel.this.formatDeletesActionPerformed(evt);
        }
    }// </editor-fold>//GEN-END:initComponents

	private void formatDeletesActionPerformed(ActionEvent evt)//GEN-FIRST:event_formatDeletesActionPerformed
	{//GEN-HEADEREND:event_formatDeletesActionPerformed
		// TODO add your handling code here:
	}//GEN-LAST:event_formatDeletesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JLabel copyLiteralLabel;
    private JLabel diffLiteralsLabel;
    private JComboBox diffLiteralsType;
    private JLabel exportLiteralLabel;
    private JComboBox exportLiteralTypes;
    private JCheckBox formatDeletes;
    private JCheckBox formatInserts;
    private JCheckBox formatUpdates;
    private JCheckBox ignoreIdentity;
    private JCheckBox includeEmptyComments;
    private JCheckBox includeOwner;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JPanel jPanel5;
    private JComboBox literalTypes;
    private JComboBox tableNameCase;
    private JLabel tableNameCaseLabel;
    // End of variables declaration//GEN-END:variables

}
