/*
 * SettingsPanel.java
 *
 * This file is part of SQL Workbench/J, http://www.sql-workbench.net
 *
 * Copyright 2002-2006, Thomas Kellerer
 * No part of this code maybe reused without the permission of the author
 *
 * To contact the author please send an email to: support@sql-workbench.net
 *
 */
package workbench.gui.settings;

import java.awt.Font;
import java.awt.Frame;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import javax.swing.ActionMap;
import javax.swing.ComboBoxModel;
import javax.swing.InputMap;
import javax.swing.JComponent;

import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JRootPane;
import javax.swing.WindowConstants;
import javax.swing.event.ListDataListener;

import workbench.gui.WbSwingUtilities;
import workbench.gui.actions.EscAction;
import workbench.gui.components.NumberField;
import workbench.gui.components.WbButton;
import workbench.resource.ResourceMgr;
import workbench.resource.Settings;
import workbench.util.FileDialogUtil;
import workbench.util.StringUtil;

/**
 *
 * @author  sql.workbench@freenet.de
 */
public class SettingsPanel
	extends JPanel
	implements ActionListener
{
	private String escActionCommand;

	public SettingsPanel()
	{
		initComponents();
		this.enableDbmsOutput.addActionListener(this);
		this.defaultBufferSize.setEnabled(this.enableDbmsOutput.isSelected());
		this.pkMapFile.setCaretPosition(0);
		
		// It is important to add these in the correct order
		// which is defined by the numeric values from Settings.SHOW_NO_FILENAME
		// SHOW_FILENAME and SHOW_FULL_PATH
		this.windowTitleComboBox.addItem(ResourceMgr.getString("TxtShowNone"));
		this.windowTitleComboBox.addItem(ResourceMgr.getString("TxtShowName"));
		this.windowTitleComboBox.addItem(ResourceMgr.getString("TxtShowPath"));
		int type = Settings.getInstance().getShowFilenameInWindowTitle();
		if (type >= Settings.SHOW_NO_FILENAME && type <= Settings.SHOW_FULL_PATH)
		{
			this.windowTitleComboBox.setSelectedIndex(type);
		}
		
		this.errorColor.setColor(Settings.getInstance().getEditorErrorColor());
		this.selectionColor.setColor(Settings.getInstance().getEditorSelectionColor());
		this.requiredFieldColor.setColor(Settings.getInstance().getRequiredFieldColor());
		
		editorFont.setSelectedFont(Settings.getInstance().getEditorFont());
		dataFont.setSelectedFont(Settings.getInstance().getDataFont());
		msgLogFont.setSelectedFont(Settings.getInstance().getMsgLogFont());
		standardFont.setSelectedFont(Settings.getInstance().getStandardFont());
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints;

    mainTab = new javax.swing.JTabbedPane();
    generalPanel = new javax.swing.JPanel();
    useEncryptionLabel = new javax.swing.JLabel();
    useEncryption = new javax.swing.JCheckBox();
    dateFormatLabel = new javax.swing.JLabel();
    dateFormatTextField = new javax.swing.JTextField();
    decimalLabel = new javax.swing.JLabel();
    decimalField = new javax.swing.JTextField();
    maxDigitsLabel = new javax.swing.JLabel();
    maxDigitsField = new NumberField();
    maxColSizeLabel = new javax.swing.JLabel();
    maxColSizeField = new NumberField();
    textDelimiterLabel = new javax.swing.JLabel();
    textDelimiterField = new javax.swing.JTextField();
    quoteCharLabel = new javax.swing.JLabel();
    quoteCharField = new javax.swing.JTextField();
    jPanel1 = new javax.swing.JPanel();
    enableDbmsOutputLabel = new javax.swing.JLabel();
    enableDbmsOutput = new javax.swing.JCheckBox();
    enableAnimatedIconLabel = new javax.swing.JLabel();
    enableAnimatedIcon = new javax.swing.JCheckBox();
    consolidateLogLabel = new javax.swing.JLabel();
    consolidateLog = new javax.swing.JCheckBox();
    defaultBufferSize = new javax.swing.JTextField();
    bufferSizeLabel = new javax.swing.JLabel();
    timestampFormatLabel = new javax.swing.JLabel();
    timestampFormatTextField = new javax.swing.JTextField();
    msgFontLabel = new javax.swing.JLabel();
    standardFontLabel = new javax.swing.JLabel();
    msgLogFont = new workbench.gui.components.WbFontPicker();
    standardFont = new workbench.gui.components.WbFontPicker();
    editorTab = new javax.swing.JPanel();
    autoAdvanceLabel = new javax.swing.JLabel();
    autoAdvance = new javax.swing.JCheckBox();
    editorTabSizeLabel = new javax.swing.JLabel();
    tabSize = new javax.swing.JTextField();
    altDelimLabel = new javax.swing.JLabel();
    altDelimitTextField = new javax.swing.JTextField();
    historySizeLabel = new javax.swing.JLabel();
    historySizeField = new NumberField();
    electricScrollLabel = new javax.swing.JLabel();
    electricScroll = new javax.swing.JTextField();
    rightClickLabel = new javax.swing.JLabel();
    rightClickMovesCursor = new javax.swing.JCheckBox();
    pkMapLabel = new javax.swing.JLabel();
    windowTitleComboBox = new javax.swing.JComboBox();
    selectionColorLabel = new javax.swing.JLabel();
    errorColor = new workbench.gui.components.WbColorPicker();
    errorColorLabel = new javax.swing.JLabel();
    selectionColor = new workbench.gui.components.WbColorPicker();
    editorFontLabel = new javax.swing.JLabel();
    editorFont = new workbench.gui.components.WbFontPicker();
    dataEdit = new javax.swing.JPanel();
    pkMapFileLabel = new javax.swing.JLabel();
    jPanel3 = new javax.swing.JPanel();
    pkMapFile = new javax.swing.JTextField();
    selectMapFile = new javax.swing.JButton();
    previewDmlLabel = new javax.swing.JLabel();
    previewDml = new javax.swing.JCheckBox();
    highlightRequiredLabel = new javax.swing.JLabel();
    highlightRequired = new javax.swing.JCheckBox();
    requiredFieldLabel = new javax.swing.JLabel();
    requiredFieldColor = new workbench.gui.components.WbColorPicker();
    dataFontLabel = new javax.swing.JLabel();
    dataFont = new workbench.gui.components.WbFontPicker();
    explorerPanel = new javax.swing.JPanel();
    dbExplorerLabel = new javax.swing.JLabel();
    showDbExplorer = new javax.swing.JCheckBox();
    retrieveDbExplorer = new javax.swing.JCheckBox();
    retrieveDbExplorerLabel = new javax.swing.JLabel();
    defTableTypeLabel1 = new javax.swing.JLabel();
    defTableTypeField = new javax.swing.JTextField();
    rememberSchemaLabel = new javax.swing.JLabel();
    storeExplorerSchema = new javax.swing.JCheckBox();
    rememberObjectLabel = new javax.swing.JLabel();
    rememberObject = new javax.swing.JCheckBox();
    buttonPanel = new javax.swing.JPanel();
    okButton = new WbButton();
    cancelButton = new WbButton();

    setLayout(new java.awt.BorderLayout());

    mainTab.setFont(null);
    generalPanel.setLayout(new java.awt.GridBagLayout());

    useEncryptionLabel.setLabelFor(useEncryption);
    useEncryptionLabel.setText(ResourceMgr.getString("LabelUseEncryption"));
    useEncryptionLabel.setToolTipText(ResourceMgr.getDescription("LabelUseEncryption"));
    useEncryptionLabel.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        useEncryptionLabelMouseClicked(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(8, 12, 0, 0);
    generalPanel.add(useEncryptionLabel, gridBagConstraints);

    useEncryption.setFont(null);
    useEncryption.setSelected(Settings.getInstance().getUseEncryption());
    useEncryption.setText("");
    useEncryption.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    useEncryption.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
    useEncryption.setIconTextGap(5);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(8, 7, 0, 11);
    generalPanel.add(useEncryption, gridBagConstraints);

    dateFormatLabel.setFont(null);
    dateFormatLabel.setText(ResourceMgr.getString("LabelDateFormat"));
    dateFormatLabel.setToolTipText(ResourceMgr.getDescription("LabelDateFormat"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 11;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 0);
    generalPanel.add(dateFormatLabel, gridBagConstraints);

    dateFormatTextField.setFont(getFont());
    dateFormatTextField.setText(Settings.getInstance().getDefaultDateFormat());
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 11;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(6, 10, 0, 15);
    generalPanel.add(dateFormatTextField, gridBagConstraints);

    decimalLabel.setText(ResourceMgr.getString("LabelDecimalSymbol"));
    decimalLabel.setToolTipText(ResourceMgr.getDescription("LabelDecimalSymbol"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 13;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 0, 0);
    generalPanel.add(decimalLabel, gridBagConstraints);

    decimalField.setText(Settings.getInstance().getDecimalSymbol());
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 13;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 15);
    generalPanel.add(decimalField, gridBagConstraints);

    maxDigitsLabel.setText(ResourceMgr.getString("LabelMaxDigits"));
    maxDigitsLabel.setToolTipText(ResourceMgr.getDescription("LabelMaxDigits"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 14;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 0, 0);
    generalPanel.add(maxDigitsLabel, gridBagConstraints);

    maxDigitsField.setText(Integer.toString(Settings.getInstance().getMaxFractionDigits()));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 14;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 15);
    generalPanel.add(maxDigitsField, gridBagConstraints);

    maxColSizeLabel.setText(ResourceMgr.getString("LabelMaxColsize"));
    maxColSizeLabel.setToolTipText(ResourceMgr.getDescription("LabelMaxColsize"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 15;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 0, 0);
    generalPanel.add(maxColSizeLabel, gridBagConstraints);

    maxColSizeField.setText(Integer.toString(Settings.getInstance().getMaxColumnWidth()));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 15;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 15);
    generalPanel.add(maxColSizeField, gridBagConstraints);

    textDelimiterLabel.setText(ResourceMgr.getString("LabelFieldDelimiter"));
    textDelimiterLabel.setToolTipText(ResourceMgr.getDescription("LabelFieldDelimiter"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 16;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 0, 0);
    generalPanel.add(textDelimiterLabel, gridBagConstraints);

    textDelimiterField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
    textDelimiterField.setText(Settings.getInstance().getDefaultTextDelimiter(true));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 16;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 15);
    generalPanel.add(textDelimiterField, gridBagConstraints);

    quoteCharLabel.setText(ResourceMgr.getString("LabelQuoteChar"));
    quoteCharLabel.setToolTipText(ResourceMgr.getDescription("LabelQuoteChar"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 17;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 0, 0);
    generalPanel.add(quoteCharLabel, gridBagConstraints);

    quoteCharField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
    quoteCharField.setText(Settings.getInstance().getQuoteChar());
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 17;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 15);
    generalPanel.add(quoteCharField, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 21;
    gridBagConstraints.weighty = 1.0;
    generalPanel.add(jPanel1, gridBagConstraints);

    enableDbmsOutputLabel.setLabelFor(retrieveDbExplorer);
    enableDbmsOutputLabel.setText(ResourceMgr.getString("LabelEnableDbmsOutput"));
    enableDbmsOutputLabel.setToolTipText(ResourceMgr.getDescription("LabelEnableDbmsOutput"));
    enableDbmsOutputLabel.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        enableDbmsOutputLabelMouseClicked(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
    generalPanel.add(enableDbmsOutputLabel, gridBagConstraints);

    enableDbmsOutput.setFont(null);
    enableDbmsOutput.setSelected(Settings.getInstance().getEnableDbmsOutput());
    enableDbmsOutput.setText("");
    enableDbmsOutput.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    enableDbmsOutput.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
    enableDbmsOutput.setIconTextGap(5);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 3);
    generalPanel.add(enableDbmsOutput, gridBagConstraints);

    enableAnimatedIconLabel.setLabelFor(enableAnimatedIcon);
    enableAnimatedIconLabel.setText(ResourceMgr.getString("LabelEnableAnimatedIcon"));
    enableAnimatedIconLabel.setToolTipText(ResourceMgr.getDescription("LabelEnableAnimatedIcon"));
    enableAnimatedIconLabel.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        enableAnimatedIconLabelMouseClicked(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 1, 0);
    generalPanel.add(enableAnimatedIconLabel, gridBagConstraints);

    enableAnimatedIcon.setFont(null);
    enableAnimatedIcon.setSelected(Settings.getInstance().getUseAnimatedIcon());
    enableAnimatedIcon.setText("");
    enableAnimatedIcon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    enableAnimatedIcon.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
    enableAnimatedIcon.setIconTextGap(5);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 7, 1, 25);
    generalPanel.add(enableAnimatedIcon, gridBagConstraints);

    consolidateLogLabel.setLabelFor(consolidateLog);
    consolidateLogLabel.setText(ResourceMgr.getString("LabelConsolidateLog"));
    consolidateLogLabel.setToolTipText(ResourceMgr.getDescription("LabelConsolidateLog"));
    consolidateLogLabel.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        consolidateLogLabelMouseClicked(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 12, 1, 0);
    generalPanel.add(consolidateLogLabel, gridBagConstraints);

    consolidateLog.setFont(null);
    consolidateLog.setSelected(Settings.getInstance().getConsolidateLogMsg());
    consolidateLog.setText("");
    consolidateLog.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    consolidateLog.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
    consolidateLog.setIconTextGap(5);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 7, 1, 11);
    generalPanel.add(consolidateLog, gridBagConstraints);

    defaultBufferSize.setText(Integer.toString(Settings.getInstance().getDbmsOutputDefaultBuffer()));
    defaultBufferSize.setMaximumSize(new java.awt.Dimension(2147483647, 21));
    defaultBufferSize.setMinimumSize(new java.awt.Dimension(100, 21));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 15);
    generalPanel.add(defaultBufferSize, gridBagConstraints);

    bufferSizeLabel.setText(ResourceMgr.getString("LabelDefaultBufferSize"));
    bufferSizeLabel.setToolTipText(ResourceMgr.getDescription("LabelDefaultBufferSize"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    generalPanel.add(bufferSizeLabel, gridBagConstraints);

    timestampFormatLabel.setFont(null);
    timestampFormatLabel.setText(ResourceMgr.getString("LabelTimestampFormat"));
    timestampFormatLabel.setToolTipText(ResourceMgr.getDescription("LabelTimestampFormat"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 12;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 12, 0, 0);
    generalPanel.add(timestampFormatLabel, gridBagConstraints);

    timestampFormatTextField.setFont(getFont());
    timestampFormatTextField.setText(Settings.getInstance().getDefaultTimestampFormat());
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 12;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 15);
    generalPanel.add(timestampFormatTextField, gridBagConstraints);

    msgFontLabel.setText(ResourceMgr.getString("LabelMsgLogFont"));
    msgFontLabel.setToolTipText(ResourceMgr.getDescription("LabelMsgLogFont"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(7, 12, 0, 0);
    generalPanel.add(msgFontLabel, gridBagConstraints);

    standardFontLabel.setText(ResourceMgr.getString("LabelStandardFont"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 12, 0, 0);
    generalPanel.add(standardFontLabel, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 8, 0, 15);
    generalPanel.add(msgLogFont, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 8, 0, 15);
    generalPanel.add(standardFont, gridBagConstraints);

    mainTab.addTab(ResourceMgr.getString("LabelSettingsGeneral"), generalPanel);

    editorTab.setLayout(new java.awt.GridBagLayout());

    autoAdvanceLabel.setLabelFor(autoAdvance);
    autoAdvanceLabel.setText(ResourceMgr.getString("LabelAutoAdvance"));
    autoAdvanceLabel.setToolTipText(ResourceMgr.getDescription("LabelAutoAdvance"));
    autoAdvanceLabel.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        autoAdvanceLabelMouseClicked(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(8, 12, 2, 0);
    editorTab.add(autoAdvanceLabel, gridBagConstraints);

    autoAdvance.setFont(null);
    autoAdvance.setSelected(Settings.getInstance().getAutoJumpNextStatement());
    autoAdvance.setText("");
    autoAdvance.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    autoAdvance.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
    autoAdvance.setIconTextGap(5);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(8, 7, 2, 11);
    editorTab.add(autoAdvance, gridBagConstraints);

    editorTabSizeLabel.setText(ResourceMgr.getString("LabelTabWidth"));
    editorTabSizeLabel.setToolTipText(ResourceMgr.getDescription("LabelTabWidth"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 10;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 12, 0, 0);
    editorTab.add(editorTabSizeLabel, gridBagConstraints);

    tabSize.setHorizontalAlignment(javax.swing.JTextField.LEFT);
    tabSize.setText(Settings.getInstance().getProperty("workbench.editor.tabwidth", "2"));
    tabSize.setMinimumSize(new java.awt.Dimension(72, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 10;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 15);
    editorTab.add(tabSize, gridBagConstraints);

    altDelimLabel.setText(ResourceMgr.getString("LabelAltDelimit"));
    altDelimLabel.setToolTipText(ResourceMgr.getDescription("LabelAltDelimit"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(9, 12, 0, 0);
    editorTab.add(altDelimLabel, gridBagConstraints);

    altDelimitTextField.setText(Settings.getInstance().getAlternateDelimiter());
    altDelimitTextField.setMinimumSize(new java.awt.Dimension(72, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(6, 11, 0, 15);
    editorTab.add(altDelimitTextField, gridBagConstraints);

    historySizeLabel.setText(ResourceMgr.getString("LabelHistorySize"));
    historySizeLabel.setToolTipText(ResourceMgr.getDescription("LabelHistorySize"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 12, 0, 0);
    editorTab.add(historySizeLabel, gridBagConstraints);

    historySizeField.setText(Integer.toString(Settings.getInstance().getMaxHistorySize()));
    historySizeField.setMinimumSize(new java.awt.Dimension(72, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 15);
    editorTab.add(historySizeField, gridBagConstraints);

    electricScrollLabel.setText(ResourceMgr.getString("LabelSettingElectricScroll"));
    electricScrollLabel.setToolTipText(ResourceMgr.getDescription("LabelSettingElectricScroll"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 12, 0, 0);
    editorTab.add(electricScrollLabel, gridBagConstraints);

    electricScroll.setText(Integer.toString(Settings.getInstance().getElectricScroll()));
    electricScroll.setMinimumSize(new java.awt.Dimension(72, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 15);
    editorTab.add(electricScroll, gridBagConstraints);

    rightClickLabel.setText(ResourceMgr.getString("LabelRightClickMove"));
    rightClickLabel.setToolTipText(ResourceMgr.getDescription("LabelRightClickMove"));
    rightClickLabel.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        rightClickLabelMouseClicked(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 12, 0, 0);
    editorTab.add(rightClickLabel, gridBagConstraints);

    rightClickMovesCursor.setFont(null);
    rightClickMovesCursor.setSelected(Settings.getInstance().getRightClickMovesCursor());
    rightClickMovesCursor.setText("");
    rightClickMovesCursor.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    rightClickMovesCursor.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
    rightClickMovesCursor.setIconTextGap(5);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(1, 7, 0, 11);
    editorTab.add(rightClickMovesCursor, gridBagConstraints);

    pkMapLabel.setText(ResourceMgr.getString("LabelShowEditorInfo"));
    pkMapLabel.setToolTipText(ResourceMgr.getDescription("LabelShowEditorInfo"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(3, 12, 0, 0);
    editorTab.add(pkMapLabel, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 15);
    editorTab.add(windowTitleComboBox, gridBagConstraints);

    selectionColorLabel.setText(ResourceMgr.getString("LabelSelectionColor"));
    selectionColorLabel.setToolTipText(ResourceMgr.getDescription("LabelSelectionColor"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(8, 12, 0, 0);
    editorTab.add(selectionColorLabel, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
    editorTab.add(errorColor, gridBagConstraints);

    errorColorLabel.setText(ResourceMgr.getString("LabelSelectErrorColor"));
    errorColorLabel.setToolTipText(ResourceMgr.getDescription("LabelSelectErrorColor"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(7, 12, 0, 0);
    editorTab.add(errorColorLabel, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 5, 0, 0);
    editorTab.add(selectionColor, gridBagConstraints);

    editorFontLabel.setText(ResourceMgr.getString("LabelEditorFont"));
    editorFontLabel.setToolTipText(ResourceMgr.getDescription("LabelEditorFont"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 12, 0, 0);
    editorTab.add(editorFontLabel, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 15);
    editorTab.add(editorFont, gridBagConstraints);

    mainTab.addTab(ResourceMgr.getString("LabelSettingsEditor"), editorTab);

    dataEdit.setLayout(new java.awt.GridBagLayout());

    pkMapFileLabel.setText(ResourceMgr.getString("LabelPKMapFile"));
    pkMapFileLabel.setToolTipText(ResourceMgr.getDescription("LabelPKMapFile"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(11, 12, 0, 0);
    dataEdit.add(pkMapFileLabel, gridBagConstraints);

    jPanel3.setLayout(new java.awt.BorderLayout(5, 0));

    pkMapFile.setHorizontalAlignment(javax.swing.JTextField.LEFT);
    pkMapFile.setText(Settings.getInstance().getPKMappingFilename());
    pkMapFile.setMaximumSize(new java.awt.Dimension(2147483647, 22));
    pkMapFile.setMinimumSize(new java.awt.Dimension(6, 22));
    pkMapFile.setPreferredSize(new java.awt.Dimension(72, 22));
    jPanel3.add(pkMapFile, java.awt.BorderLayout.CENTER);

    selectMapFile.setText("...");
    selectMapFile.setMaximumSize(new java.awt.Dimension(22, 22));
    selectMapFile.setMinimumSize(new java.awt.Dimension(22, 22));
    selectMapFile.setPreferredSize(new java.awt.Dimension(22, 22));
    selectMapFile.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        selectMapFile(evt);
      }
    });

    jPanel3.add(selectMapFile, java.awt.BorderLayout.EAST);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(7, 10, 0, 15);
    dataEdit.add(jPanel3, gridBagConstraints);

    previewDmlLabel.setLabelFor(previewDml);
    previewDmlLabel.setText(ResourceMgr.getString("LabelPreviewDml"));
    previewDmlLabel.setToolTipText(ResourceMgr.getDescription("LabelPreviewDml"));
    previewDmlLabel.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        previewDmlLabelMouseClicked(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(14, 12, 0, 0);
    dataEdit.add(previewDmlLabel, gridBagConstraints);

    previewDml.setFont(null);
    previewDml.setSelected(Settings.getInstance().getPreviewDml());
    previewDml.setText("");
    previewDml.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    previewDml.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
    previewDml.setIconTextGap(5);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(10, 7, 0, 11);
    dataEdit.add(previewDml, gridBagConstraints);

    highlightRequiredLabel.setLabelFor(highlightRequired);
    highlightRequiredLabel.setText(ResourceMgr.getString("LabelHiliteRqd"));
    highlightRequiredLabel.setToolTipText(ResourceMgr.getDescription("LabelHiliteRqd"));
    highlightRequiredLabel.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        highlightRequiredLabelMouseClicked(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(7, 12, 0, 0);
    dataEdit.add(highlightRequiredLabel, gridBagConstraints);

    highlightRequired.setFont(null);
    highlightRequired.setSelected(Settings.getInstance().getHighlightRequiredFields());
    highlightRequired.setText("");
    highlightRequired.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    highlightRequired.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
    highlightRequired.setIconTextGap(5);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 7, 0, 11);
    dataEdit.add(highlightRequired, gridBagConstraints);

    requiredFieldLabel.setText(ResourceMgr.getString("LabelReqFldColor"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(8, 12, 0, 0);
    dataEdit.add(requiredFieldLabel, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 0, 25);
    dataEdit.add(requiredFieldColor, gridBagConstraints);

    dataFontLabel.setText(ResourceMgr.getString("LabelDataFont"));
    dataFontLabel.setToolTipText(ResourceMgr.getDescription("LabelDataFont"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 12, 0, 0);
    dataEdit.add(dataFontLabel, gridBagConstraints);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 15);
    dataEdit.add(dataFont, gridBagConstraints);

    mainTab.addTab(ResourceMgr.getString("LabelDataEdit"), dataEdit);

    explorerPanel.setLayout(new java.awt.GridBagLayout());

    dbExplorerLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    dbExplorerLabel.setLabelFor(showDbExplorer);
    dbExplorerLabel.setText(ResourceMgr.getString("LabelDbExplorerCheckBox"));
    dbExplorerLabel.setToolTipText(ResourceMgr.getDescription("LabelDbExplorerCheckBox"));
    dbExplorerLabel.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        dbExplorerLabelMouseClicked(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(7, 12, 0, 0);
    explorerPanel.add(dbExplorerLabel, gridBagConstraints);

    showDbExplorer.setFont(null);
    showDbExplorer.setSelected(Settings.getInstance().getShowDbExplorerInMainWindow());
    showDbExplorer.setText("");
    showDbExplorer.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    showDbExplorer.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
    showDbExplorer.setIconTextGap(5);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 11);
    explorerPanel.add(showDbExplorer, gridBagConstraints);

    retrieveDbExplorer.setFont(null);
    retrieveDbExplorer.setSelected(Settings.getInstance().getRetrieveDbExplorer());
    retrieveDbExplorer.setText("");
    retrieveDbExplorer.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    retrieveDbExplorer.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
    retrieveDbExplorer.setIconTextGap(5);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(4, 5, 0, 5);
    explorerPanel.add(retrieveDbExplorer, gridBagConstraints);

    retrieveDbExplorerLabel.setLabelFor(retrieveDbExplorer);
    retrieveDbExplorerLabel.setText(ResourceMgr.getString("LabelRetrieveDbExplorer"));
    retrieveDbExplorerLabel.setToolTipText(ResourceMgr.getDescription("LabelRetrieveDbExplorer"));
    retrieveDbExplorerLabel.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        retrieveDbExplorerLabelMouseClicked(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(8, 12, 0, 0);
    explorerPanel.add(retrieveDbExplorerLabel, gridBagConstraints);

    defTableTypeLabel1.setText(ResourceMgr.getString("LabelDefTableType"));
    defTableTypeLabel1.setToolTipText(ResourceMgr.getDescription("LabelDefTableType"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(11, 12, 0, 0);
    explorerPanel.add(defTableTypeLabel1, gridBagConstraints);

    defTableTypeField.setHorizontalAlignment(javax.swing.JTextField.LEFT);
    defTableTypeField.setText(Settings.getInstance().getProperty("workbench.dbexplorer.defTableType", null));
    defTableTypeField.setMinimumSize(new java.awt.Dimension(72, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(9, 9, 0, 15);
    explorerPanel.add(defTableTypeField, gridBagConstraints);

    rememberSchemaLabel.setText(ResourceMgr.getString("LabelRememberSchema"));
    rememberSchemaLabel.setToolTipText(ResourceMgr.getDescription("LabelRememberSchema"));
    rememberSchemaLabel.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        rememberSchemaLabelMouseClicked(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(7, 12, 0, 0);
    explorerPanel.add(rememberSchemaLabel, gridBagConstraints);

    storeExplorerSchema.setSelected(Settings.getInstance().getStoreExplorerSchema());
    storeExplorerSchema.setText("");
    storeExplorerSchema.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
    storeExplorerSchema.setMargin(new java.awt.Insets(0, 0, 0, 0));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(6, 9, 0, 0);
    explorerPanel.add(storeExplorerSchema, gridBagConstraints);

    rememberObjectLabel.setText(ResourceMgr.getString("LabelRememberObjectType"));
    rememberObjectLabel.setToolTipText(ResourceMgr.getDescription("LabelRememberObjectType"));
    rememberObjectLabel.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        rememberObjectLabelMouseClicked(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(10, 12, 0, 0);
    explorerPanel.add(rememberObjectLabel, gridBagConstraints);

    rememberObject.setSelected(Settings.getInstance().getStoreExplorerObjectType());
    rememberObject.setText("");
    rememberObject.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
    rememberObject.setMargin(new java.awt.Insets(0, 0, 0, 0));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.insets = new java.awt.Insets(9, 9, 0, 0);
    explorerPanel.add(rememberObject, gridBagConstraints);

    mainTab.addTab(ResourceMgr.getString("LabelSettingsDbExplorer"), explorerPanel);

    add(mainTab, java.awt.BorderLayout.CENTER);

    buttonPanel.setLayout(new java.awt.GridBagLayout());

    okButton.setText(ResourceMgr.getString("LabelOK"));
    okButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        okButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(7, 0, 7, 10);
    buttonPanel.add(okButton, gridBagConstraints);

    cancelButton.setText(ResourceMgr.getString("LabelCancel"));
    cancelButton.addActionListener(new java.awt.event.ActionListener()
    {
      public void actionPerformed(java.awt.event.ActionEvent evt)
      {
        cancelButtonActionPerformed(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    gridBagConstraints.insets = new java.awt.Insets(7, 0, 7, 4);
    buttonPanel.add(cancelButton, gridBagConstraints);

    add(buttonPanel, java.awt.BorderLayout.SOUTH);

  }// </editor-fold>//GEN-END:initComponents

	private void rememberObjectLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_rememberObjectLabelMouseClicked
	{//GEN-HEADEREND:event_rememberObjectLabelMouseClicked
		this.rememberObject.setSelected(!this.rememberObject.isSelected());
	}//GEN-LAST:event_rememberObjectLabelMouseClicked

	private void highlightRequiredLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_highlightRequiredLabelMouseClicked
	{//GEN-HEADEREND:event_highlightRequiredLabelMouseClicked
		this.highlightRequired.setSelected(!this.highlightRequired.isSelected());
	}//GEN-LAST:event_highlightRequiredLabelMouseClicked

	private void selectMapFile(java.awt.event.ActionEvent evt)//GEN-FIRST:event_selectMapFile
	{//GEN-HEADEREND:event_selectMapFile
		String fileName = FileDialogUtil.selectPkMapFile(this);
		if (fileName != null) pkMapFile.setText(fileName); 
	}//GEN-LAST:event_selectMapFile

	private void rightClickLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_rightClickLabelMouseClicked
	{//GEN-HEADEREND:event_rightClickLabelMouseClicked
		rightClickMovesCursor.setSelected(!rightClickMovesCursor.isSelected());
	}//GEN-LAST:event_rightClickLabelMouseClicked

	private void rememberSchemaLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_rememberSchemaLabelMouseClicked
	{//GEN-HEADEREND:event_rememberSchemaLabelMouseClicked
		storeExplorerSchema.setSelected(!storeExplorerSchema.isSelected());
	}//GEN-LAST:event_rememberSchemaLabelMouseClicked

	private void dbExplorerLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_dbExplorerLabelMouseClicked
	{//GEN-HEADEREND:event_dbExplorerLabelMouseClicked
		this.showDbExplorer.setSelected(!this.showDbExplorer.isSelected());
	}//GEN-LAST:event_dbExplorerLabelMouseClicked

	private void autoAdvanceLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_autoAdvanceLabelMouseClicked
	{//GEN-HEADEREND:event_autoAdvanceLabelMouseClicked
		this.autoAdvance.setSelected(!this.autoAdvance.isSelected());
	}//GEN-LAST:event_autoAdvanceLabelMouseClicked

  private void previewDmlLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_previewDmlLabelMouseClicked
  {//GEN-HEADEREND:event_previewDmlLabelMouseClicked
	this.previewDml.setSelected(!this.previewDml.isSelected());
  }//GEN-LAST:event_previewDmlLabelMouseClicked

  private void consolidateLogLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_consolidateLogLabelMouseClicked
  {//GEN-HEADEREND:event_consolidateLogLabelMouseClicked
	this.consolidateLog.setSelected(!this.consolidateLog.isSelected());
  }//GEN-LAST:event_consolidateLogLabelMouseClicked

	private void enableAnimatedIconLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_enableAnimatedIconLabelMouseClicked
	{//GEN-HEADEREND:event_enableAnimatedIconLabelMouseClicked
		this.enableAnimatedIcon.setSelected(!this.enableAnimatedIcon.isSelected());
	}//GEN-LAST:event_enableAnimatedIconLabelMouseClicked

	private void enableDbmsOutputLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_enableDbmsOutputLabelMouseClicked
	{//GEN-HEADEREND:event_enableDbmsOutputLabelMouseClicked
		this.enableDbmsOutput.setSelected(!this.enableDbmsOutput.isSelected());
		this.defaultBufferSize.setEnabled(this.enableDbmsOutput.isSelected());
	}//GEN-LAST:event_enableDbmsOutputLabelMouseClicked

	private void retrieveDbExplorerLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_retrieveDbExplorerLabelMouseClicked
	{//GEN-HEADEREND:event_retrieveDbExplorerLabelMouseClicked
		this.retrieveDbExplorer.setSelected(!this.retrieveDbExplorer.isSelected());
	}//GEN-LAST:event_retrieveDbExplorerLabelMouseClicked

	private void useEncryptionLabelMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_useEncryptionLabelMouseClicked
	{//GEN-HEADEREND:event_useEncryptionLabelMouseClicked
		this.useEncryption.setSelected(!this.useEncryption.isSelected());
	}//GEN-LAST:event_useEncryptionLabelMouseClicked

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
	{//GEN-HEADEREND:event_cancelButtonActionPerformed
		this.closeWindow();
	}//GEN-LAST:event_cancelButtonActionPerformed

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okButtonActionPerformed
	{//GEN-HEADEREND:event_okButtonActionPerformed
		if (this.saveSettings()) this.closeWindow();
	}//GEN-LAST:event_okButtonActionPerformed

	private boolean saveSettings()
	{
		Settings set = Settings.getInstance();
		set.setEditorErrorColor(errorColor.getSelectedColor());
		set.setEditorFont(editorFont.getSelectedFont());
		set.setStandardFont(standardFont.getSelectedFont());
		set.setMsgLogFont(msgLogFont.getSelectedFont());
		set.setDataFont(dataFont.getSelectedFont());
		set.setEditorSelectionColor(selectionColor.getSelectedColor());
		set.setRequiredFieldColor(requiredFieldColor.getSelectedColor());
		set.setHighlightRequiredFields(this.highlightRequired.isSelected());
		set.setShowDbExplorerInMainWindow(this.showDbExplorer.isSelected());
		set.setAlternateDelimiter(this.altDelimitTextField.getText());
		set.setDefaultDateFormat(this.dateFormatTextField.getText());
		set.setDefaultTimestampFormat(this.timestampFormatTextField.getText());
		set.setDecimalSymbol(this.decimalField.getText());
		set.setUseEncryption(this.useEncryption.isSelected());
		set.setRetrieveDbExplorer(retrieveDbExplorer.isSelected());
		set.setPreviewDml(this.previewDml.isSelected());
		set.setUseAnimatedIcon(this.enableAnimatedIcon.isSelected());
		set.setStoreExplorerSchema(this.storeExplorerSchema.isSelected());
		set.setStoreExplorerObjectType(this.rememberObject.isSelected());
		set.setRightClickMovesCursor(rightClickMovesCursor.isSelected());
		set.setMaxHistorySize(((NumberField)this.historySizeField).getValue());
		set.setMaxColumnWidth(((NumberField)this.maxColSizeField).getValue());
		set.setMaxFractionDigits(((NumberField)this.maxDigitsField).getValue());
		set.setDefaultTextDelimiter(this.textDelimiterField.getText());
		set.setQuoteChar(this.quoteCharField.getText().trim());
		set.setEnableDbmsOutput(this.enableDbmsOutput.isSelected());
		set.setShowFilenameInWindowTitle(this.windowTitleComboBox.getSelectedIndex());
		set.setProperty("workbench.dbexplorer.defTableType", this.defTableTypeField.getText());
		set.setConsolidateLogMsg(this.consolidateLog.isSelected());
    set.setEnableDbmsOutput(this.enableDbmsOutput.isSelected());
    set.setDbmsOutputDefaultBuffer(StringUtil.getIntValue(this.defaultBufferSize.getText(), -1));
		set.setAutoJumpNextStatement(this.autoAdvance.isSelected());
		set.setEditorTabWidth(StringUtil.getIntValue(this.tabSize.getText(), 2));
		set.setPKMappingFilename(pkMapFile.getText());
		return true;
	}

	public void showSettingsDialog(JFrame aReference)
	{
		this.dialog = new JDialog(aReference, true);
		this.dialog.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
		this.dialog.setTitle(ResourceMgr.getString("TxtSettingsDialogTitle"));
		this.dialog.getContentPane().add(this);
		int width = Settings.getInstance().getWindowWidth(this.getClass().getName());
		int height = Settings.getInstance().getWindowHeight(this.getClass().getName());
		if (width > 0 && height > 0)
		{
			this.dialog.setSize(width, height);
		}
		else
		{
			this.dialog.setSize(480,420);
		}
		
		this.dialog.getRootPane().setDefaultButton(this.okButton);

		JRootPane root = dialog.getRootPane();
		InputMap im = root.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		ActionMap am = root.getActionMap();
		EscAction esc = new EscAction(this);
		escActionCommand = esc.getActionName();
		im.put(esc.getAccelerator(), esc.getActionName());
		am.put(esc.getActionName(), esc);

		WbSwingUtilities.center(this.dialog, aReference);
		this.dialog.setVisible(true);
	}

	private void closeWindow()
	{
		Settings.getInstance().setWindowSize(this.getClass().getName(), this.dialog.getWidth(), this.dialog.getHeight());
		this.dialog.setVisible(false);
		this.dialog.dispose();
	}

	public void actionPerformed(java.awt.event.ActionEvent e)
	{
		if (e.getSource() == this.enableDbmsOutput)
		{
			this.defaultBufferSize.setEnabled(this.enableDbmsOutput.isSelected());
		}
		else if (e.getActionCommand().equals(escActionCommand))
		{
			this.closeWindow();
		}
	}

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel altDelimLabel;
  private javax.swing.JTextField altDelimitTextField;
  private javax.swing.JCheckBox autoAdvance;
  private javax.swing.JLabel autoAdvanceLabel;
  private javax.swing.JLabel bufferSizeLabel;
  private javax.swing.JPanel buttonPanel;
  private javax.swing.JButton cancelButton;
  private javax.swing.JCheckBox consolidateLog;
  private javax.swing.JLabel consolidateLogLabel;
  private javax.swing.JPanel dataEdit;
  private workbench.gui.components.WbFontPicker dataFont;
  private javax.swing.JLabel dataFontLabel;
  private javax.swing.JLabel dateFormatLabel;
  private javax.swing.JTextField dateFormatTextField;
  private javax.swing.JLabel dbExplorerLabel;
  private javax.swing.JTextField decimalField;
  private javax.swing.JLabel decimalLabel;
  private javax.swing.JTextField defTableTypeField;
  private javax.swing.JLabel defTableTypeLabel1;
  private javax.swing.JTextField defaultBufferSize;
  private workbench.gui.components.WbFontPicker editorFont;
  private javax.swing.JLabel editorFontLabel;
  private javax.swing.JPanel editorTab;
  private javax.swing.JLabel editorTabSizeLabel;
  private javax.swing.JTextField electricScroll;
  private javax.swing.JLabel electricScrollLabel;
  private javax.swing.JCheckBox enableAnimatedIcon;
  private javax.swing.JLabel enableAnimatedIconLabel;
  private javax.swing.JCheckBox enableDbmsOutput;
  private javax.swing.JLabel enableDbmsOutputLabel;
  private workbench.gui.components.WbColorPicker errorColor;
  private javax.swing.JLabel errorColorLabel;
  private javax.swing.JPanel explorerPanel;
  private javax.swing.JPanel generalPanel;
  private javax.swing.JCheckBox highlightRequired;
  private javax.swing.JLabel highlightRequiredLabel;
  private javax.swing.JTextField historySizeField;
  private javax.swing.JLabel historySizeLabel;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JTabbedPane mainTab;
  private javax.swing.JTextField maxColSizeField;
  private javax.swing.JLabel maxColSizeLabel;
  private javax.swing.JTextField maxDigitsField;
  private javax.swing.JLabel maxDigitsLabel;
  private javax.swing.JLabel msgFontLabel;
  private workbench.gui.components.WbFontPicker msgLogFont;
  private javax.swing.JButton okButton;
  private javax.swing.JTextField pkMapFile;
  private javax.swing.JLabel pkMapFileLabel;
  private javax.swing.JLabel pkMapLabel;
  private javax.swing.JCheckBox previewDml;
  private javax.swing.JLabel previewDmlLabel;
  private javax.swing.JTextField quoteCharField;
  private javax.swing.JLabel quoteCharLabel;
  private javax.swing.JCheckBox rememberObject;
  private javax.swing.JLabel rememberObjectLabel;
  private javax.swing.JLabel rememberSchemaLabel;
  private workbench.gui.components.WbColorPicker requiredFieldColor;
  private javax.swing.JLabel requiredFieldLabel;
  private javax.swing.JCheckBox retrieveDbExplorer;
  private javax.swing.JLabel retrieveDbExplorerLabel;
  private javax.swing.JLabel rightClickLabel;
  private javax.swing.JCheckBox rightClickMovesCursor;
  private javax.swing.JButton selectMapFile;
  private workbench.gui.components.WbColorPicker selectionColor;
  private javax.swing.JLabel selectionColorLabel;
  private javax.swing.JCheckBox showDbExplorer;
  private workbench.gui.components.WbFontPicker standardFont;
  private javax.swing.JLabel standardFontLabel;
  private javax.swing.JCheckBox storeExplorerSchema;
  private javax.swing.JTextField tabSize;
  private javax.swing.JTextField textDelimiterField;
  private javax.swing.JLabel textDelimiterLabel;
  private javax.swing.JLabel timestampFormatLabel;
  private javax.swing.JTextField timestampFormatTextField;
  private javax.swing.JCheckBox useEncryption;
  private javax.swing.JLabel useEncryptionLabel;
  private javax.swing.JComboBox windowTitleComboBox;
  // End of variables declaration//GEN-END:variables

	private JDialog dialog;

}
