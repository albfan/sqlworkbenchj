/*
 * SettingsPanel.java
 *
 * Created on August 20, 2002, 3:07 PM
 */

package workbench.gui.settings;

import java.awt.Font;
import java.awt.Frame;
import java.awt.Window;
import java.awt.event.ItemEvent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.WindowConstants;
import workbench.WbManager;
import workbench.gui.WbSwingUtilities;
import workbench.gui.components.NumberField;
import workbench.gui.components.WbFontChooser;
import workbench.resource.ResourceMgr;
import workbench.resource.Settings;

/**
 *
 * @author  sql.workbench@freenet.de
 */
public class SettingsPanel extends javax.swing.JPanel
{

	private Frame parent;
	
	/** Creates new form SettingsPanel */
	public SettingsPanel()
	{
		initComponents();
		this.fontsComboBox.addItem(new FontListEntry(Settings.STANDARD_FONT_KEY));
		this.fontsComboBox.addItem(new FontListEntry(Settings.EDITOR_FONT_KEY));
		this.fontsComboBox.addItem(new FontListEntry(Settings.MSGLOG_FONT_KEY));
		this.fontsComboBox.addItem(new FontListEntry(Settings.DATA_FONT_KEY));
		this.fontsComboBox.setSelectedIndex(0);
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	private void initComponents()//GEN-BEGIN:initComponents
	{
		java.awt.GridBagConstraints gridBagConstraints;
		
		mainTab = new javax.swing.JTabbedPane();
		generalPanel = new javax.swing.JPanel();
		showDbExplorer = new javax.swing.JCheckBox();
		dateFormatLabel = new javax.swing.JLabel();
		dateFormatTextField = new javax.swing.JTextField();
		dbExplorerLabel = new javax.swing.JLabel();
		altDelimLabel = new javax.swing.JLabel();
		altDelimitTextField = new javax.swing.JTextField();
		tabCountLabel = new javax.swing.JLabel();
		tabCountField = new NumberField();
		historySizeLabel = new javax.swing.JLabel();
		historySizeField = new NumberField();
		decimalLabel = new javax.swing.JLabel();
		decimalField = new javax.swing.JTextField();
		maxDigitsLabel = new javax.swing.JLabel();
		maxDigitsField = new NumberField();
		maxColSizeLabel = new javax.swing.JLabel();
		maxColSizeField = new NumberField();
		fontPanel = new javax.swing.JPanel();
		wbFontChooser1 = new workbench.gui.components.WbFontChooser();
		fontsComboBox = new javax.swing.JComboBox();
		buttonPanel = new javax.swing.JPanel();
		okButton = new javax.swing.JButton();
		cancelButton = new javax.swing.JButton();
		
		setLayout(new java.awt.BorderLayout());
		
		mainTab.setFont(null);
		generalPanel.setLayout(new java.awt.GridBagLayout());
		
		showDbExplorer.setFont(null);
		showDbExplorer.setSelected(WbManager.getSettings().getShowDbExplorerInMainWindow());
		showDbExplorer.setText("");
		showDbExplorer.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
		showDbExplorer.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
		showDbExplorer.setIconTextGap(5);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(9, 7, 0, 11);
		generalPanel.add(showDbExplorer, gridBagConstraints);
		
		dateFormatLabel.setFont(null);
		dateFormatLabel.setText(ResourceMgr.getString("LabelDateFormat"));
		dateFormatLabel.setToolTipText(ResourceMgr.getDescription("LabelDateFormat"));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
		generalPanel.add(dateFormatLabel, gridBagConstraints);
		
		dateFormatTextField.setColumns(10);
		dateFormatTextField.setFont(getFont());
		dateFormatTextField.setText(WbManager.getSettings().getDefaultDateFormat());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 11);
		generalPanel.add(dateFormatTextField, gridBagConstraints);
		
		dbExplorerLabel.setText(ResourceMgr.getString("LabelDbExplorerCheckBox"));
		dbExplorerLabel.setToolTipText(ResourceMgr.getDescription("LabelDbExplorerCheckBox"));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(9, 12, 0, 0);
		generalPanel.add(dbExplorerLabel, gridBagConstraints);
		
		altDelimLabel.setText(ResourceMgr.getString("LabelAltDelimit"));
		altDelimLabel.setToolTipText(ResourceMgr.getDescription("LabelAltDelimit"));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
		generalPanel.add(altDelimLabel, gridBagConstraints);
		
		altDelimitTextField.setColumns(10);
		altDelimitTextField.setText(WbManager.getSettings().getAlternateDelimiter());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 11);
		generalPanel.add(altDelimitTextField, gridBagConstraints);
		
		tabCountLabel.setText(ResourceMgr.getString("LabelTabCount"));
		tabCountLabel.setToolTipText(ResourceMgr.getDescription("LabelTabCount"));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
		generalPanel.add(tabCountLabel, gridBagConstraints);
		
		tabCountField.setColumns(10);
		tabCountField.setText(Integer.toString(WbManager.getSettings().getDefaultTabCount()));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 11);
		generalPanel.add(tabCountField, gridBagConstraints);
		
		historySizeLabel.setText(ResourceMgr.getString("LabelHistorySize"));
		historySizeLabel.setToolTipText(ResourceMgr.getDescription("LabelHistorySize"));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
		generalPanel.add(historySizeLabel, gridBagConstraints);
		
		historySizeField.setColumns(10);
		historySizeField.setText(Integer.toString(WbManager.getSettings().getMaxHistorySize()));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 11);
		generalPanel.add(historySizeField, gridBagConstraints);
		
		decimalLabel.setText(ResourceMgr.getString("LabelDecimalSymbol"));
		decimalLabel.setToolTipText(ResourceMgr.getDescription("LabelDecimalSymbol"));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
		generalPanel.add(decimalLabel, gridBagConstraints);
		
		decimalField.setColumns(10);
		decimalField.setText(WbManager.getSettings().getDecimalSymbol());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 12);
		generalPanel.add(decimalField, gridBagConstraints);
		
		maxDigitsLabel.setText(ResourceMgr.getString("LabelMaxDigits"));
		maxDigitsLabel.setToolTipText(ResourceMgr.getDescription("LabelMaxDigits"));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
		generalPanel.add(maxDigitsLabel, gridBagConstraints);
		
		maxDigitsField.setColumns(10);
		maxDigitsField.setText(Integer.toString(WbManager.getSettings().getMaxFractionDigits()));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.insets = new java.awt.Insets(0, 9, 0, 12);
		generalPanel.add(maxDigitsField, gridBagConstraints);
		
		maxColSizeLabel.setText(ResourceMgr.getString("LabelMaxColsize"));
		maxColSizeLabel.setToolTipText(ResourceMgr.getDescription("LabelMaxColsize"));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 7;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(0, 12, 8, 0);
		generalPanel.add(maxColSizeLabel, gridBagConstraints);
		
		maxColSizeField.setColumns(10);
		maxColSizeField.setText(Integer.toString(WbManager.getSettings().getMaxColumnWidth()));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 7;
		gridBagConstraints.insets = new java.awt.Insets(0, 9, 8, 12);
		generalPanel.add(maxColSizeField, gridBagConstraints);
		
		mainTab.addTab(ResourceMgr.getString("LabelSettingsGeneral"), generalPanel);
		
		fontPanel.setLayout(new java.awt.GridBagLayout());
		
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(7, 6, 7, 6);
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		fontPanel.add(wbFontChooser1, gridBagConstraints);
		
		fontsComboBox.addItemListener(new java.awt.event.ItemListener()
		{
			public void itemStateChanged(java.awt.event.ItemEvent evt)
			{
				fontsComboBoxItemStateChanged(evt);
			}
		});
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.insets = new java.awt.Insets(7, 6, 7, 6);
		fontPanel.add(fontsComboBox, gridBagConstraints);
		
		mainTab.addTab(ResourceMgr.getString("LabelSettingsFontsTab"), fontPanel);
		
		add(mainTab, java.awt.BorderLayout.CENTER);
		
		buttonPanel.setLayout(new java.awt.GridBagLayout());
		
		okButton.setText(ResourceMgr.getString("LabelOK"));
		okButton.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				okButtonActionPerformed(evt);
			}
		});
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(7, 0, 7, 10);
		buttonPanel.add(okButton, gridBagConstraints);
		
		cancelButton.setText(ResourceMgr.getString("LabelCancel"));
		cancelButton.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				cancelButtonActionPerformed(evt);
			}
		});
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(7, 0, 7, 4);
		buttonPanel.add(cancelButton, gridBagConstraints);
		
		add(buttonPanel, java.awt.BorderLayout.SOUTH);
		
	}//GEN-END:initComponents

	private void fontsComboBoxItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_fontsComboBoxItemStateChanged
	{//GEN-HEADEREND:event_fontsComboBoxItemStateChanged
		FontListEntry entry;
		if (evt.getStateChange() == ItemEvent.DESELECTED)
		{
			entry = (FontListEntry)evt.getItem();
			entry.currentFont = this.wbFontChooser1.getSelectedFont();
		}
		else if (evt.getStateChange() == ItemEvent.SELECTED)
		{
			entry = (FontListEntry)evt.getItem();
			this.wbFontChooser1.setSelectedFont(entry.currentFont);
			this.fontsComboBox.setToolTipText(entry.tooltip);
		}
	}//GEN-LAST:event_fontsComboBoxItemStateChanged

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonActionPerformed
	{//GEN-HEADEREND:event_cancelButtonActionPerformed
		this.closeWindow();
	}//GEN-LAST:event_cancelButtonActionPerformed

	private void okButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okButtonActionPerformed
	{//GEN-HEADEREND:event_okButtonActionPerformed
		if (this.saveSettings()) this.closeWindow();
	}//GEN-LAST:event_okButtonActionPerformed
	
	private String getFontDisplay(Font aFont)
	{
		StringBuffer result = new StringBuffer(aFont.getName());
		result.append(' ');
		result.append(aFont.getSize());
		result.append(' ');
		return result.toString();
	}
	
	private boolean saveSettings()
	{
		Settings set = WbManager.getSettings();
		set.setShowDbExplorerInMainWindow(this.showDbExplorer.isSelected());
		set.setAlternateDelimiter(this.altDelimitTextField.getText());
		set.setDefaultDateFormat(this.dateFormatTextField.getText());
		set.setDecimalSymbol(this.decimalField.getText());
		
		set.setDefaultTabCount(((NumberField)this.tabCountField).getValue());
		set.setMaxHistorySize(((NumberField)this.historySizeField).getValue());
		set.setMaxColumnWidth(((NumberField)this.maxColSizeField).getValue());
		set.setMaxFractionDigits(((NumberField)this.maxDigitsField).getValue());

		FontListEntry entry = (FontListEntry)this.fontsComboBox.getSelectedItem();
		entry.currentFont = this.wbFontChooser1.getSelectedFont();
		
		for (int i=0; i < this.fontsComboBox.getItemCount(); i++)
		{
			entry = (FontListEntry)this.fontsComboBox.getItemAt(i);
			set.setFont(entry.key, entry.currentFont);
		}
		return true;
	}
	
	public void showSettingsDialog(JFrame aReference)
	{
		this.parent = aReference;
		this.dialog = new JDialog(aReference, true);
		this.dialog.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
		this.dialog.setTitle(ResourceMgr.getString("TxtSettingsDialogTitle"));
		this.dialog.getContentPane().add(this);
		this.dialog.pack();
		WbSwingUtilities.center(this.dialog, aReference);
		this.dialog.show();
	}

	private void closeWindow()
	{
		this.dialog.dispose();
	}
	
	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel historySizeLabel;
	private javax.swing.JPanel generalPanel;
	private javax.swing.JCheckBox showDbExplorer;
	private javax.swing.JPanel fontPanel;
	private javax.swing.JPanel buttonPanel;
	private workbench.gui.components.WbFontChooser wbFontChooser1;
	private javax.swing.JTextField maxDigitsField;
	private javax.swing.JLabel dateFormatLabel;
	private javax.swing.JButton okButton;
	private javax.swing.JLabel maxDigitsLabel;
	private javax.swing.JTextField decimalField;
	private javax.swing.JLabel decimalLabel;
	private javax.swing.JTextField tabCountField;
	private javax.swing.JTextField maxColSizeField;
	private javax.swing.JTextField altDelimitTextField;
	private javax.swing.JTabbedPane mainTab;
	private javax.swing.JLabel tabCountLabel;
	private javax.swing.JLabel maxColSizeLabel;
	private javax.swing.JLabel dbExplorerLabel;
	private javax.swing.JLabel altDelimLabel;
	private javax.swing.JButton cancelButton;
	private javax.swing.JTextField dateFormatTextField;
	private javax.swing.JTextField historySizeField;
	private javax.swing.JComboBox fontsComboBox;
	// End of variables declaration//GEN-END:variables

	private JDialog dialog;
	
	private class FontListEntry
	{
		String displayName;
		String key;
		Font currentFont;
		String tooltip;
		public FontListEntry(String aKey)
		{
			this.displayName = ResourceMgr.getString("Label"+ aKey + "Font");
			this.key = aKey;
			this.currentFont = WbManager.getSettings().getFont(aKey);
			this.tooltip = ResourceMgr.getDescription("Label"+ aKey + "Font");
		}
		public String toString() { return this.displayName; }
	}
	
	
}
