/*
 * CompletionOptionsPanel.java
 *
 * This file is part of SQL Workbench/J, http://www.sql-workbench.net
 *
 * Copyright 2002-2011, Thomas Kellerer
 * No part of this code maybe reused without the permission of the author
 *
 * To contact the author please send an email to: support@sql-workbench.net
 *
 */
package workbench.gui.settings;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import workbench.interfaces.Restoreable;
import workbench.resource.ColumnSortType;
import workbench.resource.GuiSettings;
import workbench.resource.ResourceMgr;
import workbench.resource.Settings;

/**
 *
 * @author tkellerer
 */
public class CompletionOptionsPanel
	extends JPanel
	implements Restoreable
{
	public CompletionOptionsPanel()
	{
		initComponents();
	}

	@Override
	public void restoreSettings()
	{
		String[] pasteCase = new String[] {
			ResourceMgr.getString("LblLowercase"),
			ResourceMgr.getString("LblUppercase"),
			ResourceMgr.getString("LblAsIs")
		};
		completionPasteCase.setModel(new DefaultComboBoxModel(pasteCase));
		String paste = Settings.getInstance().getAutoCompletionPasteCase();
		if ("lower".equals(paste)) this.completionPasteCase.setSelectedIndex(0);
		else if ("upper".equals(paste)) this.completionPasteCase.setSelectedIndex(1);
		else this.completionPasteCase.setSelectedIndex(2);

		String[] sortItems = new String[] {
			ResourceMgr.getString("LblSortPastColName"),
			ResourceMgr.getString("LblSortPastColPos")
		};
		completionColumnSort.setModel(new DefaultComboBoxModel(sortItems));

		ColumnSortType sort = Settings.getInstance().getAutoCompletionColumnSortType();
		if (sort == ColumnSortType.position)
		{
			this.completionColumnSort.setSelectedIndex(1);
		}
		else
		{
			this.completionColumnSort.setSelectedIndex(0);
		}
		closePopup.setSelected(Settings.getInstance().getCloseAutoCompletionWithSearch());
		filterSearch.setSelected(GuiSettings.getFilterCompletionSearch());
		partialMatch.setSelected(GuiSettings.getPartialCompletionSearch());
		sortColumns.setSelected(GuiSettings.getSortCompletionColumns());
	}

	@Override
	public void saveSettings()
	{
		Settings set = Settings.getInstance();
		int index = this.completionPasteCase.getSelectedIndex();
		if (index == 0)
		{
			set.setAutoCompletionPasteCase("lower");
		}
		else if (index == 1)
		{
			set.setAutoCompletionPasteCase("upper");
		}
		else
		{
			set.setAutoCompletionPasteCase(null);
		}

		set.setCloseAutoCompletionWithSearch(closePopup.isSelected());
		index = completionColumnSort.getSelectedIndex();
		if (index == 1)
		{
			set.setAutoCompletionColumnSort(ColumnSortType.position);
		}
		else
		{
			set.setAutoCompletionColumnSort(ColumnSortType.name);
		}
		GuiSettings.setFilterCompletionSearch(filterSearch.isSelected());
		GuiSettings.setPartialCompletionSearch(partialMatch.isSelected());
		GuiSettings.setSortCompletionColumns(sortColumns.isSelected());
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
		GridBagConstraints gridBagConstraints;

    pasteLabel = new JLabel();
    completionPasteCase = new JComboBox();
    closePopup = new JCheckBox();
    completionColumnSort = new JComboBox();
    pasterOrderLabel = new JLabel();
    sortColumns = new JCheckBox();
    partialMatch = new JCheckBox();
    filterSearch = new JCheckBox();

    setLayout(new GridBagLayout());

    pasteLabel.setText(ResourceMgr.getString("LblPasteCase")); // NOI18N
    pasteLabel.setToolTipText(ResourceMgr.getString("d_LblPasteCase")); // NOI18N
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new Insets(11, 12, 0, 0);
    add(pasteLabel, gridBagConstraints);

    completionPasteCase.setModel(new DefaultComboBoxModel(new String[] { "Lowercase", "Uppercase", "As is" }));
    completionPasteCase.setToolTipText(ResourceMgr.getDescription("LblPasteCase"));
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new Insets(8, 11, 0, 15);
    add(completionPasteCase, gridBagConstraints);

    closePopup.setText(ResourceMgr.getString("TxtCloseCompletion")); // NOI18N
    closePopup.setToolTipText(ResourceMgr.getString("d_TxtCloseCompletion")); // NOI18N
    closePopup.setBorder(null);
    closePopup.setHorizontalAlignment(SwingConstants.LEFT);
    closePopup.setHorizontalTextPosition(SwingConstants.RIGHT);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new Insets(11, 12, 0, 0);
    add(closePopup, gridBagConstraints);

    completionColumnSort.setToolTipText(ResourceMgr.getDescription("LblPasteSort"));
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new Insets(6, 11, 0, 15);
    add(completionColumnSort, gridBagConstraints);

    pasterOrderLabel.setText(ResourceMgr.getString("LblPasteSort")); // NOI18N
    pasterOrderLabel.setToolTipText(ResourceMgr.getString("d_LblPasteSort")); // NOI18N
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new Insets(9, 12, 0, 0);
    add(pasterOrderLabel, gridBagConstraints);

    sortColumns.setText(ResourceMgr.getString("LblCompletionSortCols")); // NOI18N
    sortColumns.setToolTipText(ResourceMgr.getString("d_LblCompletionSortCols")); // NOI18N
    sortColumns.setBorder(null);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new Insets(11, 12, 0, 0);
    add(sortColumns, gridBagConstraints);

    partialMatch.setText(ResourceMgr.getString("LblCompletionPartialMatch")); // NOI18N
    partialMatch.setToolTipText(ResourceMgr.getString("d_LblCompletionPartialMatch")); // NOI18N
    partialMatch.setBorder(null);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new Insets(9, 12, 0, 0);
    add(partialMatch, gridBagConstraints);

    filterSearch.setText(ResourceMgr.getString("LblCompletionFilterSearch")); // NOI18N
    filterSearch.setToolTipText(ResourceMgr.getString("d_LblCompletionFilterSearch")); // NOI18N
    filterSearch.setBorder(null);
    gridBagConstraints = new GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.anchor = GridBagConstraints.NORTHWEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new Insets(9, 12, 0, 0);
    add(filterSearch, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JCheckBox closePopup;
  private JComboBox completionColumnSort;
  private JComboBox completionPasteCase;
  private JCheckBox filterSearch;
  private JCheckBox partialMatch;
  private JLabel pasteLabel;
  private JLabel pasterOrderLabel;
  private JCheckBox sortColumns;
  // End of variables declaration//GEN-END:variables
}
