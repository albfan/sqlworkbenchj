/*
 * WbColorPicker.java
 *
 * This file is part of SQL Workbench/J, http://www.sql-workbench.net
 *
 * Copyright 2002-2011, Thomas Kellerer
 * No part of this code maybe reused without the permission of the author
 *
 * To contact the author please send an email to: support@sql-workbench.net
 *
 */
package workbench.gui.components;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.Serializable;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JColorChooser;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.border.BevelBorder;
import javax.swing.border.Border;
import workbench.resource.ResourceMgr;

/**
 *
 * @author Thomas Kellerer
 */
public class WbColorPicker
	extends javax.swing.JPanel
	implements Serializable
{
	private Border sampleBorder;
	private ActionListener actionListener;

	public WbColorPicker()
	{
		this(false);
	}

	public WbColorPicker(boolean showReset)
	{
		super();
		initComponents();
		this.resetButton.setEnabled(showReset);
		this.resetButton.setVisible(showReset);
		if (showReset)
		{
			this.resetButton.setIcon(ResourceMgr.getImage("Delete"));
		}
		this.defaultLabel.setVisible(false);
		Dimension d = null;
		if (showReset)
		{
			d = resetButton.getPreferredSize();
		}
		else
		{
			d = selectColor.getPreferredSize();
		}
		d.height--;
		d.width--;
		this.sampleColor.setPreferredSize(d);
		this.sampleBorder = new BevelBorder(BevelBorder.LOWERED);
	}

	/**
	 * Define the displayed label when no color is selected by supplying
	 * the resource key.
	 * 
	 * @param key
	 */
	public void setDefaultLabelKey(String key)
	{
		defaultLabel.setText(ResourceMgr.getString(key));
	}
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    infoPanel = new JPanel();
    sampleColor = new WbLabelField();
    resetButton = new FlatButton();
    selectColor = new FlatButton();
    defaultLabel = new JLabel();

    setLayout(new FlowLayout(FlowLayout.LEFT, 0, 0));

    infoPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 0));

    sampleColor.setMinimumSize(new Dimension(18, 18));
    sampleColor.setPreferredSize(new Dimension(18, 18));
    infoPanel.add(sampleColor);

    resetButton.setToolTipText(ResourceMgr.getDescription("LblResetColor"));
    resetButton.setMaximumSize(new Dimension(22, 22));
    resetButton.setMinimumSize(new Dimension(22, 22));
    resetButton.setPreferredSize(new Dimension(22, 22));
    resetButton.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        resetButtonActionPerformed(evt);
      }
    });
    infoPanel.add(resetButton);

    selectColor.setText("...");
    selectColor.setMargin(new Insets(0, 0, 0, 0));
    selectColor.setMaximumSize(new Dimension(22, 22));
    selectColor.setMinimumSize(new Dimension(22, 22));
    selectColor.setPreferredSize(new Dimension(22, 22));
    selectColor.addMouseListener(new MouseAdapter() {
      public void mouseClicked(MouseEvent evt) {
        selectColorMouseClicked(evt);
      }
    });
    infoPanel.add(selectColor);

    defaultLabel.setText(ResourceMgr.getString("LblNone")); // NOI18N
    infoPanel.add(defaultLabel);

    add(infoPanel);
  }// </editor-fold>//GEN-END:initComponents

	private void selectColorMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_selectColorMouseClicked
	{//GEN-HEADEREND:event_selectColorMouseClicked
		Color newColor = JColorChooser.showDialog(SwingUtilities.getWindowAncestor(this),
			ResourceMgr.getString("TxtSelectColor"), this.getSelectedColor());
		if (newColor != null)
		{
			this.setSelectedColor(newColor);
			fireColorChanged();
		}
	}//GEN-LAST:event_selectColorMouseClicked

	private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
		resetColor();
		fireColorChanged();
	}//GEN-LAST:event_resetButtonActionPerformed

	private void fireColorChanged()
	{
		if (this.actionListener != null)
		{
			this.actionListener.actionPerformed(new ActionEvent(this, 1,"color-changed"));
		}
	}

	public void setActionListener(ActionListener l)
	{
		this.actionListener = l;
	}

	private void resetColor()
	{
		this.resetButton.setEnabled(false);
		this.sampleColor.setBackground(this.getBackground());
		this.sampleColor.setBorder(BorderFactory.createLineBorder(Color.LIGHT_GRAY));
		this.defaultLabel.setVisible(true);
	}

	public void setSelectedColor(Color c)
	{
		if (c == null)
		{
			resetColor();
		}
		else
		{
			this.resetButton.setEnabled(true);
			defaultLabel.setVisible(false);
			sampleColor.setBackground(c);
			sampleColor.setBorder(sampleBorder);
		}
	}

	public Color getSelectedColor()
	{
		if (this.defaultLabel.isVisible())
		{
			return null;
		}
		else
		{
			return sampleColor.getBackground();
		}
	}
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JLabel defaultLabel;
  private JPanel infoPanel;
  private JButton resetButton;
  private WbLabelField sampleColor;
  private JButton selectColor;
  // End of variables declaration//GEN-END:variables
}
