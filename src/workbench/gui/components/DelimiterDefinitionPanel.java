/*
 * DelimiterDefinitionPanel.java
 *
 * This file is part of SQL Workbench/J, http://www.sql-workbench.net
 *
 * Copyright 2002-2007, Thomas Kellerer
 * No part of this code maybe reused without the permission of the author
 *
 * To contact the author please send an email to: support@sql-workbench.net
 *
 */
package workbench.gui.components;

import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeListener;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JPanel;
import workbench.interfaces.SimplePropertyEditor;
import workbench.resource.ResourceMgr;
import workbench.sql.DelimiterDefinition;

/**
 *
 * @author support@sql-workbench.net
 */
public class DelimiterDefinitionPanel 
	extends JPanel
	implements PropertyChangeListener
{
	private List<PropertyChangeListener> listener;
	private DelimiterDefinition delimiter;
	
	public DelimiterDefinitionPanel()
	{
		initComponents();
		SimplePropertyEditor ed = null;
		ed = (SimplePropertyEditor)this.delimitTextField;
		ed.addPropertyChangeListener(this);
		ed.setImmediateUpdate(true);
		
		ed = (SimplePropertyEditor)this.singleLineCheckBox;
		ed.addPropertyChangeListener(this);
		ed.setImmediateUpdate(true);
	}

	public void setDelimiter(DelimiterDefinition delim)
	{
		if (delim != null)
		{
			this.delimiter = delim;
		}
		else
		{
			this.delimiter = new DelimiterDefinition();
		}
		this.delimitTextField.setText(this.delimiter.getDelimiter());
		this.singleLineCheckBox.setSelected(this.delimiter.isSingleLine());
		SimplePropertyEditor ed = null;
		ed = (SimplePropertyEditor)this.delimitTextField;
		ed.setSourceObject(delimiter, "delimiter");
		
		ed = (SimplePropertyEditor)this.singleLineCheckBox;
		ed.setSourceObject(delimiter, "singleLine");
	}

	public DelimiterDefinition getDelimiter()
	{
		return this.delimiter;
	}
	
	public void addPropertyChangeListener(PropertyChangeListener l)
	{
		if (this.listener == null) this.listener = new LinkedList();
		this.listener.add(l);
	}

	/** This method gets called when a bound property is changed.
	 * @param evt A PropertyChangeEvent object describing the event source
	 * and the property that has changed.
	 *
	 */
	public void propertyChange(PropertyChangeEvent evt)
	{
		if (this.listener == null) return;
		Iterator<PropertyChangeListener> itr = listener.iterator();
		while (itr.hasNext())
		{
			itr.next().propertyChange(evt);
		}
	}
	
	public javax.swing.JTextField getTextField()
	{
		return this.delimitTextField;
	}
	
	public javax.swing.JCheckBox getCheckBox()
	{
		return this.singleLineCheckBox;
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints;

    delimitTextField = new StringPropertyEditor();
    singleLineCheckBox = new BooleanPropertyEditor();

    setLayout(new java.awt.GridBagLayout());

    delimitTextField.setMinimumSize(new java.awt.Dimension(72, 20));
    delimitTextField.setName("delimiter");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 0.5;
    add(delimitTextField, gridBagConstraints);

    singleLineCheckBox.setText(ResourceMgr.getString("LblDelimSingleLine"));
    singleLineCheckBox.setToolTipText(ResourceMgr.getDescription("LblDelimSingleLine"));
    singleLineCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
    singleLineCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 0.5;
    gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
    add(singleLineCheckBox, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField delimitTextField;
  private javax.swing.JCheckBox singleLineCheckBox;
  // End of variables declaration//GEN-END:variables

}
