/*
 * WbFontPicker.java
 *
 * This file is part of SQL Workbench/J, http://www.sql-workbench.net
 *
 * Copyright 2002-2007, Thomas Kellerer
 * No part of this code maybe reused without the permission of the author
 *
 * To contact the author please send an email to: support@sql-workbench.net
 *
 */
package workbench.gui.components;

import java.awt.Font;
import java.io.Serializable;
import javax.swing.JPanel;

/**
 *
 * @author support@sql-workbench.net
 */
public class WbFontPicker 
	extends JPanel
	implements Serializable
{
	private Font selectedFont;
	private boolean monospacedOnly = false;
	
	/** Creates new form WbFontPicker */
	public WbFontPicker()
	{
		initComponents();
	}
	
	public void setListMonospacedOnly(boolean flag)
	{
		this.monospacedOnly = flag;
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
  private void initComponents()
  {
    java.awt.GridBagConstraints gridBagConstraints;

    fontName = new javax.swing.JLabel();
    selectFontButton = new FlatButton();

    setLayout(new java.awt.GridBagLayout());

    fontName.setText("jLabel1");
    fontName.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), javax.swing.BorderFactory.createEmptyBorder(1, 5, 1, 5)));
    fontName.setMaximumSize(new java.awt.Dimension(45, 22));
    fontName.setMinimumSize(new java.awt.Dimension(45, 22));
    fontName.setPreferredSize(new java.awt.Dimension(45, 22));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
    add(fontName, gridBagConstraints);

    selectFontButton.setText("...");
    selectFontButton.setMaximumSize(new java.awt.Dimension(22, 22));
    selectFontButton.setMinimumSize(new java.awt.Dimension(22, 22));
    selectFontButton.setPreferredSize(new java.awt.Dimension(22, 22));
    selectFontButton.addMouseListener(new java.awt.event.MouseAdapter()
    {
      public void mouseClicked(java.awt.event.MouseEvent evt)
      {
        selectFontButtonMouseClicked(evt);
      }
    });

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    add(selectFontButton, gridBagConstraints);

  }// </editor-fold>//GEN-END:initComponents

	private void selectFontButtonMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_selectFontButtonMouseClicked
	{//GEN-HEADEREND:event_selectFontButtonMouseClicked
		Font f = WbFontChooser.chooseFont(this, this.selectedFont, monospacedOnly);
		if (f != null)
		{
			this.setSelectedFont(f);
		}
	}//GEN-LAST:event_selectFontButtonMouseClicked
	
	public Font getSelectedFont()
	{
		return this.selectedFont;
	}
	
	public void setSelectedFont(Font f)
	{
		if (f == null) 
		{
			this.fontName.setText("");
		}
		else
		{
			this.selectedFont = f;
			this.fontName.setText(f.getFontName() + ", " + f.getSize());
			this.fontName.setFont(f);
		}
	}
	
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel fontName;
  private javax.swing.JButton selectFontButton;
  // End of variables declaration//GEN-END:variables
	
}
