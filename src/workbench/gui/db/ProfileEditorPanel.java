/*
 * ProfileEditor.java
 *
 * Created on 1. Juli 2002, 18:34
 */

package workbench.gui.db;

import java.awt.BorderLayout;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.JDialog;
import javax.swing.ListModel;
import javax.swing.border.Border;
import workbench.WbManager;
import workbench.db.ConnectionProfile;

/**
 *
 * @author  thomas.kellerer@inline-skate.com
 */
public class ProfileEditorPanel extends javax.swing.JPanel
{
	private ConnectionEditorPanel connectionEditor;
	private Map profiles;
	
	/** Creates new form ProfileEditor */
	public ProfileEditorPanel()
	{
		initComponents();
		String last = WbManager.getSettings().getLastConnection();
		try
		{
			ListModel m = jList1.getModel();
			int count = m.getSize();
			
			for (int i=0; i < count; i++)
			{
				ConnectionProfile prof = (ConnectionProfile)m.getElementAt(i);
				if (prof.getName().equals(last))
				{
					jList1.setSelectedIndex(i);
					break;
				}
			}
		}
		catch (Exception e)
		{
			jList1.setSelectedIndex(0);
		}
		jList1.setNextFocusableComponent(connectionEditor);
		this.connectionEditor.setNextFocusableComponent(jList1);
		//jSplitPane1.setBorder(BorderFactory.createEmptyBorder());
//		Border b = BorderFactory.createCompoundBorder(BorderFactory.createEtchedBorder(), BorderFactory.createLoweredBevelBorder());
//		jList1.setBorder(b);
//		this.connectionEditor.setBorder(BorderFactory.createEtchedBorder());
	}
	
	private void initConnectionEditor()
	{
		long start, end;
		this.connectionEditor = new ConnectionEditorPanel();
		List drivers = WbManager.getInstance().getConnectionMgr().getDrivers();
		this.connectionEditor.setDrivers(drivers);
	}
	
	private void fillProfiles()
	{
		this.profiles = WbManager.getInstance().getConnectionMgr().getProfiles();
		Object[] l = this.profiles.values().toArray();
		Arrays.sort(l, ConnectionProfile.getNameComparator());
		jList1.setListData(l);
	}
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
  private void initComponents()//GEN-BEGIN:initComponents
  {
    jSplitPane1 = new javax.swing.JSplitPane();
    this.initConnectionEditor();
    jSplitPane1.setRightComponent(this.connectionEditor);
    jList1 = new javax.swing.JList();

    setLayout(new java.awt.BorderLayout());

    jSplitPane1.setBorder(new javax.swing.border.EtchedBorder());
    jSplitPane1.setDividerLocation(100);
    jSplitPane1.setDividerSize(5);
    jList1.setFont(null);
    this.fillProfiles();
    jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener()
    {
      public void valueChanged(javax.swing.event.ListSelectionEvent evt)
      {
        jList1ValueChanged(evt);
      }
    });

    jSplitPane1.setLeftComponent(jList1);

    add(jSplitPane1, java.awt.BorderLayout.CENTER);

  }//GEN-END:initComponents

	private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_jList1ValueChanged
	{//GEN-HEADEREND:event_jList1ValueChanged
		if (evt.getSource() == this.jList1)
		{
			ConnectionProfile newProfile = (ConnectionProfile)this.jList1.getSelectedValue();
			this.connectionEditor.setProfile(newProfile);
		}
	}//GEN-LAST:event_jList1ValueChanged
	
	public ConnectionProfile getSelectedProfile()
	{
		ConnectionProfile prof = this.connectionEditor.getProfile();
		ConnectionProfile prof2 = (ConnectionProfile)jList1.getSelectedValue();
		// two profiles are equal if their driver, url and username are equal
		// in this case 
		if (prof.equals(prof2)) 
		{
			return prof2;
		}
		else
		{
			return prof;
		}
	}
	
	
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JSplitPane jSplitPane1;
  private javax.swing.JList jList1;
  // End of variables declaration//GEN-END:variables
	
	public static void main(String args[])
	{
		JDialog f = new JDialog();
		ProfileEditorPanel p = new ProfileEditorPanel();
		f.getContentPane().add(p);
		f.setSize(400, 200);
		//f.pack();
		f.show();
	}

	
}
