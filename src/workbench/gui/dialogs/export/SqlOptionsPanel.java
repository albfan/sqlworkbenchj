/*
 * SqlOptionsPanel.java
 *
 * This file is part of SQL Workbench/J, http://www.sql-workbench.net
 *
 * Copyright 2002-2004, Thomas Kellerer
 * No part of this code maybe reused without the permission of the author
 *
 * To contact the author please send an email to: info@sql-workbench.net
 *
 */

package workbench.gui.dialogs.export;

import workbench.resource.Settings;

/**
 *
 * @author  info@sql-workbench.net
 */
public class SqlOptionsPanel 
	extends javax.swing.JPanel
	implements SqlOptions
{
	
	/** Creates new form SqlOptionsPanel */
	public SqlOptionsPanel()
	{
		initComponents();
	}

	public void saveSettings()
	{
		Settings s = Settings.getInstance();
		s.setProperty("workbench.export.sql.commitevery", this.getCommitEvery());
		s.setBoolProperty("workbench.export.sql.createtable", this.getCreateTable());
	}
	
	public void restoreSettings()
	{
		Settings s = Settings.getInstance();
		this.setCommitEvery(s.getIntProperty("workbench.export.sql.commitevery", 0));
		this.setCreateTable(s.getBoolProperty("workbench.export.sql.createtable"));
	}
	
	public String getAlternateUpdateTable()
	{
		String s = alternateTable.getText();
		if (s != null && s.trim().length() > 0) return s.trim();
		return null;
	}
	
	public void setAlternateUpdateTable(String table)
	{
		this.alternateTable.setText((table == null ? "" : table.trim()));
	}

	public int getCommitEvery()
	{
		int result = -1;
		try
		{
			String value = this.commitCount.getText();
			if (value != null && value.length() > 0)
			{
				result = Integer.parseInt(value);
			}
			else
			{
				result = 0;
			}
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
		return result;
	}

	public void setSqlUpdateAvailable(boolean flag)
	{
		if (flag)
		{
			useUpdate.setEnabled(true);
		}
		else
		{
			useInsert.setSelected(true);
			useUpdate.setEnabled(false);
		}
	}
	
	public boolean getCreateInsert()
	{
		if (useInsert.isSelected()) return true;
		return false;
	}

	public boolean getCreateTable()
	{
		return createTable.isSelected();
	}

	public void setCommitEvery(int value)
	{
		if (value > 0)
		{
			this.commitCount.setText(Integer.toString(value));
		}
		else
		{
			this.commitCount.setText("");
		}
	}

	public void setCreateInsert(boolean flag)
	{
		if (flag) this.useInsert.setSelected(true);
		else if (this.useUpdate.isEnabled()) useUpdate.setSelected(true);
	}

	public void setCreateTable(boolean flag)
	{
		this.createTable.setSelected(flag);
	}
	
	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
  private void initComponents()//GEN-BEGIN:initComponents
  {
    java.awt.GridBagConstraints gridBagConstraints;

    typeGroup = new javax.swing.ButtonGroup();
    commitLabel = new javax.swing.JLabel();
    commitCount = new javax.swing.JTextField();
    createTable = new javax.swing.JCheckBox();
    useUpdate = new javax.swing.JRadioButton();
    useInsert = new javax.swing.JRadioButton();
    alternateTable = new javax.swing.JTextField();
    jLabel1 = new javax.swing.JLabel();

    setLayout(new java.awt.GridBagLayout());

    commitLabel.setText(java.util.ResourceBundle.getBundle("language/wbstrings").getString("LabelExportCommitEvery"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
    add(commitLabel, gridBagConstraints);

    commitCount.setColumns(5);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 4);
    add(commitCount, gridBagConstraints);

    createTable.setText(java.util.ResourceBundle.getBundle("language/wbstrings").getString("LabelExportIncludeCreateTable"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
    add(createTable, gridBagConstraints);

    typeGroup.add(useUpdate);
    useUpdate.setText(java.util.ResourceBundle.getBundle("language/wbstrings").getString("LabelExportSqlUpdate"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    add(useUpdate, gridBagConstraints);

    typeGroup.add(useInsert);
    useInsert.setSelected(true);
    useInsert.setText(java.util.ResourceBundle.getBundle("language/wbstrings").getString("LabelExportSqlInsert"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
    add(useInsert, gridBagConstraints);

    alternateTable.setColumns(15);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(2, 4, 0, 0);
    add(alternateTable, gridBagConstraints);

    jLabel1.setText(java.util.ResourceBundle.getBundle("language/wbstrings").getString("LabelUseExportTableName"));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 0, 0);
    add(jLabel1, gridBagConstraints);

  }//GEN-END:initComponents
	
	
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField alternateTable;
  private javax.swing.JTextField commitCount;
  private javax.swing.JLabel commitLabel;
  private javax.swing.JCheckBox createTable;
  private javax.swing.JLabel jLabel1;
  private javax.swing.ButtonGroup typeGroup;
  private javax.swing.JRadioButton useInsert;
  private javax.swing.JRadioButton useUpdate;
  // End of variables declaration//GEN-END:variables
	
}
