/*
 * ConnectionEditorPanel.java
 *
 * Created on January 25, 2002, 11:27 PM
 */

package workbench.gui.profiles;

import java.awt.Component;
import java.awt.Frame;
import java.awt.event.ItemEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import workbench.WbManager;
import workbench.db.ConnectionProfile;
import workbench.db.DbDriver;
import workbench.gui.WbSwingUtilities;
import workbench.gui.components.BooleanPropertyEditor;
import workbench.gui.components.ComboStringPropertyEditor;
import workbench.gui.components.StringPropertyEditor;
import workbench.gui.components.TextComponentMouseListener;
import workbench.interfaces.SimplePropertyEditor;
import workbench.resource.ResourceMgr;

/**
 *
 * @author  workbench@kellerer.org
 */
public class ConnectionEditorPanel extends JPanel
{
	private ConnectionProfile currentProfile;
	private List drivers;
	private ProfileListModel sourceModel;
	private boolean init;
	private List editors;
	
	public ConnectionEditorPanel()
	{
		this.initComponents();
		this.initEditorList();
	}
	
	private void initEditorList()
	{
		this.editors = new ArrayList(10);
		for (int i=0; i < this.getComponentCount(); i++)
		{
			Component c = this.getComponent(i);
			if (c instanceof SimplePropertyEditor)
			{
				this.editors.add(c);
			}
		}
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	private void initComponents()//GEN-BEGIN:initComponents
	{
		java.awt.GridBagConstraints gridBagConstraints;
		
		lblUsername = new javax.swing.JLabel();
		tfUserName = new StringPropertyEditor();
		lblPwd = new javax.swing.JLabel();
		jLabel1 = new javax.swing.JLabel();
		cbDrivers = new ComboStringPropertyEditor();
		jLabel2 = new javax.swing.JLabel();
		tfURL = new StringPropertyEditor();
		tfPwd = new javax.swing.JPasswordField();
		cbAutocommit = new BooleanPropertyEditor();
		dummy = new javax.swing.JPanel();
		tfProfileName = new StringPropertyEditor();
		manageDriversButton = new javax.swing.JButton();
		
		setLayout(new java.awt.GridBagLayout());
		
		setMinimumSize(new java.awt.Dimension(200, 200));
		lblUsername.setText(ResourceMgr.getString(ResourceMgr.TXT_DB_USERNAME));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 0);
		add(lblUsername, gridBagConstraints);
		
		tfUserName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
		tfUserName.setToolTipText("");
		tfUserName.setMaximumSize(new java.awt.Dimension(2147483647, 20));
		tfUserName.setMinimumSize(new java.awt.Dimension(40, 20));
		tfUserName.setName("username");
		tfUserName.setPreferredSize(new java.awt.Dimension(100, 20));
		tfUserName.addMouseListener(new TextComponentMouseListener());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 4, 2, 6);
		add(tfUserName, gridBagConstraints);
		
		lblPwd.setText(ResourceMgr.getString(ResourceMgr.TXT_DB_PASSWORD));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
		add(lblPwd, gridBagConstraints);
		
		jLabel1.setText(ResourceMgr.getString(ResourceMgr.TXT_DB_DRIVER));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 0);
		add(jLabel1, gridBagConstraints);
		
		cbDrivers.setEditable(true);
		cbDrivers.setMaximumSize(new java.awt.Dimension(32767, 20));
		cbDrivers.setMinimumSize(new java.awt.Dimension(40, 20));
		cbDrivers.setName("driverclass");
		cbDrivers.setPreferredSize(new java.awt.Dimension(120, 20));
		cbDrivers.setVerifyInputWhenFocusTarget(false);
		cbDrivers.addItemListener(new java.awt.event.ItemListener()
		{
			public void itemStateChanged(java.awt.event.ItemEvent evt)
			{
				cbDriversItemStateChanged(evt);
			}
		});
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.gridwidth = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.weightx = 0.5;
		gridBagConstraints.insets = new java.awt.Insets(0, 4, 2, 4);
		add(cbDrivers, gridBagConstraints);
		
		jLabel2.setText(ResourceMgr.getString(ResourceMgr.TXT_DB_URL));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 0);
		add(jLabel2, gridBagConstraints);
		
		tfURL.setHorizontalAlignment(javax.swing.JTextField.LEFT);
		tfURL.setMaximumSize(new java.awt.Dimension(2147483647, 20));
		tfURL.setMinimumSize(new java.awt.Dimension(40, 20));
		tfURL.setName("url");
		tfURL.setPreferredSize(new java.awt.Dimension(100, 20));
		tfURL.addMouseListener(new TextComponentMouseListener());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 4, 2, 6);
		add(tfURL, gridBagConstraints);
		
		tfPwd.setName("inputPassword");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 4, 2, 6);
		add(tfPwd, gridBagConstraints);
		
		cbAutocommit.setText("Autocommit");
		cbAutocommit.setName("autocommit");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.insets = new java.awt.Insets(0, 4, 2, 6);
		add(cbAutocommit, gridBagConstraints);
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 6;
		gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
		gridBagConstraints.weighty = 1.0;
		add(dummy, gridBagConstraints);
		
		tfProfileName.setHorizontalAlignment(javax.swing.JTextField.LEFT);
		tfProfileName.setName("name");
		tfProfileName.addMouseListener(new TextComponentMouseListener());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(10, 5, 5, 5);
		add(tfProfileName, gridBagConstraints);
		
		manageDriversButton.setText(ResourceMgr.getString("LabelEditDrivers"));
		manageDriversButton.setMaximumSize(new java.awt.Dimension(200, 20));
		manageDriversButton.setMinimumSize(new java.awt.Dimension(70, 20));
		manageDriversButton.setPreferredSize(new java.awt.Dimension(100, 20));
		manageDriversButton.addActionListener(new java.awt.event.ActionListener()
		{
			public void actionPerformed(java.awt.event.ActionEvent evt)
			{
				showDriverEditorDialog(evt);
			}
		});
		
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 3;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 1, 6);
		add(manageDriversButton, gridBagConstraints);
		
	}//GEN-END:initComponents

	private void cbDriversItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_cbDriversItemStateChanged
	{//GEN-HEADEREND:event_cbDriversItemStateChanged
		if (this.init) return;
		if (evt.getStateChange() == ItemEvent.SELECTED)
		{
			String selected = (String)this.cbDrivers.getSelectedItem();
			if (selected != null)
			{
				DbDriver newDriver = WbManager.getInstance().getConnectionMgr().findDriver(selected);
				if (newDriver != null) this.tfURL.setText(newDriver.getSampleUrl());
			}
		}
	}//GEN-LAST:event_cbDriversItemStateChanged

	private void showDriverEditorDialog(java.awt.event.ActionEvent evt)//GEN-FIRST:event_showDriverEditorDialog
	{//GEN-HEADEREND:event_showDriverEditorDialog
		// not really nice, but works until the driver editor can be
		// called from a different location...
		Frame parent = (Frame)(SwingUtilities.getWindowAncestor(this)).getParent();
		DriverEditorDialog d = new DriverEditorDialog(parent, true);
		WbSwingUtilities.center(d,parent);
		d.show();
		List drivers = WbManager.getInstance().getConnectionMgr().getDriverClasses();
		this.setDrivers(drivers);
	}//GEN-LAST:event_showDriverEditorDialog

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton manageDriversButton;
	private javax.swing.JComboBox cbDrivers;
	private javax.swing.JLabel lblUsername;
	private javax.swing.JPasswordField tfPwd;
	private javax.swing.JPanel dummy;
	private javax.swing.JLabel lblPwd;
	private javax.swing.JCheckBox cbAutocommit;
	private javax.swing.JTextField tfURL;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JTextField tfUserName;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JTextField tfProfileName;
	// End of variables declaration//GEN-END:variables

	public void setDrivers(List aDriverList)
	{
		if (aDriverList != null)
		{
			this.cbDrivers.setModel(new DefaultComboBoxModel(aDriverList.toArray()));
		}
	}

	public void setSourceList(ProfileListModel aSource)
	{
		this.sourceModel = aSource;
	}
	
	public void updateProfile()
	{
		if (this.init) return;
		if (this.currentProfile == null) return;
		if (this.editors == null) return;
		boolean changed = false;
		
		for (int i=0; i < this.editors.size(); i++)
		{
			SimplePropertyEditor editor = (SimplePropertyEditor)this.editors.get(i);
			changed = changed || editor.isChanged();
			editor.applyChanges();
		}
		/*
		Object driver = cbDrivers.getSelectedItem();
		if (driver != null)
		{
			this.currentProfile.setDriverclass(driver.toString());
		}
		this.currentProfile.setPassword(tfPwd.getText());
		this.currentProfile.setUrl(tfURL.getText());
		this.currentProfile.setUsername(tfUserName.getText());
		this.currentProfile.setAutocommit(cbAutocommit.isSelected());
		this.currentProfile.setName(tfProfileName.getText());
		*/
		if (changed)
		{
//			this.sourceModel.profileChanged(this.currentProfile);
		}
	}

	public ConnectionProfile getProfile()
	{
		this.updateProfile();
		return this.currentProfile;
	}
	
	private void initPropertyEditors()
	{
		if (this.editors == null) return;
		if (this.currentProfile == null) return;
		
		for (int i=0; i < this.editors.size(); i++)
		{
			SimplePropertyEditor editor = (SimplePropertyEditor)this.editors.get(i);
			Component c = (Component)editor;
			String property = c.getName();
			if (property != null)
			{
				editor.setSourceObject(this.currentProfile, property);
			}
		}
	}
	

	public void setProfile(ConnectionProfile aProfile)
	{
		this.init = true;
		this.currentProfile = aProfile;
		//this.tfProfileName.setText(aProfile.getName());
		//this.tfProfileName.setText(aProfile.getName());
		//this.tfUserName.setText(aProfile.getUsername());
		//this.tfURL.setText(aProfile.getUrl());
		//this.tfURL.setCaretPosition(0);
		this.tfPwd.setText(aProfile.decryptPassword());
		//this.cbAutocommit.setSelected(aProfile.getAutocommit());
		//this.checkDriverDropDown();
		this.initPropertyEditors();
		this.init = false;
	}

	private void checkDriverDropDown()
	{
		if (this.currentProfile == null) return;
		int newIndex = -1;
		int count = this.cbDrivers.getItemCount();
		String currentClass = this.currentProfile.getDriverclass();
		String drvClass;
		
		for (int i=0; i < count; i++)
		{
			drvClass = (String)this.cbDrivers.getItemAt(i);
			if (drvClass.equals(currentClass))
			{
				newIndex = i;
				break;
			}
		}
		if (newIndex >= 0 )
		{
			this.cbDrivers.setSelectedIndex(newIndex);
		}
		else
		{
			this.init = true;
			String cls = this.currentProfile.getDriverclass();
			if (cls != null && cls.length() > 0)
			{
				DbDriver drv = new DbDriver(cls);
				this.cbDrivers.addItem(drv);
				this.cbDrivers.setSelectedItem(drv);
			}
			else
			{
				this.cbDrivers.setSelectedItem(null);
			}
			this.init = false;
		}
	}

}
