<?xml version="1.0" encoding="UTF-8"?>
<java version="1.4.0_01" class="java.beans.XMLDecoder">
 <object class="java.util.HashMap">
  <void method="put">
   <string>Oracle</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>SELECT 'CREATE OR REPLACE TRIGGER '|| description, trigger_body FROM all_triggers</string>
    </void>
    <void property="objectNameField">
     <string>trigger_name</string>
    </void>
    <void property="schemaField">
     <string>owner</string>
    </void>
    <void property="useUpperCase">
     <boolean>true</boolean>
    </void>
   </object>
  </void>
  
  <void method="put">
   <string>Oracle8</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>SELECT 'CREATE OR REPLACE TRIGGER '|| description, trigger_body FROM all_triggers</string>
    </void>
    <void property="objectNameField">
     <string>trigger_name</string>
    </void>
    <void property="schemaField">
     <string>owner</string>
    </void>
    <void property="useUpperCase">
     <boolean>true</boolean>
    </void>
   </object>
  </void>
  
  <void method="put">
   <string>-PostgreSQL</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
select 'create trigger '|| trg.tgname || '\r\non ' || tbl.relname || '\r\n for each row execute procedure '||src.proname ||'();\r\n--- Source for '|| src.proname||' ---\r\n'|| src.prosrc 
from pg_trigger trg, pg_class tbl, pg_proc src
where trg.tgrelid = tbl.oid 
 AND trg.tgfoid = src.oid
      </string>
    </void>
    <void property="objectNameField">
     <string>trg.tgname</string>
    </void>
   </object>
  </void>
  <void method="put">
   <string>Microsoft SQL Server</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>exec sp_helptext</string>
    </void>
    <void property="isProcedureCall">
     <boolean>true</boolean>
    </void>
    <void property="objectNameArgumentPos">
     <int>1</int>
    </void>
   </object>
  </void>
  
  <void method="put">
   <string>PostgreSQL</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>SELECT 'create trigger '|| trg.tgname || ' '||
       case trg.tgtype &amp; cast(2 as int2) 
         when 0 then &apos;AFTER&apos; 
         else &apos;BEFORE&apos; 
       end || ' ' ||
       case trg.tgtype &amp; cast(28 as int2) 
         when 16 then &apos;UPDATE&apos; 
         when 8 then &apos;DELETE&apos; 
         when 4 then &apos;INSERT&apos; 
         when 20 then &apos;INSERT OR UPDATE&apos; 
         when 28 then &apos;INSERT OR UPDATE OR DELETE&apos; 
         when 24 then &apos;UPDATE OR DELETE&apos; 
         when 12 then &apos;INSERT OR DELETE&apos; 
       end || '\r\non ' || tbl.relname 
       || ' for each row execute procedure '
       ||src.proname 
       || '();\r\n\r\n--- Source for '
       || src.proname
       || ' ---\r\n'
       || src.prosrc 
from pg_trigger trg, pg_class tbl, pg_proc src
where trg.tgrelid = tbl.oid 
 AND trg.tgfoid = src.oid
</string> 
    </void>
    <void property="objectNameField">
     <string>trg.tgname</string>
    </void>
   </object>
  </void>
  
  <void method="put">
   <string>Microsoft SQL Server</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>exec sp_helptext</string>
    </void>
    <void property="isProcedureCall">
     <boolean>true</boolean>
    </void>
    <void property="objectNameArgumentPos">
     <int>1</int>
    </void>
   </object>
  </void>
  
  <void method="put"> 
   <string>HSQL Database Engine</string> 
   <object class="workbench.db.GetMetaDataSql"> 
    <void property="baseSql"> 
     <string>SELECT description FROM information_schema.system_triggers</string> 
    </void> 
    <void property="objectNameField"> 
     <string>trigger_name</string> 
    </void> 
   </object> 
  </void> 

  <void method="put"> 
   <string>FirstSQL/J</string> 
   <object class="workbench.db.GetMetaDataSql"> 
    <void property="baseSql"> 
     <string>SELECT 'CREATE TRIGGER ON '||table_name||'\n'||mode||' '||command||'\nWITH '||class_name||'.'||class_method||';\n\n'
    from definition_schema.systriggers
  </string> 
    </void> 
    <void property="objectNameField"> 
     <string>class_name||'.'||class_method</string> 
    </void> 
   </object> 
  </void> 
    
  <void method="put"> 
   <string>Adaptive Server Anywhere</string> 
   <object class="workbench.db.GetMetaDataSql"> 
    <void property="baseSql"> 
     <string>select syscomments.text  
 from sysobjects, syscomments  
 where sysobjects.id = syscomments.id  
and  sysobjects.type = &apos;TR&apos;</string> 
    </void> 
    <void property="objectNameField"> 
     <string>sysobjects.name</string> 
    </void> 
    <void property="orderBy"> 
     <string> order by syscomments.colid</string> 
    </void> 
   </object> 
  </void> 
  
  <void method="put"> 
   <string>Firebird</string> 
   <object class="workbench.db.GetMetaDataSql"> 
    <void property="baseSql"> 
     <string>SELECT rdb$trigger_source FROM rdb$triggers</string> 
    </void> 
    <void property="objectNameField"> 
     <string>rdb$trigger_name</string> 
    </void> 
    <void property="useUpperCase"> 
     <boolean>true</boolean> 
    </void> 
    <void property="schemaField"> 
     <string>RDB$OWNER_NAME</string> 
    </void> 
   </object> 
  </void> 
  <void method="put"> 
   <string>Cloudscape</string> 
   <object class="workbench.db.GetMetaDataSql"> 
    <void property="baseSql"> 
     <string>
SELECT 'CREATE TRIGGER ' || trg.triggername || '\n  '
       || case when trg.type ='A' then 'AFTER'
          else 'BEFORE' end
       || ' '
       || case when trg.event = 'D' then 'DELETE' 
            else case when trg.event = 'I' then 'INSERT'
                 else case when trg.event = 'U' THEN 'UPDATE' end
            end
          end
       || case when trg.referencedcolumns is not null then ' OF ' || trg.referencedcolumns else '' end 
       || ' ON ' || t.tablename || '\n' 
       || case when trg.referencingnew = 'true' then '  REFERENCING NEW AS ' || trg.newreferencingname 
          else case when trg.referencingold = 'true' then '  REFERENCING OLD AS ' || trg.oldreferencingname end
          end
       || '\n'
       || case when trg.type = 'S' then '  FOR EACH STATEMENT '
               else '  FOR EACH ROW' end
       || ' MODE DB2SQL\n\n'
       || trg.triggerdefinition
from sys.systriggers trg, sys.systables t, sys.sysschemas s
where trg.tableid = t.tableid
and   t.schemaid = s.schemaid
     </string> 
    </void> 
    <void property="objectNameField"> 
     <string>trg.triggername</string> 
    </void> 
    <void property="useUpperCase"> 
     <boolean>true</boolean> 
    </void> 
    <void property="schemaField"> 
     <string>s.schemaname</string> 
    </void> 
   </object> 
  </void> 

  <void method="put">
   <string>INGRES</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>select text_segment from iirules</string> 
    </void>
    <void property="objectNameField">
     <string>rule_name</string>
    </void>
    <void property="schemaField"> 
     <string>rule_owner</string> 
    </void>
    <void property="orderBy">
        <string>order by text_sequence</string>
    </void>
    <void property="useUpperCase"> 
     <boolean>false</boolean> 
    </void> 
   </object>
  </void>
    
 </object>
</java>
