<?xml version="1.0" encoding="UTF-8"?>
<java version="1.5" class="java.beans.XMLDecoder">
 <object class="java.util.HashMap">

  <void method="put">
   <string>SQLBase</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
select trg.name as trigger_name,
       @decode(actiontime, 'A', 'AFTER', 'BEFORE') as trigger_type,
       @decode(triggerevent, 'I', 'INSERT', 'U', 'UPDATE', 'D', 'DELETE') as trigger_event,
       tbl.name as trigger_table
from sysadm.systriggers trg
  join sysadm.systables tbl on tbl.snum = trg.tbsnum
</string>
    </void>
    <void property="objectNameField">
     <string>tbl.name</string>
    </void>
    <void property="schemaField">
     <string>tbl.creator</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>Teradata</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
select TriggerName as trigger_name,
       case ActionTime
          when 'A' then 'AFTER'
          when 'B' then 'BEFORE'
       end as trigger_type,
       case Event
         when 'U' then 'UPDATE'
         when 'D' then 'DELETE'
         when 'I' then 'INSERT'
       end as trigger_event,
       TableName as trigger_table
from DBC.Triggers
</string>
    </void>
    <void property="objectNameField">
     <string>TableName</string>
    </void>
    <void property="schemaField">
     <string>DatabaseName</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>MonetDB</string>
   <object id="list_derby_trg" class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
          select trg.name as trigger_name,
                 case
                    when trg.time = 1 then 'AFTER'
                    when trg.time = 0 then 'BEFORE'
                    else 'n/a'
                 end as trigger_type,
                 case
                    when trg.event = 0 then 'INSERT'
                    when trg.event = 1 then 'DELETE'
                    when trg.event = 2 then 'UPDATE'
                    else 'n/a'
                 end as trigger_event,
                 tbl.name as trigger_table
          from sys.triggers trg
            join sys.tables tbl on tbl.id = trg.table_id
            join sys.schemas sh on tbl.schema_id = sh.id
     </string>
    </void>
    <void property="objectNameField">
     <string>tbl.name</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY trg.name</string>
    </void>
    <void property="schemaField">
     <string>sh.name</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>NuoDB</string>
   <object id="list_derby_trg" class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
        select triggername as trigger_name,
               case
                 when type_mask in (2,8,32) then 'AFTER'
                 when type_mask in (1,4,16) then 'BEFORE'
               end as trigger_type,
               case
                 when type_mask in (8,4) then 'UPDATE'
                 when type_mask in (1,2) then 'INSERT'
                 when type_mask in (16,32) then 'DELETE'
               end as trigger_event,
               tablename as trigger_table
        from system.triggers
     </string>
    </void>
    <void property="objectNameField">
     <string>tablename</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY triggername</string>
    </void>
    <void property="schemaField">
     <string>schema</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>Apache Derby</string>
   <object id="list_derby_trg" class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
       SELECT trg.triggername as trigger_name,
             case
                  when trg.type ='A' then 'AFTER'
                  else 'BEFORE'
             end  as trigger_type ,
             case
                when trg.event = 'D' then 'DELETE'
                when trg.event = 'I' then 'INSERT'
                when trg.event = 'U' THEN 'UPDATE'
             end as trigger_event,
             t.tablename as trigger_table
       FROM sys.systriggers trg, sys.systables t, sys.sysschemas s
       WHERE trg.tableid = t.tableid
         AND t.schemaid = s.schemaid
     </string>
    </void>
    <void property="objectNameField">
     <string>t.tablename</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY trigger_name</string>
    </void>
    <void property="schemaField">
     <string>s.schemaname</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>Cloudscape</string>
   <object idref="list_derby_trg"/>
  </void>

  <void method="put">
   <string>Informix Dynamic Server</string>
   <object id="list_informix_trg" class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
       SELECT trg.trigname as trigger_name,
              '' trigger_type ,
              case
                when trg.event = 'D' then 'DELETE'
                when trg.event = 'I' then 'INSERT'
                when trg.event = 'U' THEN 'UPDATE'
                else trg.event
              end as trigger_event,
              t.tabname as trigger_table
       from informix.systriggers trg, informix.systables t
       where trg.tabid = t.tabid
     </string>
    </void>
    <void property="objectNameField">
     <string>t.tabname</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY trg.trigname</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>INFORMIX-SQL</string>
   <object id="list_informix_sql_trg" class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
        SELECT trg.trigname trigger_name,
               "DELETE" trigger_type,
               t.tabname trigger_table
        from informix.systriggers trg, informix.systables t
        where trg.tabid = t.tabid and trg.event='D'
        UNION
        SELECT trg.trigname,
               "UPDATE",
                t.tabname
        from informix.systriggers trg, informix.systables t
        where trg.tabid = t.tabid and trg.event='U'
        UNION
        SELECT trg.trigname,
               "INSERT",
               t.tabname
        from informix.systriggers trg, informix.systables t
        where trg.tabid = t.tabid and trg.event='I';
    </string>
    </void>
    <void property="objectNameField">
     <string>t.tabname</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY 1</string>
    </void>
   </object>
  </void>

  <!-- DB2 for z/OS identifies itself as DB2 -->
  <void method="put">
   <string>DB2</string>
   <object id="db2_host_trg" class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>SELECT name as trigger_name,
        CASE trigtime
           when 'A' then 'AFTER'
           when 'B' then 'BEFORE'
           when 'I' then 'INSTEAD'
        END as trigger_type,
        CASE trigevent
          when 'I' then 'INSERT'
          when 'U' then 'UPDATE'
          when 'D' then 'DELETE'
        END AS trigger_event
        FROM sysibm.systriggers</string>
    </void>
    <void property="objectNameField">
     <string>tbname</string>
    </void>
    <void property="schemaField">
     <string>tbowner</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY 1</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>DB2 UDB for AS/400</string>
   <object id="db2_as400_lsttrg" class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
			 SELECT trigger_name,
              action_timing as trigger_type,
              event_manipulation as trigger_event
        FROM qsys2.systriggers</string>
    </void>
    <void property="objectNameField">
     <string>EVENT_OBJECT_TABLE</string>
    </void>
    <void property="schemaField">
     <string>EVENT_OBJECT_SCHEMA</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY 1</string>
    </void>
   </object>
	</void>

  <void method="put">
   <string>DB2/NT</string>
   <object id="db2_lst_trg" class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>select trigname as trigger_name,
        case trigtime
           when 'A' then 'AFTER'
           when 'B' then 'BEFORE'
           when 'I' then 'INSTEAD'
        end as trigger_type,
        case  trigevent
          when 'I' then 'INSERT'
          when 'U' then 'UPDATE'
          when 'D' then 'DELETE'
        end as trigger_event
from syscat.triggers</string>
    </void>
    <void property="objectNameField">
     <string>tabname</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY 1</string>
    </void>
    <void property="schemaField">
     <string>tabschema</string>
    </void>
   </object>
  </void>

	<void method="put">
   <string>DB2/AIX64</string>
   <object idref="db2_lst_trg"/>
	</void>

	<void method="put">
   <string>DB2/NT64</string>
   <object idref="db2_lst_trg"/>
	</void>

	<void method="put">
   <string>DB2/LINUX</string>
   <object idref="db2_lst_trg"/>
	</void>

  <void method="put">
   <string>Oracle</string>
   <object id="list_oracle_trg" class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
       SELECT trigger_name,
              trigger_type,
              triggering_event as trigger_event,
              table_name,
              '' as remarks,
              status
      FROM all_triggers
      WHERE trigger_name not like 'BIN$%'
    </string>
    </void>
    <void property="objectNameField">
     <string>table_name</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY trigger_name</string>
    </void>
    <void property="schemaField">
     <string>owner</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>Oracle8</string>
   <object idref="list_oracle_trg"/>
  </void>

  <void method="put">
   <string>Adaptive Server Enterprise</string>
   <object id="list_asa_trg" class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>select trigname as trigger_name, trigtime as trigger_type, event from systriggers</string>
    </void>
    <void property="objectNameField">
     <string>tname</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY trigger_name</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>Adaptive Server Anywhere</string>
   <object idref="list_asa_trg"/>
  </void>

  <void method="put">
   <string>FirstSQL/J</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>select class_name||'.'||class_method as trigger_name,
             mode as trigger_type,
             command as event
    from definition_schema.systriggers</string>
    </void>
    <void property="objectNameField">
     <string>table_name</string>
    </void>
    <void property="schemaField">
     <string>table_schema</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY 1</string>
    </void>
   </object>
  </void>


  <void method="put">
   <string>Microsoft SQL Server</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
      select tr.name as trigger_name,
             case
                when ObjectProperty(tr.object_id, 'ExecIsAfterTrigger') = 1 then 'AFTER'
                when ObjectProperty(tr.object_id, 'ExecIsInsteadOfTrigger') = 1 then 'INSTEAD OF'
                else 'BEFORE'
             end  as trigger_type,
             case
                when ObjectProperty(tr.object_id, 'ExecIsUpdateTrigger') = 1 then 'UPDATE'
                when ObjectProperty(tr.object_id, 'ExecIsDeleteTrigger') = 1 then 'DELETE'
                when ObjectProperty(tr.object_id, 'ExecIsInsertTrigger') = 1then 'INSERT'
             end as trigger_event,
             sh.name + '.' + tab.name as  table_name,
             null as remarks,
             null as status
      from sys.triggers tr with (nolock)
        join sys.objects tab with (nolock) on tab.object_id = tr.parent_id
        join sys.schemas sh with (nolock) on sh.schema_id = tab.schema_id
      where tr.is_ms_shipped = 0
     </string>
    </void>
    <void property="objectNameField">
     <string>tab.name</string>
    </void>
    <void property="schemaField">
      <string>sh.name</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY trigger_name</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>Microsoft SQL Server-8</string>
   <object id="trg_list_mssql8" class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
	select tr.name as trigger_name,
         case
            when ObjectProperty(tr.id, 'ExecIsAfterTrigger') = 1 then 'AFTER'
            when ObjectProperty(tr.id, 'ExecIsInsteadOfTrigger') = 1 then 'INSTEAD OF'
            else 'BEFORE'
         end  as trigger_type,
         case
             when ObjectProperty(tr.id, 'ExecIsUpdateTrigger') = 1 then 'UPDATE'
             when ObjectProperty(tr.id, 'ExecIsDeleteTrigger') = 1 then 'DELETE'
             when ObjectProperty(tr.id, 'ExecIsInsertTrigger') = 1 then 'INSERT'
          end as trigger_event,
       tab.name as table_name,
       null as remarks,
       null as status
	from sysobjects tr with (nolock)
	  join sysobjects tab with (nolock) on tab.id = tr.parent_obj
	where  tr.xtype = 'TR'
     </string>
    </void>
    <void property="objectNameField">
     <string>tab.name</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY trigger_name</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>Microsoft SQL Server-7</string>
   <object idref="trg_list_mssql8"/>
  </void>

  <void method="put">
   <string>Microsoft SQL Server-6</string>
   <object idref="trg_list_mssql8"/>
  </void>

  <void method="put">
   <string>PostgreSQL</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>select trg.tgname,
       case trg.tgtype &amp; cast(2 as int2)
         when 0 then 'AFTER'
         else 'BEFORE'
       end as trigger_type,
       case trg.tgtype &amp; cast(28 as int2)
         when 16 then 'UPDATE'
         when 8 then 'DELETE'
         when 4 then 'INSERT'
         when 20 then 'INSERT, UPDATE'
         when 28 then 'INSERT, UPDATE, DELETE'
         when 24 then 'UPDATE, DELETE'
         when 12 then 'INSERT, DELETE'
       end as trigger_event,
       ns.nspname||'.'||tbl.relname as table_name,
       obj_description(trg.oid) as remarks,
	     case
          when trg.tgenabled='O' then 'ENABLED'
	        else 'DISABLED'
        end as status
FROM pg_trigger trg
 JOIN pg_class tbl on trg.tgrelid = tbl.oid
 JOIN pg_namespace ns ON ns.oid = tbl.relnamespace
AND trg.tgname not like 'RI_ConstraintTrigger%'
AND trg.tgname not like 'pg_sync_pg%'
</string>
    </void>
    <void property="objectNameField">
     <string>tbl.relname</string>
    </void>
    <void property="schemaField">
      <string>ns.nspname</string>
    </void>
    <void property="orderBy">
     <string>order by 1</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>MySQL</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>SELECT trigger_name,
                    action_timing AS trigger_type,
                    event_manipulation as trigger_event,
                    event_object_table as trigger_table
             FROM information_schema.triggers
      </string>
    </void>
    <void property="objectNameField">
     <string>event_object_table</string>
    </void>
    <void property="schemaField">
     <string>event_object_schema</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY trigger_name</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>H2</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
        SELECT trigger_name,
               trigger_type,
               case before when 'true' then 'BEFORE' else 'AFTER' end as trigger_event,
               table_name as trigger_table
        FROM information_schema.triggers</string>
    </void>
    <void property="objectNameField">
     <string>table_name</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY trigger_name</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>HSQL Database Engine</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
       SELECT trigger_name,
              trigger_type,
              triggering_event as trigger_event, table_name as trigger_table
      FROM information_schema.system_triggers</string>
    </void>
    <void property="objectNameField">
     <string>table_name</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY trigger_name</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>HSQL Database Engine-2</string>
   <object id="hsqldb20" class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
       SELECT trigger_name,
              action_timing as trigger_type,
              event_manipulation as trigger_event,
              event_object_table as trigger_table
       FROM information_schema.triggers</string>
    </void>
    <void property="schemaField">
     <string>EVENT_OBJECT_SCHEMA</string>
    </void>
    <void property="objectNameField">
     <string>EVENT_OBJECT_TABLE</string>
    </void>
    <void property="orderBy">
     <string>ORDER BY trigger_name</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>Firebird</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
       SELECT rdb$trigger_name AS TRIGGER_NAME,
          case
            when rdb$trigger_type = 0 then 'UNKNOWN'
            when mod(rdb$trigger_type, 2) = 0 then 'AFTER'
          else 'BEFORE'
          END AS trigger_type,
          case bin_and(rdb$trigger_type + 1, 254)
             when  2 then 'INSERT'
             when  4 THEN 'UPDATE'
             when  6 then 'DELETE'
             when  18 then 'INSERT OR UPDATE'
             when  26 then 'INSERT OR DELETE'
             when  12 then 'UPDATE OR INSERT'
             when  28 then 'UPDATE OR DELETE'
             when  14 then 'DELETE OR INSERT'
             when  22 then 'DELETE OR UPDATE'
             when  114 then 'INSERT OR UPDATE OR DELETE'
             when  60 then 'UPDATE OR DELETE OR INSERT'
             when  78 then 'DELETE OR INSERT OR UPDATE'
          end as trigger_event,
          trim(rdb$relation_name) as trigger_table
    FROM rdb$triggers
    WHERE rdb$system_flag = 0
</string>
    </void>
    <void property="objectNameField">
     <string>rdb$relation_name</string>
    </void>
    <void property="schemaField">
     <string>RDB$OWNER_NAME</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>INGRES</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
select rdef.rule_name as trigger_name,
       'AFTER' as trigger_type,
       case rdef.rule_statement
          when 1 then 'DELETE'
          when 2 then 'INSERT'
          when 4 then 'UPDATE'
          when 3 then 'INSERT,DELETE'
          when 6 then 'INSERT,UPDATE'
          when 5 then 'UPDATE,DELETE'
          when 7 then 'INSERT,UPDATE,DELETE'
          else ''
       end as trigger_event
from iirule rdef, iirules rlist
where rdef.rule_name = rlist.rule_name
     </string>
    </void>
    <void property="objectNameField">
     <string>rlist.table_name</string>
    </void>
    <void property="schemaField">
     <string>rlist.rule_owner</string>
    </void>
    <void property="orderBy">
     <string>order by rlist.rule_name</string>
    </void>
   </object>
  </void>

  <void method="put">
   <string>CUBRID</string>
   <object class="workbench.db.GetMetaDataSql">
    <void property="baseSql">
     <string>
select trg.trigger_name,
       case
          when trg.action_time = 1 then 'BEFORE'
          when trg.action_time = 2 then 'AFTER'
          else 'DEFERRED'
       end as trigger_type,
       case
         when tdef.event = 0 then 'UPDATE'
         when tdef.event = 1 then 'UPDATE STATEMENT'
         when tdef.event = 2 then 'DELETE'
         when tdef.event = 3 then 'DELETE STATEMENT'
         when tdef.event = 4 then 'INSERT'
         when tdef.event = 5 then 'INSERT STATEMENT'
         when tdef.event = 8 then 'COMMIT'
         when tdef.event = 9 then 'ROLLBACK'
         else 'unknown'
       end as trigger_event,
       trg.target_class_name as table_name,
       null as remarks,
       case
          when tdef.status = 1 then 'INACTIVE'
          else 'ACTIVE'
       end as status
from db_trig trg
  join db_trigger tdef on tdef.name = trg.trigger_name
  join db_class t on trg.target_class_name = t.class_name
     </string>
    </void>
    <void property="objectNameField">
     <string>target_class_name</string>
    </void>
   </object>
  </void>

 </object>
</java>
