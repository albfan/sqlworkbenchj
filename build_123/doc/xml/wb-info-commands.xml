<section id="wb-info-commands">
  <title>Show information about database objects</title>

	<important><para>
    All &wb-productname; specific command can <emphasis role="bold">only</emphasis> be used from within &wb-productname;
  </para></important>

  <section id="command-schema-report">
    <title>Create a report of the database objects - WbSchemaReport</title>

    <para>
      Creates an XML report of selected tables. This report could be used
      to generate an HTML documentation of the database (e.g. using the <link linkend="command-xslt">XSLT</link>
      command). This report can also be generated from within the <link linkend="dbexplorer">Database Object Explorer</link>
    </para>

    <para>
      The resulting XML file can  be transformed into a HTML documentation of your database schema.
      Sample stylesheets can be downloaded from   <ulink url="http://www.sql-workbench.net/xstl.html"/>.
      If you have XSLT stylsheets that you would like to share, please send them to
      <email>support@sql-workbench.net</email>.
    </para>

    <note><para>
      To see table and column comments with an Oracle database, you need to
      <link linkend="oracle-enable-remarks">enable remarks reporting</link> for the JDBC
      driver, otherwise the driver will not return comments. To see the "comment" values
      from SQL Server's extended properties, please setup the property retrieval as described <link linkend="dbexplorer-ms-remarks-prop">here</link>
    </para></note>

    <para>The command supports the following parameters:</para>

    <informaltable frame="all">
      <tgroup cols="2" align="left">
			<colspec colname="c1" colwidth="4cm" />
			<colspec colname="c2" />
			<thead>
				<row>
					<entry>Parameter</entry>
					<entry>Description</entry>
				</row>
			</thead>

			<tbody valign="top">
				<row>
					<entry>-file</entry>
					<entry>The filename of the output file.</entry>
				</row>

        <row id="schema-report-objects">
          <entry>-objects</entry>
          <entry>
            <para>
              A (comma separated) list of objects to report. Default is all objects that are "tables" or views.
              The list of possible objects corresponds to the objects shown in the "Objects" tab of the DbExplorer.
            </para>
            <para>
              If you want to generate the report on tables from different schemas you have
              to use fully qualified names in the list (e.g. <literal>-tables=shop.orders,accounting.invoices</literal>)
              You can also specify wildcards in the table name: <literal>-table=CONTRACT_%</literal> will create
              an XML report for all tables that start with <literal>CONTRACT_</literal>.
            </para>
            <para>
              This parameter supports auto-completion.
            </para>
          </entry>
        </row>

				<row id="schema-report-schemas">
					<entry>-schemas</entry>
					<entry>
            <para>
              A (comma separated) list of schemas to generate the report from.
              For each user/schema all tables are included in the report. e.g.
              <literal>-schemas=public,accounting</literal> would generate a report
              for all tables in the schemas <literal>public</literal> and <literal>accounting</literal>.
            </para>
            <para>
              If you combine <literal>-schemas</literal> with <literal>-objects</literal>, the list of objects
              will be applied to every schema unless the object names are supplied <emphasis role="bold">with</emphasis> a schema:
              <literal>-schemas=accounting,invoices -objects=o*,customers.c*</literal> will select all objects starting
              with <literal>O</literal> from the schemas <literal>accounting,invoices</literal> and all objects
              starting with <literal>C</literal> from the schema <literal>customers</literal>.
            </para>
            <para>
              The possible values for this parameter correspond to the "Schema" dropdown in the
              <link linkend="dbexplorer">DbExplorer</link>. The parameter supports auto-completion
              and will show a list of available schemas.
            </para>
          </entry>
				</row>

        <row id="schema-report-types">
          <entry>-types</entry>
          <entry>
            <para>
              A (comma separated) list of "table like" object types to include. By default <literal>TABLE</literal>s and
              <literal>VIEW</literal>s are included. To include e.g. <literal>SYSTEM VIEW</literal>s and
              <literal>TEMPORARY TABLE</literal>s, use the following option:
              <literal>-types='TABLE,VIEW,SYSTEM VIEW,TEMPORARY TABLE'</literal>. If you include type names that contain
              a space (or e.g. a dash) you have to quote the whole list, not just the single value.
            </para>
            <para>
              The default for this parameter is <literal>TABLE,VIEW</literal>
            </para>
            <para>
              The values for this parameter correspond to the values shown in the "types" dropdown in the
              <link linkend="dbexplorer-objectlist">"Objects"</link> tab of the DbExplorer. The parameter
              supports auto-completion and will show a list of the available object types for the current DBMS.
            </para>
            <para>
              You can include any type shown in the DbExplorer's Objects tab. To e.g. include <literal>domain</literal>
              and <literal>enum</literal> definitions for PostgreSQL use: <literal>-types=table,view,sequence,domain,enum</literal>
            </para>
            <para>
              This parameter supports auto-completion.
            </para>
          </entry>
        </row>

				<row id="schema-report-exclude-names">
					<entry>-excludeObjectNames</entry>
					<entry>
            A (comma separated) list of tables to exclude from reporting. This is only used if
            -tables is also specified. To create a report on all tables, but exclude those that start
            with 'DEV', use <literal>-tables=* -excludeTableNames=DEV*</literal>
					</entry>
          <para>
            This parameter supports auto-completion.
          </para>
				</row>

				<row id="schema-report-object-typenames">
					<entry>-objectTypeNames</entry>
					<entry>
            <para>
              This parameter can be repeated several times to define the object names per object type to be retrieved.
              The format of the argument is <literal>-objectTypeNames=typename:namepattern</literal>
            </para>
            <para>
              The following will select the tables <literal>person</literal> and <literal>address</literal>,
              all sequences starting with "T" and the view <literal>v_person</literal>. If the list of object names
              contains a comma, the whole parameter value needs to be quoted:
              <programlisting>-objectTypeNames='table:person,address' -objectTypeNames=sequence:t* -objectTypeNames=view:v_person</programlisting>
              The type names are the same ones that can be used with the <literal>-types</literal> parameter. This can be combined
              with schema qualified names:
              <programlisting>-objectTypeNames='table:cust.person,accounting.address' -objectTypeNames=view:public.*</programlisting>
            </para>
            <para>
              This can also be used to restrict the retrieval of stored procedures: <literal>-objectNameTypes=procedure:P*</literal>
              will include all stored procedures (or functions) that start with a "P". In this case the parameter <literal>-includeProcedures</literal>
              is ignored.
            </para>
            <para>
              If this parameter is used at least once, all of the following parameters
              are ignored: <literal>-types</literal> and <literal>-objects</literal>, <literal>-includeSequences</literal>,
              <literal>-includeTables</literal> and <literal>-includeViews</literal>
              are ignored.
            </para>
            <para>
              The exclusion pattern defined through <literal>-excludeObjectNames</literal> is applied to <emphasis>all</emphasis> object types.
            </para>
					</entry>
				</row>

				<row id="schema-report-include-tables">
					<entry>-includeTables</entry>
					<entry>Controls the output of table information for the report. The default is
						<literal>true</literal>. Valid values are <literal>true</literal>, <literal>false</literal>.
					</entry>
				</row>

				<row id="schema-report-include-sequences">
					<entry>-includeSequences</entry>
					<entry>
            <para>
              Control the output of sequence information for the report. The default is
              <literal>false</literal>. Valid values are <literal>true</literal>, <literal>false</literal>.
            </para>
            <para>
              Adding <literal>sequence</literal> to the list of types specified with the <literal>-types</literal>
              parameter has the same effect.
            </para>
					</entry>
				</row>

				<row id="schema-report-include-grants">
					<entry>-includeTableGrants</entry>
					<entry>If tables are included in the output, the grants for each table can also be included with
						this parameter. The default value is <literal>false</literal>.
					</entry>
				</row>

				<row id="schema-report-include-procs">
					<entry>-includeProcedures</entry>
					<entry>Control the output of stored procedure information for the report. The default is
						<literal>false</literal>. Valid values are <literal>true</literal>, <literal>false</literal>.
					</entry>
				</row>

				<row id="schema-report-include-triggers">
					<entry>-includeTriggers</entry>
					<entry>
            This parameter controls if table triggers are added to the output.
						The default value is <literal>true</literal>.
					</entry>
				</row>

				<row id="schema-report-title">
					<entry>-reportTitle</entry>
					<entry>
						Defines the title for the generated XML file. The specified title is written
						into the tag <literal>&lt;report-title&gt;</literal> and can be used when
						transforming the XML e.g. into a HTML file.
					</entry>
				</row>

				<row id="schema-report-full-source">
					<entry>-writeFullSource</entry>
					<entry>
            <para>
            By default the source code for views is written as retrieved from the DBMS into the XML file.
            This might not be a complete <literal>create view</literal> statement though. When <literal>-writeFullSource=true</literal>
            is specified &wb-productname; will generate a complete <literal>create view</literal> statement, similar to the code
            that is shown in the DbExplorer.
            </para>
            <para>
              The default is <literal>false</literal>. Valid values are: <literal>true</literal>, <literal>false</literal>.
            </para>
					</entry>
				</row>

				<row id="schema-report-stylesheet">
					<entry>-styleSheet</entry>
					<entry>Apply a XSLT transformation to the generated XML file.</entry>
				</row>
				<row id="schema-report-xslt-output">
					<entry>-xsltOutput</entry>
					<entry>The name of the generated output file when applying the XSLT transformation.</entry>
				</row>
        &common-xslt-args;

			</tbody>

      </tgroup>
    </informaltable>
  </section>

  <section id="command-desc">
    <title>Show table structure - DESCRIBE</title>

    <para>
			Describe shows the definition of the given table. It can be
			abbreviated with DESC. The command expects the table name as a parameter.
			The output of the command will be several result tabs to show the table
			structure, indexes and triggers (if present).
			If the "described" object is a view, the message tab will additionally contain
			the view source (if available).
		</para>
		<programlisting>DESC person;</programlisting>

		<para>
			If you want to show the structure of a table from a different user, you need
			to prefix the table name with the desired user <literal>DESCRIBE otheruser.person;</literal>
		</para>

  </section>

  <section id="command-list">
    <title>List tables - WbList</title>

    <para>
			This command lists all available tables (including views and
      synonyms). This output is equivalent to the left part of the Database
      Object Explorer&#39;s Table tab.
    </para>

    <para>
			You can limit the displayed objects by either specifying a wildcard for the
			names to be retrieved: <literal>WbList P%</literal> will list all tables or
			views starting with the letter "P"
    </para>

    <para>
			The command supports two parameters to specify the tables and objects to be listed. If you want to
      limit the result by specifying a wildcard for the name <emphasis role="bold">and</emphasis> the object type,
			you have to use the parameter switches:
			<informaltable frame="all">
				<tgroup cols="2" align="left">
					<colspec colname="c1"  colwidth="2.5cm" />
					<colspec colname="c2"/>
					<thead>
						<row>
							<entry>Parameter</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody valign="top">
						<row>
							<entry>-objects</entry>
							<entry>
								<para>
									Select the objects to be returned using a wildcard name, e.g. <literal>-objects=P%</literal>
								</para>
							</entry>
						</row>
						<row>
							<entry>-types</entry>
							<entry>
								<para>
									Limit the result to specific object types, e.g. <literal>WbList -objects=V% -types=VIEW</literal>
									will return all views starting with the letter "V".
								</para>
							</entry>
						</row>
					</tbody>
				</tgroup>
			</informaltable>
		</para>

  </section>

  <section id="command-listindexes">
    <title>List indexes - WbListIndexes</title>

    <para>
			This command will list all indexes defined on tables available to the
      current user.
		</para>

    <para>
			The command supports two parameters to specify the tables and objects to be listed. If you want to
      limit the result by specifying a wildcard for the name <emphasis role="bold">and</emphasis> the object type,
			you have to use the parameter switches:
			<informaltable frame="all">
				<tgroup cols="2" align="left">
					<colspec colname="c1"  colwidth="2.5cm" />
					<colspec colname="c2"/>
					<thead>
						<row>
							<entry>Parameter</entry>
							<entry>Description</entry>
						</row>
					</thead>
					<tbody valign="top">
						<row>
							<entry>-schema</entry>
							<entry>
								<para>
									Show only indexes for the specified schema, e.g. <literal>-schema=somethingelse</literal>
								</para>
							</entry>
						</row>
						<row>
							<entry>-catalog</entry>
							<entry>
								<para>
									Show only indexes for the specified catalog e.g. <literal>-catalog=other_db</literal>
								</para>
							</entry>
						</row>
						<row>
							<entry>-tableName</entry>
							<entry>
								<para>
                  Show only indexes for the tables specified by the parameter. The parameter value
                  can contain a wildcard, e.g. <literal>-tableName=VP%</literal> lists the indexes
                  for all tables starting with VP
								</para>
							</entry>
						</row>
						<row>
							<entry>-indexName</entry>
							<entry>
								<para>
                  Show only indexes with the specified name. The parameter value
                  can contain a wildcard, e.g. <literal>-indexName=PK%</literal> lists only indexes
                  that start with <literal>PK</literal>
								</para>
							</entry>
						</row>
					</tbody>
				</tgroup>
			</informaltable>
		</para>

  </section>

  <section id="command-listprocs">
    <title>List stored procedures - WbListProcs</title>

    <para>
			This command will list all stored procedures available to the
      current user. The output of this command is equivalent to the Database
			Explorer&apos;s Procedure tab.
		</para>
		<para>
			You can limit the list by supplying a wildcard search for the name, e.g.:
			<programlisting>WbListProcs public.p%</programlisting>
		</para>
  </section>

  <section id="command-listtriggers">
    <title>List triggers - WbListTriggers</title>

    <para>
			This command will list all stored triggers available to the
      current user. The output of this command is equivalent to the Database
			Explorer&apos;s Triggers tab (if enabled)
		</para>
  </section>

  <section id="command-listcat">
    <title>List catalogs - WbListCat</title>

    <para>
      Lists the available catalogs (or databases). It is the same information
      that is shown in the DbExplorer's "Database" drop down.
    </para>
    <para>
      The output of this command depends on the underlying JDBC driver and DBMS.
      For MS SQL Server this lists the available databases (which then could be changed
      with the command <literal>USE &#60;dbname&#62;</literal>)
    </para>

    <para>
			For Oracle this command returns nothing as Oracle does not
			implement the concept of catalogs.
		</para>

    <para>
			This command calls the JDBC driver&apos;s <literal>getCatalogs()</literal> method and will
      return its result. If on your database system this command does not display
      a list, it is most likely that your DBMS does not support catalogs (e.g. Oracle)
      or the driver does not implement this feature.
    </para>

    <para>
      This command ignores the filter defined for catalogs in the <link linkend="profiles">connection profile</link>
      and always returns all databases.
    </para>

  </section>


  <section id="command-listschema">
    <title>List schemas - WbListSchemas</title>

    <para>
      Lists the available schemas from the current connection. The output of this
      command depends on the underlying JDBC driver and DBMS. It is the same information
      that is shown in the DbExplorer's "Schema" drop down.
    </para>

    <para>
      This command ignores the filter defined for schemas in the <link linkend="profiles">connection profile</link>
      and always returns all schemas.
    </para>

  </section>

  <section id="command-listdeps">
    <title>Show dependency information - WbListDependencies</title>

    <para>
      Lists dependency information about database objects. It is the command line version
      of the "Used by" and "Uses" information in the DbExplorer and DbTree.
    </para>

    <para>The command supports the following parameters:</para>

    <informaltable frame="all">
      <tgroup cols="2" align="left">
        <colspec colname="c1" colwidth="4cm" />
        <colspec colname="c2" />
        <thead>
          <row>
            <entry>Parameter</entry>
            <entry>Description</entry>
          </row>
        </thead>

        <tbody valign="top">
          <row id="list-deps-name">
            <entry>-name</entry>
            <entry>
              <para>
                Then name of the database object for which the dependencies should be displayed.
                This parameter supports wildcards, e.g. <literal>-name=p%</literal> to display dependencies
                for all objects that start with a <literal>P</literal>.
              </para>
              <para>
                This parameter supports auto-completion.
              </para>
            </entry>
          </row>
          <row id="list-deps-schema">
            <entry>-schema</entry>
            <entry>
              <para>
                Search objects in the specified schema.
              </para>
              <para>
                This parameter supports auto-completion.
              </para>
            </entry>
          </row>
          <row id="list-deps-catalog">
            <entry>-catalog</entry>
            <entry>
              <para>
                Search objects in the specified catalog (database).
              </para>
              <para>
                This parameter supports auto-completion.
              </para>
            </entry>
          </row>
          <row id="list-deps-objecttype">
            <entry>-objectType</entry>
            <entry>
              <para>
                A (comma separated) list of objects to report. Default is all objects that are "tables" or views.
                The list of possible objects corresponds to the objects shown in the "Objects" tab of the DbExplorer.
              </para>
              <para>
                This parameter supports auto-completion.
              </para>
            </entry>
          </row>

          <row id="list-deps-type">
            <entry>-dependency</entry>
            <entry>
              <para>
                Define the type of dependency to display. Valid values are <literal>uses</literal> and <literal>using</literal>.
              </para>
              <para>
                This parameter supports auto-completion.
              </para>
            </entry>
          </row>
        </tbody>

      </tgroup>
    </informaltable>

  </section>

</section>