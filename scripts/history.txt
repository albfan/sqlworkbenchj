Build @BUILD_NUMBER@, @BUILD_DATE@
--------------------
Enh:  (77.1) Prepared Statements (i.e. ? in a SELECT) are now supported
      This support relies on certain JDBC features which are
      not available e.g. in Oracle's or PostgreSQL's JDBC drivers.
      Currently this has been tested with Firebird and HSQLDB.
Enh:  (77.3) The source for stored procedure and views can now be
      displayed for Informix (thanks Meikel)
Enh:  (77.10) Errors during script execution can now be ignored by default
      (SQL -> Ignore errors)
Enh:  (77.12) When importing text files, columns can now be excluded
      from the import by specifying $wb_skip$ as the columnname
      in the -filecolumns parameter or by supplying a list of
      columns to be imported using the -importcolumns switch
Enh:  (77.12) When importing text file, filters based on regular expressions
      can now be applied either on column level or input line level
      (using the -columnfilter or -linefilter switch)
Enh:  (77.12) The WbImport command can now switch off the progress display
      of the current row which speeds up the process when importing from
      within the GUI (batch import does not suffer from the performance
      impact of the progress report). To disable the progress use
      -showprogress=false
      Alternatively the interval for the reporting can be selected as
      well -showprogress=100 will only update the display every 100 rows.
      Additionally the performance of the status display has been improved.
      Loading large result sets (which report the progress as well) and
      importing using -showprogress=true (the default) should run quicker now
Enh:  (77.14) The WBINCLUDE (and batch execution) command will not load script
      files into memory that exceed a certain size. They will be processed
      statement by statement which is a bit slower then loading them into
      memory. The threshold can be defined in workbench.settings with the
      property: workbench.sql.script.inmemory.maxsize
      The value is defined in bytes. Any file exceeding this size will be
      processed by not loading it into memory. The default threshold
      is 1MB (which means that any file that is smaller then 1MB will be
      processed in memory)
Enh:  (77.17) WBIMPORT now supports -importcolumns for XML files to
      select only certain columns from the input file
Enh:  (77.17) The DataPumper can now use a text or XML file as the source
Enh:  (77.18) A new command - WBDIFF - to generate an XML presentation of the 
      difference between to schemas. The XML shows all modifications that
      need to be done to get the target schema to the same state
      as the reference (=source) schema. XSLTs to transform this XML
      into SQL scripts will follow
Enh:  (77.19) WBIMPORT now accepts -sourcedir for XML files to import 
      all .xml files in that directory. When mixing XML files with long 
      and short tags this works only if the files are created with 
      this build, as the information about the tags used is available
      in the meta data of the XML file.
Enh:  (77.19) WBEXPORT now accepts -sourcetable=* to export all tables
Enh:  (77.22) Two new settings to control the formatting of generated
      SQL statements: 
      workbench.sql.generate.insert.doformat
	  workbench.sql.generate.update.doformat
	  If set to false generated SQL statements (INSERT, UPDATE) will always 
	  be put into a single line.

Fix:  (77.1) When a table was created using lowercase in Oracle, the
      DB Explorer would not work correctly for displaying data and
      dropping the table
Fix:  (77.2) Schemas with underscores where not treated correctly when
      creating UPDATE statements for the result set
Fix:  (77.4) SELECT statements that were immediately followed by a whitespace
      other then a regular space were not detected correctly when
      exporting data.
Fix:  (77.4) "Show table data" in the DbExplorer did not always use the
      correct table definition.
Fix:  (77.5) When a file was saved with an encoding other then the default
      encoding, the encoding was not properly restored when the workspace
      was loaded again.
Fix:  (77.6) Tried to make the workspace loading more robust to avoid
      corrupted workspaces.
Fix:  (77.10) SELECT .. INTO did no longer work with Informix and Postgres
Fix:  (77.11) Sometimes connection errors where not displayed correctly
      (the application would display the "Connecting to the database..."
      message indefinitely)
Fix:  (77.11) Fixed a problem when no workspace file was defined for
      a connection profile that was introduced with 77.6
Fix:  (77.12) Fixed a uppercase/lowercase problem when using WBIMPORT
Fix:  (77.12) When the -file switched is not supplied when using WBIMPORT
      a clear error message is now given.
Fix:  (77.15) Fixed a problem with the parsing of SQL statements with comments
Fix:  When importing text files with quote characters, empty fields ("") where
      not processed correctly (the import would fail with an error)
Fix:  (77.16) When exporting data from the select SQL statement, this now blocks
      the current panel (just like executing the statement would do) to avoid
      conflicts with non-threaded JDBC drivers
Fix:  (77.17) Ctrl-Enter was still working even if the application was 
      disconnected. 
Fix:  (77.20) Worked around a bug in the Oracle driver which would not 
      return the correct objects for Timestamp (Oracle 9) columns
Fix:  (77.22) Entering timestamp values did not work.

Build 77, 12.02.2005
--------------------
Enh:  When saving a result set using "Save as", the table to be used for INSERT
      statements can now be defined. (For UPDATE also, but that requires
      the retrieval of the PK columns prior to opening the dialog)
Enh:  The usage of the NULL keyword in a CREATE TABLE statement (DbExplorer)
      can now be configured. If the DBID of the connection is listed in the
      property workbench.db.nonullkeyword then the NULL keyword will not be
      used when generating the CREATE TABLE
Enh:  When copying data to the clipboard (Text, SQL), or saving the result set
      to a file (Data -> Save Data As) the columns that should be include can
      now be selected. When copying to the clipboard the selection dialog
      is displayed when pressing the CTRL key while clicking the menu item.
Enh:  When connected to a FirebirdSQL database, the command INPUT can also be
      used to call one SQL script from another.
Enh:  A query timeout can now be defined (Whether it is really working depends
      on the capabilities of the JDBC driver)
Enh:  Selected text (or the current line) can now be commented or un-commented
      using the Shortcuts Ctrl-Shift-C (Comment) or Ctrl-Shift-U (Uncomment)
Enh:  Added a "Select all" and "Select none" button to primary key select
      dialog (when updating a table without primary key definition)
Enh:  Added support for McKoi database
Enh:  The formatting of the generated INSERT statements can now be influenced
      by setting two properties in workbench.settings:

      workbench.sql.generate.insert.newlinethreshold
      defines the number of columns in the table before any reformatting of the
      column list or values list takes place

      workbench.sql.generate.insert.colsperline
      if the INSERT statement affects more then 'newlinethreshold' columns
      this value defines the number of columns to put into a single line.

      The default is newlinethreshold=5 and colsperline=1 which results in the
      same formatting used as before.

Enh:  Added more logging during connect
Enh:  The display format for DATE and DATE/TIME datatypes can now be specified
      seperately. With Oracle (at least Oracle8) however this does not work
      because there is no (real) distinction between DATE and TIMESTAMP
Enh:  The usage of the user name for SQL Statements created for "Export" can
      now be disabled using the property:
      workbench.export.sql.includeowner=false
Enh:  Data can now be saved and copied as DELETE/INSERT as well.
Fix:  The AVG() function was not displayed correctly
Fix:  When opening the Save as dialog, the application tried to check the
      update table even if "Disable automatic update check" was enabled
Fix:  Tried to fix a problem where the "Manage Driver" dialog was not displayed
      correctly under Linux
Fix:  The WBCOPY command did not properly report an error when the source or
      target table was not found.
Fix:  The WBCOPY command always issued an error if the JDBC driver does not
      support batch updates even if batchupdate was set to false.
Fix:  When using a separate connection per tab, connection errors that occurred
      during a connection for a tab were not displayed to the user, and the
      "Connecting..." message would not be closed
Fix:  If rows where only inserted into a table with no primary key, the
      DbExplorer would not update the table
Fix:  Syntax highlighting for statements with embedded # was not displayed
      correctly for non-MySql connections
Fix:  When spooling data from within the editor, the progress was not shown
      correctly
Fix:  When turning password encryption on (or off) the encrypted (or readable)
      passwords were only written to WbProfiles.xml if at least on Profile
      was changed.
Fix:  When an import was cancelled no messages were shown.
Fix:  When a driver class was defined with a trailing space, the driver
      definition was not found and the connection to the server failed.
Fix:  Date columns were not displayed according to the date format defined
      in the Options dialog

Build 76, 12.12.2004
--------------------
Enh:  Files can now be dropped on the editor tabs a the dropped file will
      be loaded into a new tab.
Enh:  The display of messages in the log/message panel can now be controlled
      by WBFEEDBACK [on|off]
      This will override the setting from the Options panel until
      WBFEEDBACK is executed again, or the application is restarted.
      It does not change the global (default) setting.
Enh:  Files can now be executed using @<filename> or wbinclude <filename>
      (in contrast to Oracle, this "command" does require a statement
      delimiter if used together with other statements, e.g. @myfile.sql;
Enh:  Autocommit can be controlled with SET AUTCOMMIT ON/OFF for all DBMS
Enh:  Added sequence definition display for HSQLDB 1.7.2
Enh:  Added basic metadata support for Ingres
      (Procedure, Trigger, Sequences, Synonyms and View source display)
Enh:  WBEXPORT does not use quoting at all if -quotechar is not specified.
Enh:  The line ending for text and XML export can now be defined
      through the -lineending switch for the WBEXPORT command. Supported values
      are: dos,win,crlf for the sequence CHR(13)CHR(10) (=\r\n) and
      lf,unix for the LF character CHR(10) or \n
      -lineending=dos is equivalent to -lineending=win and -lineending=crlf
      -lineending=unix is equivalent to -lineending=lf
      If no line ending is defined, then the default platform line ending will
      be used (the textexport did always use LF before)
Enh:  WBEXPORT can now escape non-ascii characters in a unicode manner
      (e.g. \u0123, \n, \t). This can be enabled with the -escapetext
      parameter. Valid values for this parameter are:
      ctrl - escape all characters below ascii 32
      7bit - escape all characters below ASCII 32 and above 126
      8bit - escape all characters below ASCII 32 and above 255
      extended - escape everything outside [32,126] and [161-255]
      WBIMPORT now supports the -decode switch to read files which contain
      escaped characters from the WBEXPORT command.
Enh:  WBEXPORT now supports the -quotealways=true flag. In this case
      the quote character is always put around data values (without this switch
      the quote character was only used if the delimiter was found in the
      data value)
Enh:  The schema report written with WBREPORT is now always sorted
      by table name and the columns are sorted as well to allow better
      comparison between two different reports.
Enh:  For drivers supporting batch updates, batch execution can now
      be enabled with WBSTARTBATCH. The queued statements are sent
      to the server when WBENDBATCH is executed.
Enh:  When loading and saving editor files, the encoding to be used
      can now be selected.
Enh:  When savind data directly from the result set, all options from
      WBEXPORT can now be specified.
Enh:  A new option for the connection profile to confirm execution of
      any statement that modifies the database or its content.
Enh:  The WBEXPORT command now supports the -usecdata flag. If set to true
      character data will be written as CDATA sections in XML exports
Enh:  The Schema Report can now be written in DbDesigner format
      (http://www.fabforce.net/dbdesigner4/) by supplying
      -format=dbdesigner switch for the WBREPORT command.
Enh:  When defining a variable the SQL Statement used to retrieve the value
      can now also include variables.
Enh:  The DbExplorer now displays the number of tables/objects displayed
Fix:  The editor now reads UTF files with a leading BOM correctly
Fix:  Text import now ignores empty lines
Fix:  Text import did not work, if the number of imported columns was
      different to the number of columns in the table.
Fix:  Leaving out the -quotechar for WBIMPORT still used " as the quote
      character.
Fix:  The parameter -continueOnError for WBIMPORT did not work.
Fix:  Specifying only -header=true for WBIMPORT did not work.
Fix:  When an invalid file was passed using the -script parameter no
      message was displayed to the console.
Fix:  Oracle's LONG columns were not handled properly for XML import/export
Fix:  -concat and -charfunc did not work for WBEXPORT's SQL format
Fix:  When a workspace was corrupted (e.g. ZIP file damaged) the application
      would hang when loading the workspace and no error was reported.
Fix:  The WBEXPORT command could not be cancelled
Fix:  Supplying username/password directly in the URL did not work for
      connection profiles
Fix:  When a variable was used more then once in a statement, it was not
      replaced correctly.
Fix:  Workaround in variable definition with a SELECT statement for HSQLDB.
      (Statements with group functions were not evaluated correctly)
Fix:  The parameter -append for WBEXPORT did not work anymore.
Fix:  "Jump to next Statement" did not work if "Highlight current statement"
      was enabled
Fix:  Tried to prevent a reload in the DbExplorer while a database update
      is running
Fix:  Multi-Line comments (using /* ... */) are now displayed correctly
Fix:  WBEXPORT would not report an error if the table defined in
      -sourcetable did not exist
Fix:  The editor tab width can now be set in the options dialog

Build 75, 08.10.2004
--------------------
Fix:  The display of table source was broken

Build 74, 07.10.2004
--------------------
Enh:  When an error occurs during data retrieval, the rows that have been
      retrieved until then will be retained and a warning will be displayed
      in the message panel
Enh:  Added -emptystringnull for text import (WbIMPORT) to specify the
      behaviour for empty strings during import. -emptystringnull=true will
      insert a NULL value for an empty string (string of length zero)
Enh:  Updated support for Cloudscape to include the move to Apache Derby
Enh:  When searching for text in the editor and the search string is not found,
      a message is now displayed.
Enh:  When executing several statements, the currently executed statement can
      now be highlighted
Enh:  An XML report of the database tables can now be generated using
      the WBREPORT command or from within the table list of the database
      explorer.
Enh:  If a table does not have primary key columns defined, the key columns
      that should be used for updating the table can now be defined
      (implicitely all columns were used before)
Enh:  Several WBEXPORT enhancements:
      The command now supports the -keycolumns switch, to define
      the key columns to be used when generating UPDATE statements
      (to either override the definition from the database, or defined
      key columns if the table does not have any)

      The command now supports the -sourcetable switch, to directly
      export one or more tables without the need of an additional
      SELECT statement. Using the -sourcetable switch requires the
      -outputdir switch, to define the target directory of the generated files

      The command now supports the -concatfunc switch which allows to set
      a function that concatenates strings. This is needed for e.g. for MySQL
      which does not support any (standard) concatenation operator at all.
      The -concat switch and the -concatfunc switch are mutually exclusive.

      The command now supports transforming the resulting XML file
      using XSLT. Two new parameters (-stylesheet and -xsltoutput) have been
      added to support this. The transformation will be executed after
      the XML file has been created.
      The transformation can also be executed "standalone" by using
      the new command XSLT (this could e.g. be used to transform the result
      of the WBREPORT command into a different format)

Enh:  Cancelling a SELECT statement now works also for JDBC drivers that
      do not support the cancel() operation.
Enh:  The source display in the DbExplorer can now be expanded to cover the
      full width by using Ctrl-Shift-T (or the little arrows in the split
      display). The shortcut actually toggles the display between full width
      and split display
Enh:  Only selected rows can now be copied to the clipboard (as text, INSERT
      or UPDATE statements)
Enh:  If the password should not be stored for a profile, the user is now
      prompted to enter the password when trying to connect using that profile
Enh:  For Oracle, table and column comments are now also created in the
      SQL statement to recreate a table. This requires that the Oracle
      JDBC driver returns the comments. See the online help for details
      on how to configure the connection to Oracle to show comments
Enh:  A new option has been added to the connection profile "Rollback before
      disconnect". Some DBMS (e.g. Cloudscape) require that all pending
      transactions are ended before disconnecting. Cloudscape already starts
      a transaction during a SELECT statement, and requires all transactions
      to be ended before disconnecting. If this option is enabled
      SQL Workbench/J will issue a rollback before doing the actual disconnect
Enh:  The logging has been improved. Logging to the console can
      now be disabled (workbench.log.console=false). If enabled
      it will now log to System.err (instead of System.out).
      The format of the log message can now be defined through
      workbench.log.format
      Valid placeholders are:
      {type}        DEBUG, INFO etc
      {timestamp}
      {message}     The actual log message
      {error}       The error message from the exception (if present)
      {source}      Where the error occurred
      {stacktrace}  The exception stacktrace if any (will always be displayed
                    after the log message regardless of the position in the
                    format string
      If the level is set to debug, the stacktrace will always be displayed
Enh:  The batch runner now displays the messages returned from the individual
      commands to System.out and doesn't use the logging facility any more.
      Combined with workbench.log.console=false the output of a batch run
      is now very similar to the messages printed in the GUI.
      Additionally result sets (if available) can now be printed to the console
      using the commandline switch -displayresult=true
Enh:  Views and triggers are now displayed for Cloudscape in the
      Database Explorer
Enh:  Added the commandline switch -ignoredroperrors for batch mode.
      This sets the "Ignore errors from DROP commands" property for the
      connection (same effect as connecting with a profile where this
      behaviour is enabled)
Enh:  Variable subsitution is now supported. Variables can be defined
      interactively (using WBVARDEF) from a file or as the result
      of a SQL query.
      A variable can be referenced so that Workbench prompts never, only once
      or always for a value.
      For details see the online help.
Enh:  When pressing Shift while selecting one of the "Optimize Column Width"
      menu items, the column label will be taken into account for the
      optimal size. Ctrl-Shift-W will optimize all columns with respecting
      to the column's name. This shortcut cannot be remapped currently.
Fix:  The SQL history is now written in UTF-8 to preserve special characters
Fix:  When the application was closed the user was asked up to three times if
      he wants to save modified files
Fix:  When importing textfiles, the dot was not the default decimal separator
      as stated in the manual
Fix:  When importing textfiles with wbimport the columnlist was not recognized
      correctly if the commas where followed by spaces
Fix:  Even if a statement consisted only of comments or whitespace it was
      still send to the server
Fix:  Fixed a memory leak in the retrieval of foreign keys
Fix:  If a workspace could not be loaded (due to an error), the user is asked
      if he wants to create a new workspace with that name.
Fix:  When an error occurred during an import into the current result set
      choosing "Cancel" or "Ignore all" had no effect, the import would
      continue in either case.
Fix:  When clicking quickly in the list of tables in the DbExplorer, it
      could happen, that the application locked up (when the DB responded
      to slowly)
Fix:  SQL Statements that contained german umlauts (and possibly other
      non ASCII characters) would fail to execute
Fix:  When importing a text file empty values for numeric fields gave an error.
      They are now treated as NULL.
Fix:  When trying to delete multiple rows before switching to edit mode, only
      the first row was deleted (because switching to edit mode resets the
      row selection)
Fix:  Generate Delete Script wasn't working if
      "Disable automatic update table check" was turned on for the profile
      Fixed some minor problems during delete script generation.
Fix:  After changing the object type in the DbExplorer the focus is not set
      to the table list
Fix:  A profile where the driverclass was registered more then once
      (using different names) was not copied correctly.
Fix:  When importing a text file with -header=false and -columns=... the first
      line of the file was not imported.

Build 73, 02.08.2004
--------------------
Enh:  The TableSearcher now displays the number of rows for each table
Enh:  The resource file with translations is now also searched in the
      subdirectory language (relative to the location of workbench.jar)
      Thus it is possible to install other languages without re-compiling
      the application.
Enh:  When starting to edit data in the result set, the text is now
      automatically seleted. This can be set to old behaviour
      by workbench.table.edit.autoselect=false in workbench.settings
Enh:  The shortcut for the Redo command can now be configured
Enh:  Indexes can now be dropped and created from within the DbExplorer
Enh:  CLOB columns are now displayed properly (only tested for Oracle),
      they still cannot be updated.
Enh:  LONG columns for Oracle can now be read and written
Enh:  The variable prefix when creating a code snippet can now be defined
      in workbench.settings. The property name is workbench.editor.codeprefix
Enh:  A SQL file can now be reloaded
Enh:  From the table list in the DbExplorer an empty INSERT statement can now
      be generated for the selected table(s).
Enh:  When creating a Java Code snippet, a trailing ; will be removed from
      the Java String
Enh:  The COPY command and the DataPumper now allow creating a table when
      a source query is used. If the JDBC driver of the source system does
      not provide the correct column information for the source columns, this
      will not work properly.
Fix:  Workaround for a bug in the HP/UX Java implementation when setting
      a system property
Fix:  When switching the selected table quickly in the DbExplorer
      the data display would stop working.
Fix:  The COPY command can now also be invoked using WBCOPY. This is
      necessary for PostgreSQL as it has its own COPY command.
Fix:  When retrieving long VARCHAR columns from a Sybase Server, the
      Sybase JDBC driver would trow an exception while retrieving the
      MetaData for the ResultSet.
Fix:  The formatter would split up >= <= with a space which does not work
      for some DBMS
Fix:  Copying data in the DataPumper would fail if the target table should be
      created on the fly.
Fix:  DbExplorer: with MS SQL Server the Owner selection did not work for the
      procedure tab.
Fix:  DbExplorer: Fixed a problem when retrieving procedures
Fix:  Fixed a small problem with parsing scripts that contain # style comments
Fix:  Cleaned up the code for setting the wait (hourglass) cursor to make it
      more robust.
Fix:  Added elsif as an keyword for the editor syntax highlighting
Fix:  If a macro contained more then one statement, only the first one was
      executed
Fix:  The "Include Constraints" option wasn't working when dropping tables
      from within the DbExplorer
Fix:  If a statement produced an error, the statement not always selected
      correctly in the editor
Fix:  Fixed a deadlock in the DbExplorer when right clicking immediately after
      clicking in the table list (while the table definition was still beeing
      retrieved)
Fix:  When an error occurred during updating the result set, the message to
      continue/abort was not always displayed.
Fix:  Comments in the source query for the COPY command are now preserved
Fix:  Delete scripts where not generated correctly

Build 72, 13.05.2004
--------------------
Enh:  Rows in the result set can now be copied ("cloned")
Enh:  The text file import now reports the rows which had problems
Enh:  If no look and feel has been selected by the user (e.g. when starting
      for the first time), SQL Workbench/J now uses the system look and feel
Enh:  The Table Search Panel now has a "Select All" and "Select None" button
      to ease the selection of tables.
Enh:  In the Table Search Panel, the search can now also be invoked by
      pressing ENTER in the text field for the criteria
Enh:  The automatic check for the update table after the retrieve can now
      be disabled per profile. This is useful for slow connections/databases
      where the retrieval of the table meta data takes long.
Enh:  Added default definitions for DB2 driver
Enh:  When using the EXPORT command -createtable now also works for SQL
      statements that contain a join. SQL Workbench/J tries to include a
      CREATE TABLE which matches the result set structure as close as possible
Enh:  SELECT ... FROM table INTO temp_table now works with Informix
      and for PostgreSQL (slightly different syntax)
Enh:  The database explorer now optionally uses the list of table types
      returned by the driver when selecting the type *
      The Postgres JDBC driver returns only certain types (e.g. not the system
      tables) even when all table types are requested. This behaviour can
      be controlled through the property workbench.dbexplorer.usetypelist
      (true or false)
Enh:  The SQL formatter does not add a space between a function and the
      following opening bracket. The function names which are included in this
      check are retrieved from the JDBC driver.
      The space would break SQL statements for MySQL as it does not comply with
      the SQL standard.
Enh:  Batch updates are now supported for the DataPumper, the COPY and IMPORT
      commands (depending on the support by the JDBC driver of course)
Enh:  SQL Workbench/J can now be configured to ignore certain SQL commands.
      This is useful for e.g. scripts that are written for SQL*Plus and contain
      SQL*Plus specific statements (e.g. EXIT, WHENEVER)
Fix:  Importing a text file did not work for data types other then VARCHAR
Fix:  Updating the database from the DbExplorer is now done in the background
      so that the GUI doesn't lock up.
Fix:  When updating a table from within the DbExplorer, the setting
      to preview the update statements was not used.
      (The preview was never shown)
Fix:  A single quote character in a comment would break the parser to
      recognize the individual statements
Fix:  When using several windows, only the workspace for the active
      window was saved when closing the application
Fix:  The procedure display for SQL Server was not correct (it would always
      show "RESULT" as the type even if it really was a procedure) therefor the
      generated DROP statements weren't correct.
Fix:  Using GO as the delimiter for SQL Server did not work any longer
Fix:  When using "New Window" to open a new window with a different connection
      the connection from the first window was broken
Fix:  When opening the driver manager dialog from the connection dialog,
      and closing the driver manager with OK, the selected driver class in
      the current profile was changed back to the first driver (Thanks Meikel!)
Fix:  The SQL formatter was removing the semicolon at the end of a statement


Build 71, 05.04.2004
--------------------
Enh:  The SQL parser now accepts # as a single line comment character as well
      (MySQL standard)
Enh:  The EXPORT command can now export to HTML as well.
Enh:  If an error occurs during sending result set updates to the database,
      the user can now choose to abort or ignore the errors.
Enh:  In the result sets more then one row can now be selected and deleted.
Enh:  The popup menu for the table list (in the DbExplorer) now offers the
      possibility to delete all table data.
Enh:  Procedures and packages can now be recompmiled for Oracle
Enh:  Files can now be dropped from the filesystem into the editor
Fix:  If no development build is available the version check information does
      not show anything at all
Fix:  When closing tabs with files in it, subsequent tabs without names where
      not reloaded correctly the next time.
Fix:  The label for the alternate delimiter in the options dialog was not
      displayed correctly
Fix:  When using MS SQL Server with autocommit off, the update table was not
      retrieved correctly and thus "Copy as INSERT" was not working
Fix:  If a file was opened using Ctrl-O or saved using Ctrl-S the tab label
      was not updated.
Fix:  If the DataPumper (or import) was defined with update mode and only
      key columns where selected, it would fail without reporting the cause
      of the problem.
Fix:  When opening multiple windows, the DatabaseExplorer would not work
      properly if the Connection Profile was set to "One Connection per Tab"
Fix:  Workspaces where one editor tab was completely empty were not loaded
      properly.
Fix:  The page setup dialog (from within the print preview) caused the
      application to hang when run under Linux

Build 70, 05.03.2004
--------------------
Enh:  The EXPORT command now supports the -append parameter to append text of
      SQL output to an already existing file
Enh:  When printing, the page now contains a header identifying the source of
      the data (e.g. the table's name when printing its definition or the
      beginning of the select statement)
Enh:  Reworked the layout of the DataPumper
Enh:  Errors reported from Oracle's SET command are now ignored. Thus scripts
      intended for SQL*Plus containing things like SET LINESIZE can be executed
      without an error message.
Enh:  Column/Table level constraints defined with the check() keyword are now
      displayed in the SQL source for a table. Currently this is implemented for
      Firebird, Postgres, SQL Server, Oracle, Adaptive Server Anywhere and
      HSQLDB >= 1.7.2 RC2
Enh:  The DatabaseExplorer now shows Sequences for Oracle
Enh:  The connection info can now be configured with the property
      workbench.gui.connectiondisplay
      The value for that property can contain the following placeholders:
      %username%, %url%, %profile%, %catalog%
      The placeholders are case sensitiv!
      If this property is not set, the old display will be shown. The following
      entry would re-created the old display: User=%username%, URL=%url%

Fix:  Oracle: VARCHAR columns with UTF8 and nls_length_semantics = char are now
      displayed correctly
Fix:  The setting to disable/enable the DBMS_OUTPUT package by default for
      Oracle was not saved (so it was enabled always)
Fix:  Oracle: When retrieving LONG columns with DBMS_OUTPUT support enabled,
      the whole statement would fail
Fix:  If a workspace was closed, the first tab was not renamed correctly
Fix:  SQL Workbench/J changed the color of the grid lines to a light gray which
      causes problems for some background/foreground color combinations. The
      grid color can now be configured. To get the default dark gray back, add

      workbench.table.gridcolor=128,128,128

      to your workbench.settings
Fix:  The shortcut for the DatabaseExplorer (Ctrl-D) could not be
      remapped correctly
Fix:  "Match Bracket" did not show up in the shortcut list (and on the menu)
Fix:  The display was not scrolled properly when jumping to the end of a line
      which does not fit into the editor horizontally
Fix:  Creating a new Connection Profile did not always work
Fix:  Fixed some problems with SQL Server, because the MS JDBC driver did not
      allow for multiple concurrent statement objects to be created.
Fix:  -mode=update,insert did not work for the COPY command because the
      parameter for the key columns was not parsed
Fix:  When an error occurred during the update of the database, the message
      was not displayed correctly (missing key in the resource file)
Fix:  If an error occurred when saving the contents of the SQL editor to a
      file, no message was displayed to the user.

Build 69, 01.02.2004
--------------------
Fix:  When using a DBMS with schemas, the DbExplorer would not always
      retrieve the data correctly
Fix:  When running scripts with a large number of CREATE statements, a "Maximum
      number of open cursors exceeded" could occur with Oracle
Fix:  Workaround for JDBC drivers that do not support the setMaxRows() function
Fix:  When saving data from the result set, the export type was determined by
      the extension and not by the selected file filter. Thus an export into
      a text file with an extension other then txt did not work.
Fix:  The macro manager could not be closed if no macro was defined
Fix:  The Oracle data types NVARCHAR2 and NCHAR were not displayed
      correctly in the table definition
Fix:  The COPY command always required a -targetprofile
Fix:  The source for functions in PostgreSQL is not displayed correctly
Enh:  Added support for ThinkSQL
Enh:  Added support for DBMS which only allows definition of foreign and
      primary keys inside the CREATE TABLE statement
Enh:  The status bar is now always displayed in the main window (not only when
      the result panel is visible)
Enh:  Data can now be saved as SQL UPDATE statements as well (if the table
      has a primary key defined)
Enh:  IMPORT, COPY and the DataPumper can now optionally update existing records
Enh:  When using "Execute Current" the editor now (optionally) jumps to the next
      statement.
Enh:  The COPY command does not require a profile any more. If neither source nor
      target profile are specified the current connection will be used for both.


Build 68, 20.01.2004
--------------------
Fix:  Spooling of more then one table from within the DbExplorer did not work


Build 67, 20.01.2004
--------------------
Enh:  Selected text can now be indented and un-indented using the tab key
      (or Shift-Tab)
Enh:  Column selection mode can now also be activated by keyboard.
      Alt-Q will activate the column selection mode for the next selection
      Column selection is always possible by holding down the Ctrl key while
      selecting with the mouse
Enh:  Jump to first statement and jump to last statement are now
      available for the statement history.
Enh:  If a statement fails (while executing several statements),
      it is now highlighted in the editor
Fix:  When cancelling an update, or an error occured during the update
      of changes made directly in the result set, the changes were lost.
Fix:  The SQL source for a table was wrong for Firebird, because Firebird
      does not understand the NULL keyword
Fix:  Macros where not saved
Fix:  The MacroManager did not work if no macros where defined.
Fix:  The COPY command did not work if no columns where specified
Fix:  Adjusted the MetaData SQL for HSQLDB 1.7.2 Triggers
      (which unfortunately breaks the trigger display for earlier versions
      as the column names where changed)
Fix:  The source code for VIEWS was wrong
Fix:  The last SQL tab could be closed.


Build 66, 10.01.2004
--------------------
Enh:  A Data Pumper is now available which makes it possible to copy
      tables directly from one database to another without using export files
      (Tools->Data Pumper)
      The same functionality is also available through the COPY command.
Enh:  The connect dialog now has a separate button to copy a profile
Enh:  The export command now supports the -showprogress switch
Enh:  If DBMS_OUTPUT package for Oracle is enabled by default, a default buffer
      size can now be defined
Enh:  You can now check if newer versions are available from the WebSite
      (Help -> Check for updates)
Enh:  With MySQL the database explorer now displays correctly columns of
      type enum or set (complete definition)
Enh:  Reworked the documentation about using batch files
Fix:  Logging with type INFO did not work
Fix:  When reformatting SQL statements the formatter would remove closing
      brackets in some cases.
Fix:  Fixed a repainting problem in the editor
Fix:  The table to be updated for in-place editing and importing was not
      recognized properly if it was prefixed with a user
      (e.g. SELECT * FROM myuser.mytable)
Fix:  When changing a connection profile and saving the profiles from within
      the connect dialog, the application would still ask if the profiles
      should be saved when exiting.
Fix:  -commitevery for IMPORT was not recognized for text imports
Fix:  With Oracle the DbExplorer would sometimes not display anything if
      something other then "*" was selected in the "Type" dropdown of the
      table list.
Fix:  The -profile and -script parameters were broken (Thanks Jared!)
Fix:  The SQL formatter would remove a semicolon at the end of a statement
Fix:  Fixed a small bug when creating an IN list with numbers
Fix:  The current "MaxRows" setting is now stored in the workspace