Build 104, 31.03.2009
----------------------
Enh: (103.5) When defining a new filter for a result set, the currently
     selected column is now pre-selected in the dropdown if no filter
     is defined.
Enh: (103.4) When using WbCopy's -createTarget=true, data type mappings
     can now be specified in workbench.settings that enhance or
     overwrite the data type mapping returned by the driver.
     Details can be found in the manual.
Enh: (103.3) Manually changed column order in the table data of
     the DbExplorer can now be saved. Either manually through the
     popup menu of the table header, or automatically through
     an option for the DbExplorer.
Enh: (103.2) When defining the jar library for a Look & Feel, the 
     application now scans the libraries for the approriate classes
Enh: (103.2) Removed the limitations that DbExplorer panels must be 
     the last tabs and cannot be the only tab.
Enh: (103.1) A new option is available to customize how external files 
     that are loaded in an editor tab are remembered in the workspace.
Enh: (103.1) A single record dialog is now available to edit data in a
     result set (Data -> Single record dialog)
Enh: (103.1) A new option to control the use of uppercase keywords for the
     SQL formatter is available (Tools -> Options -> SQL Formatter)
Fix: (103.5) Fixed a problem with the formatter with inline views, 
     unions and additional brackets
Fix: (103.4) The driver dropdown in the connection dialog was not updated
     when a new driver was added while the connection dialog was open.
Fix: (103.4) The About Dialog was not displayed on MacOS when more than
     one application window was open.
Fix: (103.4) The quick filter in the Trigger panel was no longer working
Fix: (103.4) Copy & Paste shortcuts were not working on MacOS
Fix: (103.4) Fixed a repainting on Mac issue in the toolbar when 
     switching between DbExplorer tab and editor tabs
Fix: (103.4) Save Data As was not working if it has never been called before
Fix: (103.3) Fixed displaying the PDF manual on MacOS (Thanks Markus!)
Fix: (103.2) Some workspaces were not loaded properly and editor tabs would 
     be removed upon loading.
Fix: (103.1) When refreshing the source for a table or a view, the column
     definition was not reloaded from the database.
Fix: (103.1) When selecting a different view in the DbExplorer while the
     view source was displayed, the wrong source code was displayed for
     the newly selected view.
Fix: (103.1) When MySQL was not set to ANSI mode, primary key columns that
     needed quoting were not detected properly due to MySQL's non-standard
     quoting character (in non-ANSI mode)

Build 103, 31.01.2009
--------------------
Enh: (102.12) Removed the need to specify the columns of the source query
     for WbCopy. If -columns is not specified when using -sourceQuery it
     is assumed that the names of the query columns match the names of 
     columns in the target table.
Enh: (102.12) Closing of editor tabs can now be confirmed (General Options)
Enh: (102.11) The display strategy for the tabs in the main window can now 
     be changed between scrolling and stacked ("Scroll tabs" in the general
     options)
Enh: (102.11) Individual SQL panels can now be locked to prevent accidental
     closing of the panel.
Enh: (102.11) A new option to close all other tabs has been added to the 
     popup menu of the tabs.
Enh: (102.11) Comment lines in workbench.settings where the very first character
     is a # are now preserved if immediately followed by a property line. 
     A comment line that is followed by an empty line will still 
     be removed.
Enh: (102.11) Display SQL source for comments for additional object types
     such as views, sequences, procedures where possible.
Enh: (102.11) The "Manage Drivers" dialog now searches the selected jar file
     for a JDBC driver if a new library is selected.
Enh: (102.10) The placement of the details tabs in the DbExplorer's table list
     can now be configured through the options dialog, not only in
     the settings file.
Enh: (102.10) The syntax highlight colors can now be configured through
     the options dialog
Enh: (102.10) The "select expression" replacement is now also used
     inside the "Search table data" tab.
Enh: (102.9) for specific datatypes, data retrieval in the DbExplorer can 
     now be done by applying expressions to the column when building the SQL
     to select the data. The replacement is defined per database and
     datatype in workbench.settings:
     workbench.db.[dbid].selectexpression.[type]=expression(${column})
     [type] is a "clean" version of the datatype for which this rewrite
     rule applies. "Clean" means without any brackets.
     For name of the column to be retrieved the placeholder ${column} is
     used. To select all varchar columns for postgres in upper case the
     following rewrite rule can be defined:
     workbench.db.postgresql.selectexpression.varchar=upper(${column})
     The datatype must be specified in lowercase

Enh: (102.8) A new option to make versioned backups of the workspace is now
     available (Tools -> Options -> General -> Create Workspace Backup)
Enh: (102.8) The removal of comments when the "remove comments" option is 
     active has been moved to a later stage in the statement processing. This
     way the new feature to name result sets can be used with DBMS that do not
     support embedded comments in SQL statements.
Enh: (102.7) The dropdowns for schema/database can now be reloaded in 
     the DbExplorer
Enh: (102.7) The result set tabs can now be closed or renamed through their
     context menu.
Enh: (102.4) Completely reworked the macro handling. Macros can now be grouped,
     manually sorted, hidden from the menu and can be assigned a shortcut.

        Once the old WbMacros.xml has been opened and saved with the new version,
        older versions of SQL Workbench cannot read that file any longer!

Enh: (102.4) Result sets can now be named by specifying a keyword in the
     comment prior to the statement to distinguish different result tabs.
     To give the result tab a name, add
     @wbresult myname
     to the comment prior to the statement, e.g.:

     -- @wbresult List of contacts
     SELECT * FROM person;
     /*- @wbresult List of companies */
     SELECT * FROM company;

     The keywords must be specified in lowercase.
     It is  case-sensitive (@WbResult will not work)

Enh: (102.4) Added 'WbListTriggers' commands to list all triggers in the
     database (showing the information from the "Triggers" panel in DbExplorer)
     and WbTriggerSource to display the source of a trigger. The DESCRIBE
     command now also returns the list of triggers for a table.
Enh: (102.4) When importing a text file, WbImport does no longer tries to guess
     different timestamp or date formats if the default format leads to an error.
     Instead an error is reported immediately.
Enh: (102.4) A new commandline argument -interactive is available when running
     in batch mode. This enables parameter prompting and execution confirmation
     if necessary.
Enh: (102.4) WbInclude can now be called with just a filename. If no parameter
     switch is present, it is assumed that the rest of the commandline
     is the filename. In that mode, no further parameters can be specified
     (WbInclude will use defaults then)
Enh: (102.2) The HTML manual is now also distributed as a single HTML page
     The display of the single page from within the application can be
     enabled by setting the property
     workbench.help.singlepage=true
     in workbench.settings
Enh: (102.2) A new workbench command to show the source of a stored procedure
     is available (WbProcSource)
Enh: (102.2) WbList has been extended so that the object names and/or
     types can be specified.
Enh: (102.2) WbCopy now also supports -truncateTable (not only -deleteTarget)
Enh: (102.2) When using a line filter for a text import the matching is less
     strict now. The pattern does not need to match exactly the line
     but must occur in the line (technically it was changed from matches()
     to find()) to make filtering complete lines easier.
Enh: (102.2) SQL Workbench/J can now be run interactively in console mode
     To start the SQL Workbench/J console, use the supplied scripts
     sqlwb.cmd or sqlwb.sh
Enh: (102.2) The status bar will now display the number of selected rows
     If numberic values from a single column are selected, the sum of the
     values will be displayed. This can be turned off in the Options
     dialog ("Data Display" section)
Enh: (102.2) The messages in the message tab can now be deleted manually
     (Edit -> Clear messages)
Enh: (102.2) A new option for WbExport is available (-writeEmptyResults) to
     surpress the creation of the outputfile if the result set is empty.
     The default is -writeEmptyResults=true
Enh: (102.2) The values for search & replace in the editor are now saved and
     available as a dropdown in the dialogs
Enh: (102.2) The logfile can now be displayed directly from within the
     application using Help -> View logfile
Enh: (102.2) The location of the settings file and the log file are now
     displayed in the Options dialog
Enh: (102.1) The collation to be used when sorting a result set can now
     be selected in the options panel ("Data Display" page)
Fix: (102.12) The placement of the NULL and DEFAULT keywords were not 
     correct in the generated table source in the DbExplorer
Fix: (102.11) When displaying the source for views or tables in the 
     DbExplorer grants that were made to the current user were
     not displaye (thanks to Marcus for pointing that out)
Fix: (102.11) When the tabs in the mainwindow where displayed on 
     two or more lines, the context menu to rename a tab was no 
     longer displayed.
Fix: (102.11) Fixed several issues with retrieving object sources
     for DB2 on z/os (thanks to Frank!)
Fix: (102.11) When selecting data from another user's schema, 
     and updating the result set, the generated SQL to update the 
     table did not contain the schema.
Fix: (102.10) The -sourceDir parameter for WbImport was not working 
     with relative directories if WbImport was called from within a 
     script using WbInclude
Fix: (102.10) The "Tab" key was no longer working in the editor
Fix: (102.7) "SQL -> Export Query result" was not working
Fix: (102.7) The shortcuts for Copy, Cut & Paste can now be defined through
     the shortcut definition dialog.
Fix: (102.7) WbCopy (and DataPumper) did not work with tables that had
     non-standard column names that needed quoted (either because the
     names consited of mixed-case or they contained special characters
     that required quoting.
Fix: (102.6) Changing the background of the connection information in the 
     toolbar only worked with the Nimbus look and feel.
Fix: (102.6) When a macro was invoked using a shortcut with "Shift" the current
     text in the editor was replaced.
Fix: (102.5) The replacement of macro parameters (e.g ${current_statement}$) was 
     broken after the macro rework
Fix: (102.4) The multi-page HTML manual was no longer displayed
Fix: (102.4) "Remove comments" was not working properly if the comments contained
     quote characters
Fix: (102.3) When copying a connection profile, the property "Remove comments"
     was not copied.
Fix: (102.3) Removed the brackets from the application name that is set
     in the connection properties to work around the strange limitation
     in the current Oracle drivers (11.1.0.7.0)
Fix: (102.3) Drop Trigger from within the DB Explorer was no longer working
Fix: (102.3) WbExport with -outputDir did not work any longer if only a single
     table was specified.
Fix: (102.3) Using WbExport with -writeEmptyResults=false together with
     -append=true did not produce the expected result.
Fix: (102.3) Fixed some errors in the german localisation
Fix: (102.3) When using multiple windows together with "Separate Connection Per Tab"
     the application could lock up.
Fix: (102.3) When changing database or schema in the DbExplorer the table
     information was not cleared properly
Fix: (102.2) A hack has been implemented to display SQL Server's timestamp
     columns (which are returned as a byte array) as a hex string (the same
     way the Query Analyzer displays the timestamp column)
Fix: (102.2) The list of stored procedures was not displayed
Fix: (102.2) When reformatting SQL Statements, Workbench variables where not
     treated correctly
Fix: (102.2) WbCopy did not work when specifying multiple source tables
     with -deleteTarget and -checkDependencies
Fix: (102.2) Column names with Chinese characters were not displayed correctly
Fix: (102.2) WbCopy incorrectly assumed that the JDBC driver does not
     support batched updated and disabled JDBC batching
Fix: (102.2) -excludeFiles for WbImport did not work if the filename contained
     a dot (e.g. dbo.table.txt)
Fix: (102.2) Editing result sets that were retrieved from more than one table
     was no longer working.
Fix: (102.2) Tried to make the application more robust against out of memory
     errors.
Fix: (102.2) The parameter -delimiter for WbInclude now uses a colon as the
     delimiter to specify a single line delimiter, e.g. -delimiter=GO:nl
     in order make quoting of the parameter not necessary and avoid confusion
     with an actual semicolon in the definition. The old style is still
     supported but will be removed in the future.
Fix: (102.2) When a profile is set to "Read Only", in place editing of
     results is now disabled.
Fix: (102.2) When using a WbExport together with a SELECT statement, the
     "Max. Rows" option (lower right corner of the MainWindow) is not longer
     used for the SELECT.
Fix: (102.2) The status column was not always displayed if something was
     changed in the result set
Fix: (102.1) The setting to sort with a language specific collation was not
     working any longer.
Fix: (102.1) -excludeTables did not work properly in all cases for WbSchemaDiff
Fix: (102.1) If the definition for a Look & Feel was not complete (e.g. a
     missing classname) the "Look & Feel" panel in the Options window could no
     longer be displayed.

Build 102, 15.09.2008
---------------------
Fix: (101.0) The connection dialog showed a wrong label for the "Remove comments"
     property

Build 101, 13.09.2008
--------------------
Enh:  (100.9) Made WbSchemaDiff a bit more "robust" when comparing schemas
      from different DBMS
Enh:  (100.9) When displaying the source for a view, grants given on that view
      are now also displayed for Postgres, Oracle, HSQLDB, H2, MySQL, Firebird
      DB2, Derby and SQL Server
Enh:  (100.8) A new option (Options -> Data Editing) is available to warn
      when a result set with changes will be discarded (e.g. when running a
      new SELECT while changes to the current result have not been saved)
Enh:  (100.7) The DataPumper table dropdown now displays Excel Worksheets
Enh:  (100.6) A new option for WbSchemaDiff is available that treats views from
      the reference schema just like tables, and compares them to corresponding
      tables in the target schema.
Enh:  (100.6) A new option to automatically optimize the individual row heights
      to match possible multi-line values is available. This can be applied
      automatically after the retrieval of the data, or manually using
      View -> Optimize Row Height (or the popup menu on the column header)
Enh:  (100.5) The parameter -trimValues for WbImport can now also be used
      for XML imports.
Enh:  (100.4) A new parameter -rowNumberColumn is available for text exports
      that can be used to generate a column with the current row number.
      If the parameter is specified with a value, the value defines the name
      of the additional column. If the text file is not created with
      a header a value for the rowNumberColumn must still be given to enable
      the creation of the additional column. The row number will always be
      exported as the first column.
Enh:  (100.4) A new parameter -excludeFiles is available for WbImport when
      using the -sourceDir switch. With this parameter, files can be excluded
      while processing the contents of the directory. The value is a comma
      separated list of (partial) file names. Any filename that contains one
      of the values will be ignored.
Enh:  (100.4) A new parameter -ignoreOwner is available for WbImport. In case
      export files have been created including the owner information (e.g.
      myschema.person.txt) the owner can now be ignored when importing files
      from a sourcedirectory.
Enh:  (100.4) -quiet has been removed, and is now included with the
      -feedback=true parameter.
Enh:  (100.3) The display of warnings can now be surpressed. This can be set
      in the connection profile, as a parameter when connecting in batch mode
      (-hideWarnings=true) or using the new command WbHideWarnings [true|false]
Enh:  (100.3) The usage of the generic execute() method when running select
      statements can now be enabled (instead of using executeQuery()) using
      the property: workbench.db.select.genericexecute=true in the file
      workbench.settings
Enh:  (100.3) A new parameter -quiet can be specified in batch mode, that
      will surpress some informational messages that are not surpressed
      when using -feedback=false (or WbFeedback off).
Enh:  (100.2) WbConnect can now be used in GUI mode as well. It will only
      change the connection as long as the current script is running. The
      "global" connection will be restored, once the script has finished.
Enh:  (100.2) The number of columns that are put on a single line when
      reformatting statements can now also be adjusted for UPDATE and INSERT
      statements.
Enh:  (100.1) The margins used to render data can now be configured using
      the property workbench.gui.renderer.insets
      The property value is a comma separated list of integer values to define
      the top,left,bottom,right insets for a single data cell.
Enh:  (100.1) CHECK constraints were not generated in the DbExplorer for DB2
Enh:  (100.1) A new command WbDataDiff has been added which compares the
      data of one (or more tables) and creates approriate scripts to
      update the data of the target table to be the same as the reference
      table.
Enh:  (100.1) The default encoding (when no encoding is given) for the WbInclude
      command can now be configured using the property workbench.encoding
      The default is displayed when WbInclude is run without parameters.
Fix:  (100.9) The table reference navigation created wrong SQL statements if
      the same table was referenced through more than one foreign key reference.
Fix:  (100.9) On Linux with the GTK Look and Feel the focus was not set to the
      "Select connection" window upon startup.
Fix:  (100.9) WbInclude would fail if no connection was available (e.g. because
      the included script would make the connection)
Fix:  (100.8) Re-assigning a Shortcut was only activated after restarting
      the application.
Fix:  (100.8) Display of text columns should now work for Informix
Fix:  (100.7) WbExport did not escape the content of columns correctly.
      Previously the escaping was only done for character data, now it's done
      for all data types (unless -useCDATA is specified).
Fix:  (100.7) "Check table dependencies" did not always work correctly for
      deleting tables, when one of the selected tables was also a child
      of one of the tables that were added during FK checking and that table
      was a self-referencing table.
Fix:  (100.7) WbSchemaDiff did not release the connections properly.
Fix:  (100.7) The row height was not retained when editing values in the
      result set or applying a filter
Fix:  (100.6) Calling stored procedures with output parameters was not working
      properly, especially when regular parameters were needed as well.
Fix:  (100.6) Tried to make retrieval in the DbExplorer more robust agains
      hanging connections.
Fix:  (100.5) In some cases WbInclude would fail processing a script.
Fix:  (100.5) When using -append=true and -createTable=true for SQL Exports
      the CREATE TABLE was not written (appended) to the output file (because
      WbExport would never write the "header" for an export that appends to
      an existing file, which does not make sense for SQL INSERT exports.
Fix:  (100.4) When importing a directory using -sourceDir, WbImport would
      treat the files containing tables lobs as regular table files e.g.
      searching for a table mytable_lobs.
Fix:  (100.4) Resolving table dependencies for INSERT (WbImport) or DELETE
      did not work if the list of tables contained a self-referencing table
      that was referenced by another (parent) table.
Fix:  (100.4) A change to the driver for a connection profile was not detected
      as a change, so the user was not asked to save the profiles when stopping
      the application
Fix:  (100.3) The toolbar was not always correctly repainted when a workspace
      was closed
Fix:  (100.3) When "Autosave Workspace" was enabled and the workspace contained
      an external file, the user was prompted if the file should be saved
      each time a statement was executed. Now the external file is automatically
      saved as well, when the workspace is saved.
Fix:  (100.3) When a script ended with a statement that had a dangling
      single quote, the last (incorrect) statement was not executed at all
Fix:  (100.3) Common Table Expressions (WITH ... AS ...) were not formatted
      correctly.
Fix:  (100.3) "Copy data to clipboard" was not always enabled, even if a
      result set was available.
Fix:  (100.2) When using "Search table data" in the DbExplorer, the connection
      profile attribute "Trim CHAR data" were not used to retrieve the data.
Fix:  (100.2) The SQL source for sequences was no longer displayed.
Fix:  (100.2) The application did not always ask to save the connection
      profiles even if they were modified
Fix:  (100.2) Triggers were not displayed for DB2 when the server was running
      on 64bit Windows
Fix:  (100.2) When changing the the current database in the DbExplorer
      in MySQL, updating the data did not work, because the table
      in the update statement was not fully qualified (to include the
      database name)
Fix:  (100.1) The Option "Map Oracle DATE to Timestamp" was only applied
      when restarting the application
Fix:  (100.1) WbExport's XML format now defaults to XML 1.0 again. An option
      has been added for WbExport to select version 1.1 if that is needed
      in order to use the newly allowed characters. XML 1.1 support
      can be enabled using -xmlVersion=1.1
      The default can be set with the property workbench.xml.default.version
Fix:  (100.1) Using WbInclude with a multi-byte characterset (e.g. UTF8)
      did not work properly
Fix:  (100.1) The WHEN condition for Oracle triggers was not displayed in the
      SQL source. Thanks to Marcel for the fix.
Fix:  (100.1) WbInclude did not give a proper error message if the specified
      file was not found.

Build 100, 17.05.2008
---------------------
Enh:  (99.10) If the configuration file was changed outside of SQL Workbench
      the application now asks if the external changes should be overwritten
Enh:  (99.10) A new tab can now be opened by double-clicking in the "free"
      are of the tab title display (as with Firefox)
Enh:  (99.9) The display of the tab index can now be disabled in the
      general options.
Enh:  (99.8) A new property to treat Oracle DATE columns as timestamp
      has been added to the options dialog. If that option is enabled, it
      will overwrite the setting for Oracle's JDBC driver.
Enh:  (99.8) The XML export now writes XML 1.1 to allow for escaped control
      characters that are below 0x20
Enh:  (99.8) WbCopy can now optionally delete rows from the target table that
      are not present in the source table. To enable this, use the parameter
      -syncDelete=true
Enh:  (99.7) The output of WbSchemaReport now contains a new tag
      <foreign-keys> that contains the definition for each foreign key to
      make it possible to create the necessary SQL for multi-column
      foreign keys.
      The individual FK references per column are still present
Enh:  (99.7) The execution of connect scripts is now also logged when
      switching to a tab and a new connection is created.
Enh:  (99.6) WbImport can now import multiple files from a source directory
      into a single table. When both -sourceDir and -table are specified all
      files from the source directory are imported into the target table.
      Note that -deleteTarget does not work in this mode.
Enh:  (99.6) The "Drop Tables" dialog in the DbExplorer can now sort the
      tables according to their FK references in order to allow dropping
      them with DBMS that do not support a cascading DROP
Enh:  (99.6) The "Drop Tables" and "Drop Columns" dialogs in the DbExplorer
      can now also display the generated script.
Enh:  (99.6) WbReport now supports the parameter -reportTitle. The supplied
      value will be written as report-title into the generated XML.
Enh:  (99.4) A connection profile can now be set to "read only". All statements
      that could possibly change the database are ignored.
Enh:  (99.3) The log messages from WbCopy are more detailed now. Reporting
      the number of updated and inserted rows.
Enh:  (99.2) When specifying the complete connection on the commandline the
      property -seperateConnection is now supported. It defaults to true
Fix:  (99.11) Sometimes error messages during the connect were displayed
      twice.
Fix:  (99.10) The formatter did not process CREATE TABLE ... AS SELECT
Fix:  (99.10) When moving tabs while "Use separate connection per tab", the
      moved tab was not always connected properly.
Fix:  (99.10) Descending indexes were not displayed correctly for Oracle
Fix:  (99.10) When opening a new workspace for the current connection the old
      workspace was not automatically saved and the connections were not
      managed correctly if "Separate Connection per Tab" was used.
Fix:  (99.10) Using $wb_skip$ with the -fileColumns parameter did not work
      when importing multiple files into a single table
Fix:  (99.10) The parameter -fileColumns did not working when importing
      multiple files into a single table
Fix:  (99.9) The parameter -keyColumns was broken for WbCopy
Fix:  (99.8) When running WbSchemaDiff using -includeSequences=true with
      a DBMS that does not support sequences the command silently failed
      without an error message.
Fix:  (99.8) The SQL source for table and column comments was not generated
      correctly
Fix:  (99.7) The syntax highlighting for multi-line comments using /* .. */
      was incorrect
Fix:  (99.7) The data types of the target columns were not retrieved correctly
      for WbCopy if a column mapping was defined.
Fix:  (99.7) -createTarget=true was broken for WbImport with XML files
Fix:  (99.7) WbExport -type=SQLInsert -createTable=true was broken
Fix:  (99.7) The SQL source for unique keys was not created correctly for
      SQL Server.
Fix:  (99.6) When creating stored procedures in Oracle, error messages
      were not displayed if the procedure/package name was no specified
      in upper-case in the CREATE statement.
Fix:  (99.6) In Oracle, the datatype was not displayed correctly for columns
      with the datatype NUMBER (no further details) in the DbExplorer
Fix:  (99.5) When hitting ENTER at the end of a line with no with no whitespace
      the line was duplicated
Fix:  (99.4) Scripts with line comments that contained a single quote were
      not processed correctly if the line comment did not start at the first
      column of the line.
Fix:  (99.3) The SQL Formatter now works with multi-byte encoded characters
Fix:  (99.3) The reported rows per table where incorrect when using
      WbCopy with multiple source tables.
Fix:  (99.3) Using a mode with "update" for WbCopy with multiple tables
      did not work.
Fix:  (99.2) The selected object type was not saved and restored correctly
      in the DbExplorer
Fix:  (99.2) When using -createTarget=true with WbCopy, tables that used
      reserved words as column names could not be created
Fix:  (99.2) Workspaces were saved under certain circumstances even if
      -nosettings was specified.
Fix:  (99.2) When running WbExport with the -outputDir parameter and the
      directory did not exists and -createDir=true was not specified the
      command silently failed.
Fix:  (99.2) Running in batch mode and using -displayResults=true
      was not working when statements were executed that had no results.
Fix:  (99.1) Running WbReport with -includeViews=false did not work.
Fix:  (99.1) Auto completion did not detect tables that were joined
      with the JOIN keyword (LEFT JOIN or INNER JOIN would work)
Fix:  (99.1) Reference table navigation was broken.
Fix:  (99.1) CREATE TABLE statements were not formatted correctly if
      they contained inlined PRIMARY KEY definitions.
Fix:  (99.1) Auto completion for views was not working in Derby

Build 99, 01.03.2008
--------------------
Enh:  (98.6) Files generated by WbExport are now always lowercase
Enh:  (98.6) When running in batch mode, individual update counts can now
      be consolidated into a single message at the end (similar to the
      "Consolidate script log" in the GUI) using the new parameter
      -consolidateMessages=true
Enh:  (98.5) When exporting data with WbExport to a spreadsheet format
      (OpenDocument, Excel) parameter -header now defaults to true
Enh:  (98.2) WbExport can now create OpenDocument Spreadsheet files (ods)
      and Excel XML spreadsheets (xslx)
Enh:  (98.2) Thanks to Alessandro an export to a native Excel file is now
      also available. In order to use the Excel export, it is necessary
      to copy the POI library (http://poi.apache.org) into the same directory
      where workbench.jar is located. The POI library has to have the
      name poi.jar
Enh:  (98.1) The launcher executable has been renamed to SQLWorkbench.exe
      and the shell script has been renamed to sqlworkbench.sh
Enh:  (98.1) WbExport can now optionally create the necessary output directory
      when using the new option -createDir=true
Enh:  (98.1) When running in batch mode the current connection can be changed
      using the new command WbConnect. It accepts the same parameters to
      define a connection as the commandline. The command will be ignored
      when running the GUI.
Fix:  (98.5) The DbExplorer panel now remembers the focused component when
      switching tabs.
Fix:  (98.5) When using "Save Data as" with a spreadsheet exports, writing
      the header row could not be turned on.
Fix:  (98.4) Running SELECTs did not work for certain data types with the
      SQLite JDBC driver
Fix:  (98.4) "Replace & Next" did not work if the replacement String contained
      characters that were relevant for regular expressions.
Fix:  (98.4) Multi-line values were not correctly exported for XLSX and ODS
      spreadsheets.
Fix:  (98.3) Date values were not written correctly with the new XSLX (XML)
      format.
Fix:  (98.3) The option "Ignore Identity columns" was not saved from the
      options dialog.
Fix:  (98.2) Auto completion did not work for CREATE OR REPLACE VIEW
      statements (but did for CREATE VIEW)
Fix:  (98.2) "Match Bracket" would not scroll the bracket line into view
      if the matching bracket was not visible in the editor.
Fix:  (98.1) When disabling "Open DbExplorer as tab", the DbExplorer window
      would fail to display the db information when shown for the second time
Fix:  (98.1) The reload button did not work in the DbExplorer data panel,
      if "Autoload table row count" was disabled.
Fix:  (98.1) Exporting LOBs into external ZIP files did not work if more than
      one table contained blob columns with a multi-table export.
Fix:  (98.1) The parameter -logfile was no longer working if the specified
      logfile did not already exist.


Build 98, 13.01.2008
--------------------
Enh:  (97.10) The Mac Bundle now comes with a universal binary (launcher)
      so it should run on PowerPC and Intel Macs. Thanks to Matt for
      providing me with the new binary
Enh:  (97.10) Editor tabs can now be re-order using Drag & Drop.
Enh:  (97.9) In batch mode warnings reported when connecting to the DBMS
      are now retrieved (and logged) immediately.
Enh:  (97.9) Columns can now be dropped from within the DbExplorer's
      table definition.
Enh:  (97.8) The text in the "What's new" window content can now be searched
Enh:  (97.8) The data display in the DbExplorer now remembers the
      sort column when the data for a table is reloaded (but not
      when a different table is selected). This can be controlled through
      the options dialog
Enh:  (97.7) The "Extended Properties" button in the connection dialog
      will now display a little checkmark if properties are defined for
      the currently selected profile
Enh:  (97.7) Errors during retrieval of the data can now be ignored. The
      application will use NULL for these columns instead. This can be
      enabled by setting the property:
      workbench.db.ignore.readerror=true
      in workbench.settings.
Enh:  (97.7) Columns can now be searched for from the table header popup
      If the column is found, the display is scrolled to display
      that column. The search is done on partial matches. The first
      column where the entered value is found somewhere in the column
      name is displayed.
Enh:  (97.7) When searching in table data, all found values can now be
      highlighted.
Enh:  (97.7) When saving a result set to a text file, the decimal character
      could not be defined (the default from the options panel was used)
Enh:  (97.6) The current line in the editor can how be highlighted
Enh:  (97.6) A background color to indicate null values in the
      result set can now be defined
Enh:  (97.6) a new parameter for WbCopy and WbImport has been added:
      -transactionControl. It defaults to true. If set to false
      no commit or rollback will be sent to the DBMS after the import
      has finished. If savepoints are enabled they are still used
      during the import (or copy) process
Enh:  (97.6) More detailed information about the DBMS and the driver
      is now available from the context menu of the connection information
      in the toolbar.
Enh:  (97.4) When exporting a table with BLOB columns the filename to
      be used for the BLOB files can now be defined through a column
      of the result set using -filenameColumn=col_name.
      This will only make sense when exporting a table with exactly
      one BLOB column.
Enh:  (97.4) WbImport and WbCopy now support the -preTableStatement and
      the -postTableStatement to define (a single) SQL statement to
      be execute before an import into a table starts and after inserting
      into that table is finished.
Enh:  (97.3) WbImport (an WbCopy) will now ignore the -deleteTarget or
      -truncateTarget option if the selected mode is not INSERT (to
      prevent accidental deletion of records if e.g. update mode
      is selected)
Enh:  (97.3) If no config directory is supplied and no settings file
      is found in either the current directory or the directory where
      the jar file is located, the settings are now written to the
      user's home directory (in the sub-directory .sqlworkbench).
      For a new installation this means that the configuration settings
      are no longer stored in the program's directory.
Enh:  (97.3) The HTML version of the manual is now displayed using
      an external browser rather than using the built-in HTML display.
Enh:  (97.2) Highlighting the control that has the focus in the DbExplorer
      can now be enabled by setting the property:
      workbench.gui.dbobjects.showfocus=true
      This is disabled by default.
      The default color for the focus border is yellow, the color can be
      configured using the property:
      workbench.gui.focusindicator.bordercolor
      with the RGB value (e.g. 128,128,128) for the desired color.
Enh:  (97.1) For Oracle, REF CURSORS as out parameters in Procedures are now
      supported through WbCall, e.g: WbCall ref_cursor_example(42, ?);
Enh:  (97.1) You can now assign a shortcut to the reload buttons in the
      DbExplorer. The shortcut will only work if the component does have
      the focus.
Fix:  (97.10) Null values for numeric columns could not be imported into an
      Access database.
Fix:  (97.10) After moving editor-tabs the menus were no longer working correctly.
Fix:  (97.10) Table definitions could not always retrieved when using Oracle
      (e.g. in the DbExplorer)
Fix:  (97.9) Indexes with complex expressions (e.g. CASE ...) where not
      displayed correctly in the generated SQL for a table
Fix:  (97.9) The label in the DbExplorer panels "REFERENCES" and
      "REFERENCED BY" were the wrong way round.
Fix:  (97.8) Character literals spanning multiple lines were not colored
      correctly (especially if the start was not visible)
Fix:  (97.8) Using WbVardef without a value did not delete the variable.
Fix:  (97.8) When using WbCopy with a column mapping and the -createTarget
      parameter the target table could not be created due to an error
      in the generated SQL.
Fix:  (97.7) When opening several new panels very quickly the application
      could lock.
Fix:  (97.7) The application could not be started in batch mode without
      supplying a connection (either through the commandline or using
      a profile).
Fix:  (97.6) When importing integer numbers using WbImport numbers with
      scientific notation could not be imported even if they were "real"
      integer values (e.g. 4.2E+1).
Fix:  (97.5) Referencing the input file for WbImport using relative files
      paths was broken.
Fix:  (97.5) When opening and closing multiple windows (File -> Open New Window)
      and using separate connections per tab, sometimes the wrong connections
      were closed.
Fix:  (97.4) The path for a Look & Feel library was not saved, when it
      was edited manually (instead of using the file-open dialog)
Fix:  (97.4) The new parameter -checkDependencies was not working correctly
      for large schemas with deeply nested foreign keys.
Fix:  (97.4) Sequence definitions were not retrieved correctly for HSQLDB
Fix:  (97.2) The "What's New" dialog was no longer displayed.
Fix:  (97.2) The update check did not always find a new version
Fix:  (97.1) When using an old JDBC driver that did not implement savepoints
      WbImport was not working even if the usage of savepoints was turned off
Fix:  (97.1) Scripts for MySQL using non-standard line comments (with #) were
      not executed correctly.
Fix:  (97.1) The toolbar button for "Append results" did not reflect the current
      setting of this option. Only the menu item in the SQL menu did.

Build 97, 21.10.2007
--------------------
Enh:  (96.9) A new option has been added to define additional characters
      that are recognized as word characters e.g. when jumping word by word
      (using ctrl-left, ctrl-right) or selecting words in the editor using
      a doubleclick (Available under Tools -> Options -> Editor options)
Enh:  (96.9) Added an option to reformat the view sourced when it's retrieved
      from the database. This is not enabled by default. To turn it on
      set the property:
			workbench.db.[dbid].source.view.doformat=true
      in workbench.settings.
Enh:  (96.8) The global option "Enable dbms_output" has been removed. If you
      want to enable support for the DBMS_OUTPUT package, please use a
      pre-connect script in the connection profile.
Enh:  (96.7) When creating a new physical connection for a tab using the new
      "Connect tab" feature, this connection can now be reset to the global
      connection. The tab's title is also displayed in a different color.
      The extra connection can now also be controlled through the popup
      menu for a tab
Enh:  (96.7) When deleting rows from a result, the rows can now be deleted
      including all dependent rows using "Delete With Dependencies"
Enh:  (96.6) The extended connection properties can now optionally be copied
      into the system properties when the connection is created. This can
      be used for JDBC drivers that only support System properties
      (such as H2)
Enh:  (96.6) When not using "Separate Connection per tab", a new physical
      connection for the current tab can now be created using
      "File -> New Connection"
Enh:  (96.6) The definition for JDBC drivers are now stored without a path
      separator in WbDrivers.xml in order to make the configuration file
      work on different platforms. To save the driver definitions in the new
      format, the "Manage Driver" dialog needs to be opened and closed once.
Enh:  (96.6) The definition for Look And Feels (Tools -> Options) is now
      stored with a platform independent path separator in workbench.settings
      to make it easier to share the .settings file between platforms.
Enh:  (96.6) When using "Check foreign keys" in the "Delete data" dialog, any
      dependent table that was not selected, can now optionally be added
      to the list.
Enh:  (96.5) WbCopy can now be used with multiple tables, e.g.
      -sourceTable=* to copy all tables, or -sourceTable=table1,table2.
      Specific column or table mappings are not possible in that mode.
      All tables with from the the source are copied to all tables
      with the same name in the target DB. If copying multiple tables, it the
      responsibility of the user to specify them in the correct order (so
      that no foreign key constraint is violated)
Enh:  (96.5) WbImport and WbCopy now support the -checkDependencies
      parameter. If set to true, SQL Workbench/J will analyze the
      foreign key dependencies of the tables and will import/copy them
      such that the parent tables are processed before and referencing
      child tables. The parameter is only checked if a multi-table mode
      is used in both commands ("WbCopy -sourceTable=*" or
      "WbImport -sourceDir=somedir".
Enh:  (96.5) When using "Delete data" from within the DbExplorer, the
      list of tables can now be sorted according to their FK constraints.
Enh:  (96.5) Empty column and table comments can now be included in the
      generated SQL source for a table. This can be configured in
      Tools -> Options -> SQL Generation
Enh:  (96.5) The toolbar can now be hidden (View -> Toolbar).
      Thanks to Petr for the patch.
Enh:  (96.4) Importing data into Oracle NCLOB columns is now possible.
Enh:  (96.3) WbSchemaReport and WbSchemaDif can now also include sequences. To
      include sequences, use the new parameter -includeSequences=true (the
      default is false)
Enh:  (96.3) WbCopy (DataPumper) and WbExport into a XML file did not work with
      Oracle when a NVARCHAR2 column was involved. This was due to the fact that
      the Oracle driver does not report the correct datatype for. A workaround
      has been added so that NVARCHAR2 (and NCHAR) columns are treated as
      java.sql.Types.VARCHAR instead of java.sql.Types.OTHER.
      This workaround is enabled by default and can be disabled by setting
      workbench.db.oracle.fixnvarchartype=false
      in workbench.settings
Enh:  (96.3) Support for stored procedures with OUT parameters has been added
      for drivers that support the necessary calls. It has been tested with
      Oracle (11g driver), MySQL (5.0), SQL Server 2005 (Microsoft Driver) and
      IBM DB9 9 (Linux).
      The procedure needs to be called with the new keyword WbCall:
      WbCall myproc(?)
      All out parameters of the procedure will be displayed.
      Wehn setting the property:
      workbench.db.[dbid].procs.use.wbcall=true
      SQL Workbench/J will also apply the new logic when executing the CALL
      statement. As this might potentially lead to compatibility problems it is
      disabled by default.
Enh:  (96.3) A background color for the connection info display can now be
      defined on a per profile basis (to e.g. identify "critical" connections)
Enh:  (96.1) Added support for SQLite
Enh:  (96.1) Code completion now recognizes an alias of the outer statement
      inside a sub-select.
Enh:  (96.1) WbImport can now also import files with fixed columns
      (no delimiter) using the -columnWidths parameter
Enh:  (96.1) The code-completion dropdown now allows multi-selection
Enh:  (96.1) WbExport can now also write a format file for SQL Server's
      bcp utility. The file is created by using the new switch
      -formatFile=sqlserver
      The switch can also be used to write an SQL*Loader file using
      '-formatFile=oracle'. Creating both files is possible using
      '-formatFile=oracle,sqlserver'
      The old parameter '-writeOracleLoader=true' is still supported
Enh:  (96.1) For DDL Statements a Savepoint can now be enabled so that
      DBMS which cannot continue the current transaction after a DDL error
      do not require a manual rollback (e.g. Postgres). This makes the
      option "Ignore DROP Errors" work for Postgres when not running in
      autocommit mode.
      This is controlled with the property
      workbench.db.[dbid].ddl.usesavepoint=true
      Running imports using the update/insert (or insert/update) mode
      will not work with Postgres as well. SQL Workbench/J can now use a
      savepoint to guard the first of the two statements so that the transaction
      can continue. This is controlled using
      workbench.db.[dbid].import.usesavepoint=true
Fix:  (96.9) The JDBC/ODBC bridge could no longer be loaded
Fix:  (96.9) Tab names with non-ISO characters were not stored correctly in
      the workspace.
Fix:  (96.8) WbSchemaDiff could not be run in batch mode.
Fix:  (96.8) When changing a value in the result set from null to something else
      the column was not included in the generated update statements.
Fix:  (96.7) It was not possible to edit a value in the result set that was null
      (e.g. setting a non-null value)
Fix:  (96.7) When not specifying a database with the connection URL for MySQL and
      not using separate connections per tab, displaying data in the DbExplorer
      did not work (nor did the display of Enums)
Fix:  (96.7) Displaying the table's rowcount in the DbExplorer did not work with
      old MS SQL drivers when autocommit was turned off
Fix:  (96.5) Single quotes in comments were not escaped correctly in generated
      table source
Fix:  (96.4) When using workbench.db.oracle.fixcharsemantics=true, NVARCHAR2
      columns were also displayed with Byte/Char semantics.
Fix:  (96.4) Retrieving sequences was broken for DB2
Fix:  (96.3) Oracle packages were not correctly written into the output file of
      WbSchemaReport or WbSchemaDiff
Fix:  (96.3) The display of the source of stored procedures was broken for
      SQL Server
Fix:  (96.3) When reloading the list of indexes in the DbExplorer, all subsequent
      retrieval operations were blocked.
Fix:  (96.3) Removed the automatic detection of available translations (because
      it slowed down startup too much). If a new  translation is added, this now
      needs to be defined in workbench.properties
Fix:  (96.2) The column label for the key column selection in the DataPumper was
      not readable with certain look & feels
Fix:  (96.2) When running WbImport -header=false on an empty file, SQL Workbench/J
      reported an error because it could not read the header line.
Fix:  (96.1) WbCopy when used with -createTable did no re-create NOT NULL
      constraints on the columns.
Fix:  (96.1) Added some missing german localizations. The Version number
      was not displayed correctly as well, when German was selected as the
      UI language.
Fix:  (96.1) Search did not work in the editor if no text was selected.
Fix:  (96.1) The parameter -trimValues for WbImport was not documented
Fix:  (96.1) Fixed some problems when printing tables that spread horizontally
      over more than one page.
Fix:  (96.1) Fixed a race condition upon startup when the automatic update
      check was enabled.
Fix:  (96.1) Fixed a race condition when closing the application which sometimes
      caused the application process to remain in memory.
Fix:  (96.1) The {$clobfile} syntax could not be used with Apache Derby and
      source files with a multi-byte encoding (such as UTF-8)

Build 96, 05.08.2007
--------------------
Enh:  (95.5) A German localization for the GUI is now available. The GUI
      language can be switched from within the Options Panel (General Options).
Enh:  (95.5) A new option "Trim CHAR data" has been added to the connection.
      profile. If this is enabled, values retrieved from columns with
      the CHAR datatype are trimmed (as the CHAR data is padded on
      most DBMS)
Enh:  (95.4) A "keep alive" statement can now be defined in the
      "Connect Scripts" dialog, that will send a statement at defined
      intervals to the server to prevent the connection from beeing
      closed.
Enh:  (95.2) A new option to sort pasted columns (for auto-completion)
       according to their position in the database has been added
      (Tools -> Options -> Editor)
Enh:  (95.1) When importing files using mode=insert static values can now
      be specified for specific columns that are not part of the input file
      (using the switch -constantValues)
Enh:  (95.1) The filenames generated for blob files are not converted
      to lowercase anymore. This means when using -lobIdCols to create the
      blob filenames from the column data, the original case will be preserved.
Fix:  (95.5) Improved the error handling when displaying table data in the
      DbExplorer
Fix:  (95.5) No tables where shown when invoking code completion for an
      INSERT INTO statement was broken.
Fix:  (95.5) "Create DDL Script" in the DbExplorer was not working for
      sequences.
Fix:  (95.4) The selected case for table name when generating statements (from
      withing the options dialog) is now ignored if the driver reports that
      the server is case sensitive for object names.
Fix:  (95.4) SQL Workbench/J would send a SHUTDOWN command to a Derby server
      when disconnection. This no only done for the embedded driver.
Fix:  (95.4) Copying data as INSERT or UPDATE to the clipboard from
      a SELECT that contained more than row failed (and did not ask
      for the update table)
Fix:  (95.4) -lineFilter did exclude the specified columns instead of
      including only the matching rows.
Fix:  (95.4) Mixing function calls and constants with the -constantValues
      switch for WbImport did not work
Fix:  (95.4) It was not possible to specify a blank as the delimiter when
      importing text files. This can now be done using -delimiter="' '"
Fix:  (95.4) WbImport would fail with a NullPointerException if a column was
      listed twice in the -fileColumns argument.
Fix:  (95.4) When importing text files with -quoteCharEscaping enabled,
      WbImport would fail if a column had a null value
Fix:  (95.3) WbExport with a SELECT as the source was broken
Fix:  (95.3) The source for tables that contained $ characters (or other
      characters that are used for regular expressions) could not be displayed.
Fix:  (95.2) WbVardef trimmed spaces inside quoted values.
Fix:  (95.2) When reformatting SELECT statements with a CASE that defines a
      column alias (CASE .. END AS someCol) no whitespace was put before
      the AS during reformatting.
Fix:  (95.1) It was no longer possible to run SQL Workbench in batch mode
      without a profile (for e.g. a single WbCopy command where the
      profiles are specified as part of the WbCopy parameters)

Build 95, 09.06.2007
--------------------
Enh:  (94.8) A special date and timestampformat "millis" can now be specified
      for WbImport (e.g. -timestampFormat=millis). This will treat the value
      as a numeric value representing the milliseconds since 1970-01-01 00:00:00
      (and thus can be used to create a java.util.Date() object directly)
Enh:  (94.8) When using -lobIdCols with WbExport the name of the export
      file is no longer part of the generated LOB filename if -compress=true
      is used.
Enh:  (94.6) Ctrl-Shift-C (Comment Selection) now acts as a toggle. If this
      is invoked on a text that is not commented, the line comment character
      will be added. If the complete selection is already commented, then
      the comments will be removed.
      Ctrl-Shift-U (Uncomment Selection) works as before
Enh:  (94.6) You can now select the elements that should be shown in the
      main window's title bar. The name of profile group and the current
      workspace can be enabled/disabled. The display of the current editor's
      filename has been moved from the "Editor" page in the options dialog
      to the new "Window Title" page.
Enh:  (94.6) WbImport tries to figure the import type according to the file
      extension of the import file. Text import is assumed for the extensions
      txt or csv whereas XML import is assumed for the extension xml
      When importing compressed exports, the type parameter is still
      necesary.
Enh:  (94.5) The handling of date/datetime keywords when entering data
      has been modified. You can now specify keywords for the three different
      JDBC datatypes (date, timestamp, time) and the value that is created
      depends on the type of the keyword (keywords for date will not
      include the time portion, keywords for time will not incude a
      date part). The detection is independent of the type of the column
      (i.e. you can enter current_timestamp in a date column to get the
      time part as well for e.g. Oracle DATE columns). The differen keywords
      can be defined in workbench.settings. The default entries are:
      workbench.db.keyword.current_date=current_date,today
      workbench.db.keyword.current_time=current_time,now
      workbench.db.keyword.current_timestamp=current_timestamp,sysdate,systimestamp
      So when you enter current_date in a date (or timestamp) column the
      current date without the time (i.e. the time will be 00:00) part will be
      sent to the DBMS. When you enter e.g. sysdate in a date column the value
      sent to the DBMS will include the time part.
Enh:  (94.5) The literals that are accepted as true/false for converting
      boolean values can now be defined using two new parameters for the
      WbImport command: -literalsFalse -literalsTrue this also affects
      the parsing of values for the -booleanToNumber=true mode. The default
      literals for the number conversion has been limited to true/false.
      Literals that are not "known" (either through the default or by
      specifying them using the -literalsXXX switch) are now always rejected
      (before they were silently converted to false)
Enh:  (94.4) The automatic conversion of the values true/false to numeric
      values 1/0 can now be disabled for WbImport using the parameter
      -booleanToNumber=false (the default is true)
Enh:  (94.4) The default shortcut for auto-completion has been changed
      to Ctrl-Space
Enh:  (94.4) WbImport and WbExport can now control how quote characters
      that are contained in the data are treated. The new argument
      -quoteCharEscaping defines the expected input format or the format
      to be written. Possible values are none,duplicate or escape.
Enh:  (94.3) Using mode=insert,update is no possible with PostgreSQL. Due
      to PG's error handling this required a savepoint around the INSERT
      statement that could be rolled back. Doing the INSERT in a
      sub-transaction with savepoints can be enabled for other DBMS using
      workbench.db.[dbid].import.usesavepoint=true
Enh:  (94.2) The application can now automatically check for updates
Enh:  (94.2) The log level can now be changed from within the options dialog
      (no need to restart SQL Workbench)
Enh:  (94.2) When entering values in date (timestamp) columns the keywords
      now, sysdate, current_date and current_timestamp are replaced with
      the current date/time. Note that this will be the local timezone
      of the machine where SQL Workbench is running, not the time of the
      DBMS Server
Enh:  (94.2) Under MacOS the Apple+Q shortcut is now working to exit the
      application (as well as the about and preferences keys)
Enh:  (94.2) Re-designed the options dialog
Enh:  (94.2) When using "Put SELECT into" from within the DbExplorer the
      statement can now be appended to the selected editor by holding
      down the CTRL-Key while selecting the menu item.
Enh:  (94.2) If no encoding is supplied WbExport now uses UTF-8 as the encoding for
      XML exports and the system default encoding for text exports. It also
      reports the default encoding in the help when no parameter is supplied.
      The default encoding for text exports can be changed using the property
      workbench.file.data.encoding
Fix:  (94.8) When entering values in the result set that could not be
      converted to the correct data type, no error message was shown.
Fix:  (94.7) Auto-completion for tables from other schemas was broken
Fix:  (94.7) The update count for DELETE and UPDATE statements was not
      shown properly.
Fix:  (94.7) -decode now correctly decodes a \\ to a (single) \
Fix:  (94.7) "Ignore Drop Errors" was not working any longer (that included
      the commandline switch for running in batch mode)
Fix:  (94.7) The automatic update check did not always work.
Fix:  (94.7) The -sourceTable switch from WbExport did not preserve quotes
      so that exports with case-sensitive table names could only be done
      using a SELECT after the WbExport.
Fix:  (94.6) Not all error messages (e.g. missing parameters for WbExport)
      were reported in the log file during batch execution.
Fix:  (94.6) When opening a file in a SQL tab that contained a modified
      file, No and Cancel would both do the same when beeing asked to
      save or discard the changes.
Fix:  (94.6) Numeric values that were returned as BigDecimal by the
      JDBC Driver were not displayed according to the chosen max. number of
      digits (in the options dialog)
Fix:  (94.6) The integration with Mac OS is now working properly.
Fix:  (94.6) Fixed the processing of "batches" sent to SQL Server. If a
      multi-statement SQL is sent to SQL Server that also returned result
      sets, the result was not always shown.
Fix:  (94.6) WbImport with -decode=true was not always working properly
Fix:  (94.5) No error messages was shown on the console if the specified
      driver class could not be loaded when running SQL Workbench/J in
      batch mode.
Fix:  (94.5) Improved the performance when importing compressed input files
      with a large number of associated LOB files (in an extra archive).
Fix:  (94.5) When importing a text file without a header definition and the
      target table did not exist no proper error message was shown.
Fix:  (94.5) When using -truncateTable=true or -deleteTarget=true for WbImport
      an error during truncate/delete would not be reported.
Fix:  (94.5) Some keystrokes (e.g. Alt-F4) started editing mode in the
      result table that should not start editing.
Fix:  (94.4) When only importing part of an import file (using -startRow
      and -endRow) the import would fail if data in the ignored rows
      failed validation.
Fix:  (94.4) Conversion errors where not reported correctly when importing
      XML files with WbImport
Fix:  (94.4) SQL Workbench does not try to set a default font for GUI elements
      any more. A previously selected standard font can be reset through
      the options panel.
Fix:  (94.3) DbExplorer now shows the source for indexes on views
      (e.g. MATERIALIZED VIEWS) as well. The index definitions are also
      included by WbReport and WbSchemaDiff
Fix:  (94.4) If the text in the editor ended with a @ command executing
      the SQL command at the cursor position did not work
Fix:  (94.3) The type of an index was not displayed correctly with MySQL
Fix:  (94.3) Not all comparators were selectable in the filter dialog
Fix:  (94.3) When using the "Drop.." dialog from the DbExplorer SQL Workbench/J
      was offering the CASCADE option for MySQL even though it is not supported
      by MySQL.
Fix:  (94.3) The tooltip for columns with NULL value displayed the value
      of the previous column
Fix:  (94.3) The history for the quickfilter in the DbExplorer's Object list
      was not saved when the DbExplorer was opened as a separate window.
Fix:  (94.2) When switching tabs while the completion popup was open and then
      returning to the original tab, keystrokes would not be inserted into the
      editor.
Fix:  (94.2) Workaround for a bug in older Postgres drivers where
      getMoreResults() would throw a NPE if the statement did not
      produce a result set.
Fix:  (94.2) WbImport with XML files did not work with columns that contained
      special characters
Fix:  (94.2) SQL Workbench would not load with the Substance look and feel.
Fix:  (94.2) The search dialog did not automatically use the currently
      selected text.
Fix:  (94.2) The property workbench.db.oracle.syntax.functions was growing
      with each start of the application.
Fix:  (94.1) The quick filter for the new trigger list was not working

Build 94, 31.03.2007
--------------------
Enh:  (93.9) When doing single-table imports with WbImport VARCHAR or CHAR
      columns that exceed a certain limit in the input file can now be
      truncated using the -maxLength parameter. The format is
      -maxLength='column1=size1,column2=size2'
Enh:  (93.9) The DbExplorer now has an additional tab that lists all triggers
      of the selected catalog/schema. The new panel can be disabled in
      the Options dialog (DbExplorer tab)
Enh:  (93.7) WbImport can now write a file with records that could not
      be imported if run with continueOnError=true. The file is specified with
      -badFile=filename. If the filenanme indicates a directory, the actual
      file will be constructed by using the directory and the target table's
      name (needed for multi-table exports).
Enh:  (93.5) If a result set does not include all pk columns from the update
      table, a warning is show when trying to save changes for the result.
Enh:  (93.5) Individual result tabs (when using "Append new results") can
      now be closed (Data- > Close result)
Enh:  (93.5) The tooltip for the connection info now displays the driver
      version as well.
Enh:  (93.4) Data can now be changed in the result set by using
      search & replace (Data -> Replace In Data)
Enh:  (93.3) The DbExplorer now displays the source for the underlying
      table as well, when displaying the source for a synonym
Enh:  (93.3) WbExport now can optionally create ANSI or JDBC style date
      and timestamp literals when exporting to SQL statements. This is
      selected with the new switch -sqlDateLiterals
      The default literal type for copying SQL statements to the clipboard
      can be defined in the options dialog.
      Additional literal types can be defined through workbench.settings
      by supplying the approriate SimpleDateFormat patterns
Enh:  (93.2) When finding primary key columns to update the result set
      synonyms are now resolved as well.
Enh:  (93.1) A new command to prompt for a confirmation has been added.
      WbConfirm will display the provided message and will allow to stop
      the current execution or continue. This will only be evaluated
      in GUI mode (e.g. to prevent the accidental execution of "dangerous"
      scripts)
Fix:  (93.9) When statements were executed in nested WbIncludes not all
      error messages were reported to the console or the GUI (they did
      show up in the log file only).
Fix:  (93.9) The filemode for the Java launcher in the Mac package was not
      set correctly so that the application could not be executed without
      changes. To support the correct file attributes the Mac Bundle is
      now distributed as a tgz (tar/gzip) archive which presevers the
      file attributes.
Fix:  (93.8) Using a SYNONYM as the source for WbCopy did not work.
Fix:  (93.8) column constraints like (COL_1 IS NOT NULL OR COL_2 IS NOT NULL)
      were not displayed in the DbExplorer for Oracle
Fix:  (93.8) For synonyms pointing to views the wrong source was created
Fix:  (93.8) If WbImport was used with -decode=true and a line contained
      an invalid escape sequence (e.g. a single backslash) the import
      would terminate with the wrong error message.
Fix:  (93.8) If a SELECT statement only contained an ORDER BY clause
      but no WHERE clause, auto completion did not show the columns
      for the table
Fix:  (93.7) When using search & replace in the result, the wrong column
      was highlighted after the first item was replaced.
Fix:  (93.6) The "internal" handling for the line ending was changed (back)
      to always use the Unix format. SQL Statements can still be sent to the
      DBMS with DOS line endings, but the statements will now be converted
      before they are sent (rather than storing them with DOS line ending
      right away), which might have a performance impact when running large
      scripts.
Fix:  (93.6) Sometimes the application would ask to save changed profiles
      even if the profiles weren't changed.
Fix:  (93.6) Made quoting of schema names with digits work without changing
      the settings (objects with a digit at the first place are now
      automatically quotes)
Fix:  (93.5) Quoting only the schema name for WbImport did not work (e.g.
      -table='"123".table'
Fix:  (93.5) If the semicolon for the last statement in the editor was
      placed on a single line, and the cursor was located left of the
      semicolon in the same line, Ctrl-Enter would not work.
Fix:  (93.5) For Oracle, columns with 'TIMESTAMP WITH [LOCAL] TIMEZONE'
      data type are not retrieved using getTimestamp() instead of getObject()
      to be able to properly display the data for those columns.
Fix:  (93.5) To be able to use columns with the data type
      TIMESTAMP WITH LOCAL TIMEZONE, the current timezone needs to be set
      for the session. The ALTER SESSION SET TIME_ZONE is now captured
      and translated into the approriate Java call on the Oracle driver as
      described in
      http://download-uk.oracle.com/docs/cd/B19306_01/java.102/b14355/oraint.htm#sthref175
Fix:  (93.4) Quoted table names could not be passed to the WbImport command
      (e.g. -table='"MYTABLE"') which is necessary for case-sensitive servers
Fix:  (93.4) Warnings that are reported by the JDBC driver after switching
      the current database are now ignored and do not set the "warning"
      state for the executed command.
Fix:  (93.4) When running a script in batch mode that ended with a comment
      the process was terminated with an error status.
Fix:  (93.3) WbImport did not always close the input files correctly.
Fix:  (93.3) When exporting data to SQL scripts, timestamp columns were
      not formatted correctly
Fix:  (93.2) Code completion was not working for (Oracle) synonyms
Fix:  (93.1) The DbExplorer failed to retrieve the table definition and table
      data for MS SQL Server if the server was defined with a case sensitive
      collation.
Fix:  (93.1) The table reference navigation was not always reset in the
      DbExplorer data tab and displayed the referenced tables from a previous
      table

Build 93, 11.02.2007
--------------------
Enh:  (92.6) When displaying a BLOB content as text, the content can now
      be modified. The character set conversion will be done using the
      selected encoding from the info dialog (both directions)
Enh:  (92.4) WbReport and WbSchemaDiff can now optionally include the
      table grants (new parameter -includeTableGrants)
Enh:  (92.4) The parameter -includeProcs for WbSchemaDiff has been renamed to
      -includeProcedures to be consistent with WbReport
Enh:  (92.4) The deferrable attribute of a FK reference is now shown
      in the DbExplorer and the generated SQL source.
Enh:  (92.2) Workbench specific commands are now supported by the auto
      completion
Enh:  (92.2) The filter in the table list of the DbExplorer now accepts
      regular expressions. Thanks to Petr for the patch
Enh:  (92.1) The (plain) editor used to edit column data from within
      the result display now supports Search & Replace.
Enh:  (92.1) A new setting to close the application if the first connect
      is cancelled is available
      workbench.gui.cancel.firstconnect.exit
      If this is set to true, the application is closed if the connection
      dialog that is displayed during startup is cancelled
Enh:  (92.1) For Synonyms, the DbExplorer now displays the foreign keys,
      indexes and triggers of the underlying table.
Fix:  (92.7) Copying BLOB columns was broken for WbCopy and DataPumper
Fix:  (92.6) The option "Single line" for the default alternate delimiter
      (Tool -> Options -> Editor) was not saved.
Fix:  (92.6) The window position was not restored properly if the window
      was moved to the uper left corner.
Fix:  (92.5) When importing a text file that references blob files,
      absolute filenames for the blob files did not work.
Fix:  (92.4) WbSchemaDiff did not include the necessary entries to drop
      views from the target database if includeViews was set to true
Fix:  (92.4) The generated report for WbSchemaDiff did not contain tables
      that only differed in the index definition.
Fix:  (92.4) Code completion for the WHERE part of a DELETE statement was not
      working.
Fix:  (92.4) A SQL panel could be moved between two DbExplorer panels but
      when reloading this workspace the SQL panel would be dropped.
Fix:  (92.3) When running WbExport using -clobAsFile=true and
       -writeOracleLoader=true the generated SQL*Loader file did not contain
      the necessary syntax to load the CLOB data from the generated external
      files.
Fix:  (92.3) External tools where a parameter was needed for the executable
      (e.g. someapp.exe /h) could not be used from within the blob
      display window.
Fix:  (92.3) Triggers and foreign keys were not correctly displayed
      for SQL Server with the jTDS driver.
Fix:  (92.3) When an invalid format for -timestampFormat or -dateFormat
      was specified for WbExport, no warning was displayed.
Fix:  (92.3) The manual listed incorrectly the parameter -dateTimeFormat instead
      of -timestampFormat
Fix:  (92.3) The -emptyStringIsNull switch for WbImport was broken.
Fix:  (92.3) The -append switch for WbExport was broken.
Fix:  (92.2) WbExport -sourcetable=something did not work if "something"
      was not a table (e.g. a Synonym)
Fix:  (92.2) When the current schema was changed in Oracle using ALTER SESSION
      the DbExplorer (when using the same connection) failed to retrieve
      table data for the old schema.
Fix:  (92.2) Reference navigation was broken outside the DbExplorer
Fix:  (92.1) Errors when committing changes in the DbExplorer were not shown
      to the user.
Fix:  (92.1) The DataPumper did not use the selected encoding when importing
      a text or XML file.
Fix:  (92.1) Escaping of the delimiter has been changed for the WbExport
      or the "Save Data as" commands. The following rules are now applied:
      if no character escaping is selected (-escapeText parameter) then
      neither the quote character nor the delimiter are ever escaped.
      If escaping is enabled, then the quote character will be escaped
      inside a quoted value and the delimiter will be escaped inside
      a non-quoted value regardless of the chosen escape range.

Build 92, 06.01.2007
--------------------
Enh:  (91.5) When searching for referencing/referenced tables, synonyms are
      now detected.
Enh:  (91.5) Referenced/referencing rows can now be displayed into a new
      SQL panel from within a SQL panel by holding down the Ctrl-Key when
      selecting the menu item of the popup menu.
Enh:  (91.4) From within a result display, related records based on
      foreign key constrains can now be retrieved for the selected rows
Enh:  (91.4) When displaying (SQL)Exceptions the whole exception chain is now
      displayed (if available)
Enh:  (91.3) New results can now be added to the already displayed result
      (New Menu item SQL -> Append new results)
Enh:  (91.2) Large text fields are now displayed in multi-line mode (to be
      able to see all lines "Allow Row Height Resizing" must be enabled. For
      performace reasons this mode is only enabled for character columns that
      can hold more than 500 characters. This threshold can be configured using
      the property:
      workbench.gui.display.multilinethreshold
Enh:  (91.1) The alternate delimiter can now be defined for each profile. If
      one is defined in the profile, this will overwrite the globally defined
      alternate delimiter. Additionally an alternate delimiter can now be
      defined as "single line", which means that it has to occur as the only
      text on a line in order to be recognized.
Enh:  (91.1) Delimiter and alternate Delimiter can now be specified in batch
      mode as well. The parameter -altDelimiter will only have an effect if a
      profile-less connection is used (basically defining the alternate
      delimiter for the temporary profile)
      The argument -delimiter overrides the default delimiter and will turn
      off the usage of an alternate delimiter. This can be used if the scripts
      are not processed in memory but still use a non-standard delimiter
      (Similar to the -delimiter argument of the WbInclude command). To define
      a single line delimiter append the ;nl to the delimiter definition. E.g.
      -delimter=/;nl will define the forward slash as the delimiter but
      only if it's the only character in a line. -delimiter=GO;nl will define
      a MS SQL Server compatible delimiter.
      The additional automatic detection of the GO delimiter has been removed.
      If you use GO as the delimiter, please change your profiles to use
      that as the delimiter.
Fix:  (91.6) When saving changes from within the result set, errors during
      COMMIT were not reported to the user (e.g. with deferred constraints)
Fix:  (91.6) The source of a table was not displayed in the DbExplorer if
      a comment contained characters that are valid regular expressions.
Fix:  (91.6) Some minor workarounds to make SQL Workbench/J work with tinySQL
Fix:  (91.5) When using a table alias with the AS keyword, code completion
      did not work properly
Fix:  (91.4) The DbExplorer was not displayed when running on Debian Linux
      (Possibly with other Look & Feels as well)
Fix:  (91.4) The shortcuts for "Move tab left" and "Move tab right" could
      not be configured
Fix:  (91.4) Large integer numbers where not displayed correctly
Fix:  (91.3) "Create DDL Script" in the DbExplorer did not create the
      DDL for materialized views in Oracle
Fix:  (91.3) Code completion was not working properly if the cursor was at
      the end of the editor script
Fix:  (91.2) Fixed some problems with external files when switching line
      endings
Enh:  (91.1) When running with feedback disabled (wbfeedback off) a message
      will now be printed if a statement finished with a warning
Fix:  (91.1) WbImport reported the wrong line number, when an error occurred
      during converting values from a text file.
Fix:  (91.1) Text values with embedded newlines were not displayed correctly
      in the edit window.
Fix:  (91.1) When importing an XML file that contains a column that does
      exist in the target table, no error was reported (but the import
      failed nevertheless)
Fix:  (91.1) When running DML Statements (INSERT, DELETE, ...) with the
      Informix JDBC driver, it would throw an exception when retrieving
      the update count.

Build 91, 27.11.2006
--------------------
Enh:  (90.8) Added support for H2 Database Engine
Enh:  (90.7) The type of an index (e.g. BITMAP, HASH) is now shown in the 
      DbExplorer.
Enh:  (90.4) When running SQL Workbench in batch mode, you can now omit the 
      -profile parameter. This obviously only makes sense if you run
      only WbCopy commands that specify source and target connections.
Enh:  (90.4) WbExport now can ignore missing tables (when using 
      -sourcetable=table1,table2,table3 if -continueOnError=true
Enh:  (90.2) The data in the result set can now quickly be filtered by the
      value(s) of the currently selected column(s)
Enh:  (90.2) The data can now be sorted by more then one column. To define
      additional sort columns, hold down the Ctrl key while clicking on the
      column header. To remove a secondary column hold down the Shift key
      and click on the column header.
Enh:  (90.2) WbSchemaDiff can now optionally include stored procedure
Enh:  (90.2) A new setting to control the max. text size to be put into
      the SQL history is now available:
      workbench.sql.history.maxtextlength
      The default is set to 10MB
Enh:  (90.2) A new option has been added to exclude external files from 
      beeing stored in the SQL history (Tools -> Options -> Editor)
Enh:  (90.1) WbExport can now also write CLOB contents into external files
      for XML and Text export. Text exports need to be imported using WbImport 
      with the new parameter -clobIsFilename. In the XML format the external
      file is automatically recognized.
Fix:  (90.8) Filters were not working with Date columns
Fix:  (90.8) The hash sign (#) can now also be used as an alternate delimiter
      if the current connection is not a MySQL connection
Fix:  (90.8) When WbVarDef was used with a SQL query and the query resulted
      in an error, the error was not displayed.
Fix:  (90.7) Shortcuts without a modifier (e.g. F1) could not be customized
Fix:  (90.7) More fixes to the error handling during batch processing
Fix:  (90.7) WbImport did not give a proper error message when a non-existing
      column was defined using the -importColumns parameter
Fix:  (90.6) Primary key columns were not detected correctly when the 
      column name was a (SQL92) reserved word which led to incorred
      WHERE conditions for updating the result set.
Fix:  (90.5) When creating triggers for Oracle, error messages were not 
      displayed automatically
Fix:  (90.5) Fixed some problems in the DataPumper and code-completion 
      when using table or column names that need quoting (e.g. with spaces)
Fix:  (90.4) The DataPumper now allows the setting of the batch size instead
      of simply enabling it
Fix:  (90.4) When nesting multiple WbInclude commands, the value for the 
      -continueOnError parameter was not correctly evaluated for all 
      nesting levels
Fix:  (90.4) The default value for -continueOnError for the WbInclude 
      command is now false, as stated in the documentation
Fix:  (90.4) Oracle style includes (@test.sql) were not working with 
      comments inside scripts.
Fix:  (90.3) Closing the autocompletion popup when the quicksearch is
      cancelled did not work (Property in Tools -> Optioins -> Editor)
Fix:  (90.2) Tables with mixed-case names were not handled correctly in 
      the DbExplorer
Fix:  (90.2) Auto-completion for table alias was not working correctly
      if there was no space before the alias (e.g. a.col=b.col instead
      of (a.col = b.col)
Fix:  (90.2) The indicator marking a running statement in the main window
      was cleared when switching between two panels where one was running a 
      statement and the other panel was not.
Fix:  (90.1) The table list in the DropDown of the DataPumper was sorted
      by table type rather than table name
Fix:  (90.1) When creating the target table using WbCopy or DataPumper, 
      the original column order is now maintained
Fix:  (90.1) Improved and fixed up the error handling and reporting during batch 
      execution
Fix:  (90.1) When editing a new row in the result set and opening the edit
      window, the current value of the column was not displayed
Fix:  (90.1) Fixed some repainting problems in the editor
Fix:  (90.3) Copy as SQL was broken if edit mode was not started

Build 90, 11.10.2006
--------------------
Enh:  (89.4) The connection profile has been enhanced to include 
      SQL Statements that can be executed after a connection has been 
      established and before a connection is about to be closed.
Enh:  (89.3) The case (upper, lower, as is) for table names in generated
      SQL statements can now be set independently from the paste case
      in the editor. The new setting is available at 
      Tools->Options->SQL formatting. It defaults to the "Paste case" value for
      the editor
Enh:  (89.3) Data can now be imported from the Clipboard into the current
      result set.
Enh:  (89.2) Exporting data as SQL statements now writes the 
      SQL Workbench/J syntax for blob files and extracts the blobs as well
      (like XML and Text export)
Enh:  (89.1) You can now import only parts of a file by defining the 
      startrow and the endrow from the input file using the parameters
      -startrow and -endrow for WbImport
Enh:  (89.1) A new parameter to control commit during batch import has been 
      added: -commitBatch which is only evaluated when -batchSize is set 
      to a value greater than one. 
      If this is set to true, then after sending a batch to the server
      commit() is called. This is slightly different to using -commitEvery
      with the value of the batchSize parameter. The latter one will add
      a COMMIT statement to the batch queue, rather than calling the 
      JDBC commit() method, because some drivers do not allow a COMMIT 
      statement inside the batch queue.
Enh:  (89.1) The last saved Filter definition files are now available
      as a dropdown next to the filter icon in the toolbar. The maximum
      number of entries that are displayed in the list can be set with 
      the property workbench.gui.filter.mru.maxsize in workbench.settings
      The default is 15
Enh:  (89.1) Removed the "Disable automatic update table check" from the 
      connection profile. The PK information for the update table is now
      retrieved when needed.
Enh:  (89.1) Connection Profiles can no be moved/copied between profile groups
      using drag and drop 
Enh:  (89.1) You can now specify an alternate method of creating filenames for
      exported BLOB data, using the -blobidcols switch. The filename for the 
      blob data will then be created by using the base name of the export file,
      the column name of the BLOB column and the value(s) of the supplied
      id column(s)
Enh:  (89.1) The current cursor location of the SQL editor is now displayed
      in the status bar
Enh:  (89.1) For Oracle VARCHAR2 columns with byte or char semantics are 
      now displayed with the approriate modifier in the DbExplorer
Enh:  (89.1) The location of the tabs inside the DbExplorer can now be 
      customized with the property:
      workbench.gui.dbobjects.tabletabs=
      Valid values are: bottom, left, right, top
Enh:  (89.1) For WbImport and WbCopy the -usebatch=true parameter is no 
      longer necessary. When passing -batchsize with a value greater 
      than 1 (one) batchmode is automatically enabled.
Enh:  (89.1) New SQL tabs can now be inserted after the current tab
Fix:  (89.1) Fixed some missing labels.
Fix:  (89.1) When selecting procedures/functions inside an Oracle package
      the editor would no longer jump to the selected procedure.
Fix:  (89.1) Fixed incorrect display of triggers for Apache Derby
Fix:  (89.1) WbCopy did not report an error if any of the profiles
      or tables were not found (only a NullPointerException)
Fix:  (89.1) When switching the font in the editor, the display
      was not always correct until the application was restarted.
Fix:  (89.1) Results where not displayed correctly if a large
      font was selected for the data display
Fix:  (89.1) If no workbench.settings was present in the application 
      directory and the directory contained spaces, the application 
      would not save its settings or profiles.
Fix:  (89.1) "Generate DDL Script" in the DbExplorer was not working
      for non-table objects.
Fix:  (89.2) Fixed some bugs due to the new checking of the update table
Fix:  (89.3) Profiles could not be moved using drag & drop into an empty group
Fix:: (89.3) Quoted table names were not kept during update statement generation
      for the result set

Build 89, 08.09.2006
--------------------
Enh:  (88.23) WbImport will silently convert true/false literals 
      for integer columns into the values 1/0.
Enh:  (88.23) When generating statements internally, the auto completion paste
      case setting is also applied to table and column names
Enh:  (88.21) The encoding of the scripts in batch mode can now be specified
      on the commandline using the -encoding switch.
Enh:  (88.20) The PDF manual can now be displayed from inside 
      the application. for this to work, the path to the PDF
      reader executable has to be defined in Tools -> Options
      and SQLWorkbench-Manual.pdf needs to be available in the
      directory where workbench.jar is located.
Enh:  (88.20) Tables can now be filter out using a regular expression 
      in the DbExplorer. The default setting will remove tables from 
      Oracle 10g's recylce bin. This is controlled by the property
      workbench.db.[dbid].exclude.tables=<regex>
Enh:  (88.20) Improved the performance of the editor on large
      files (for loading and for scrolling)
Enh:  (88.19) Column widths can now be optimized automatically after 
      data is retrieved. A new option is available in 
      Tools->Options->Data editing. The column header can also be 
      included in that calculation by default.
Enh:  (88.19) When starting without a profile, the parameter 
      -rollbackOnDisconnect (with the value true/false) is now supported.
      If this is set to true, then SQL Workbench will send a rollback
      to the DBMS before closing the connection. This is already 
      available in the (GUI) connection profile.
Enh:  (88.18) When creating a DDL script from within the DbExplorer, 
      foreign key constraints are now put at the end of the script. 
Enh:  (88.17) Profile groups can now be deleted directly using the context
      menu, even if they still contain profiles.
Enh:  (88.16) Statements can be cleaned from newlines before sending 
      them to the server by using the property
      workbench.db.[dbid].removenewlines=true
      Where [dbid] should be replaced with the DBID shown in the log file
Enh:  (88.16) Every SQL Statement sent from within the editor, can now 
      be logged by setting the property:
      workbench.sql.execution.log=true
      The statements will be logged with INFO level.
Enh:  (88.16) The character sequence for a new line that is used by the 
      editor internally and for saving files can now be configured in the 
      Options dialog
Enh:  (88.16) Added support for DB2 Triggers, Alias, Stored Procedures
      Sequences and materialized query tables in the DbExplorer
Enh:  (88.15) Individual cells can now be selected in a result set by
      holding down the Alt-Key while selecting rows/columns. When using 
      "Copy selected" on such a selection, only the selected columns
      will be copied. Note that this will produce incorrect results 
      when copying SQL statements and no primary key column is part of 
      the selection.
      The modifier for rectangular selections in the editor has been 
      switched to the Alt key as well, to be consistent. 
Enh:  (88.15) When specifying a connection profile through parameters 
      (Commandline, WbCopy, WbSchemaDiff) the profile group can now 
      also be specified. Please refer to the manual for details on the new 
      parameters
Enh:  (88.14) The statement history can now be deleted by using 
      SQL -> Clear history
Enh:  (88.12) WbImport with -type=text can now handle records spanning 
      multiple lines (which need to be enclosed with the quote character)
      This support can be enabled with the parameter -multiline=true
Enh:  (88.11) A new option to use alternating colors for table rows 
      is available in the Options dialog
Enh:  (88.10) The WbImport command can now handle the compressed archives
      created with WbImport -compress=true
Enh:  (88.10) Specifying a full connection using the -url -driver, ... 
      parameters is now also possible when not running in batch mode, 
      so a connection can be established without an existing profile for GUI 
      mode. A new commandline parameter -workspace is also available to 
      a workspace file to be used. (The file name can contain the 
      %ConfigDir% placeholder)
Enh:  (88.7) Stored procedures for Sybase Adaptive Server Enterprise are 
      now displayed correctly.
Enh:  (88.6) If neither the -header nor the -filecolumns parameter are 
      specified for the WbImport command, SQL Workbench/J assumes the 
      file matches the table definition.
Enh:  (88.6) All settings that are available in workbench.settings can now 
      be overwritten on the commandline using -Dworkbench.settings...=
Enh:  (88.6) Writing the settings when closing the application can now 
      be prevented by passing the -nosettings parameter to the application
Enh:  (88.6) The connection profiles can now be grouped. The list on the
      left side of the connection dialog is now displayed as a Tree.
Enh:  (88.1) The table lists in the DataPumper can now be refreshed 
      without re-connecting
Enh:  (88.1) BLOB columns can now be set to NULL from within the BLOB Dialog
Enh:  (88.1) Text export and import can now handle BLOB data as well. The
      text file will contain the file name of the external file to which 
      the blob was written. WbImport will automatically assume the value
      of blob columns are filenames (this can be turned off with 
      the parameter -blobisfilename=false when running WbImport) 
      When writing Oracle SQL*Loader control files (-writeoracleloader=true 
      for WbExport), the control file will include the necessary definitions
      to import the blob from the external file.
Enh:  (88.1) WbSelectBlob now processes the full result set (and not 
      only the first row. Subsequent files will be name as the 
      base file with _(n) appended, where (n) is the row number 
      as retrieved from the DBMS server.
Fix:  (88.1) With Firebird, SELECT statements were broken
Fix:  (88.2) With Oracle CLOBs where always written with CDATA tags when 
      using XML Export even if -usecdata was set to false
Fix:  (88.4) For non-character columns, WbImport now treats empty values or 
      values that only consist of whitespace as null values (instead 
      of throwing an error) 
Fix:  (88.4) When saving a result set to a file "Save Data as", nothing 
      was written, if no file extension was specified.
Fix:  (88.6) The DbExplorer was not working as a standalone application any 
      longer (using the -dbexplorer switch or DbExplorer.exe)
Fix:  (88.11) "Save Workspace as..." was not working when no extension
      was specified
Fix:  (88.11) When enabling DBMS_OUTPUT (on Oracle) LONG or LONG RAW columns
      could not be retrieved as well. DbExplorer and DataPumper now disable
      DBMS_OUTPUT as soon as they connect. For regular SELECTs in the 
      editor tabs, this has to be done manually by the user by either
      globally disabling DBMS_OUTPUT in the options dialog or through
      DISABLEOUT before running a query on a table with a LONG column.
Fix:  (88.13) When switching from one Workspace with a file in a tab to 
      another workspace with not file in the same tab location, the file 
      was not unloaded.
Fix:  (88.13) WbImport did not use the -encoding parameter
Fix:  (88.14) When using SQL Workbench in batch mode without a 
      WbDrivers.xml, connections through the ODBC bridge did not work
Fix:  (88.15) When copying a profile from one group to another using
      the context menu, the new profile was not saved.
Fix:  (88.18) After reformatting the SQL Ctrl-Z (Undo) needed to be pressed
      twice in order to undo the reformatting.
Fix:  (88.18) If the internal line ending was set to something else then Unix
      loading external files would not work properly 
Fix:  (88.19) WbImport always used a quote character ("), even if no
      quote character was specified (so it was not possible to run 
      an import without any tests on quotes)
Fix:  (88.19) Re-introduced fix to prevent sending another SQL Statement while a 
      WbExport is running
Fix:  (88.20) The automatic retrieval of key columns for the target table 
      was not working for the WbCopy command.
Fix:  (88.21) -importcolumn parameter was not working for WbImport
Fix:  (88.21) Fixed repainting problems in editor
Fix:  (88.21) The DbExplorer could not be closed any longer, if only on SQL Tab 
      was open
Fix:  (88.21) Fixed the progress display in the console for Linux

Build 88, 07.07.2006
--------------------
Enh:  (87.14) The help window invoked from the main window is now 
      non-modal and can be put into the background.
Enh:  (87.11) CREATE INDEX is now supported for code-completion
Enh:  (87.10) Before saving a workspace the current file will be renamed 
      to *.bck. If workspace backups are disabled, then the backup file 
      will be deleted if the saving was successful.
Enh:  (87.8) BLOBs can now also be opened with external tools. The external 
      tools can be defined in the Options dialog 
      (Tools -> Options -> External Tools)
Enh:  (87.7) WbSchemaDiff now supports the -useJdbcTypes parameter which will
      compare the JDBC data types of the columns not the DBMS specific 
      data types to make a comparison of schemas across different DBMS 
      a bit more general.
Enh:  (87.4) When displaying the source for a Stored Procedure, View or Table
      in the DbExplorer the source can now be opened in an editor tab.
Enh:  (87.4) Made processing of result sets more flexible when running 
      multiple SQL statements that are not separated with a semicolon 
      (e.g. with SQL Server accepts this non-standard syntax)
Enh:  (87.3) "Create empty INSERT" in the DbExplorer now uses the formatting
      settings for internally generated statements.
Enh:  (87.3) "Create empty INSERT" can now be configured to use ? for the 
      values to help make creating PreparedStatements in Java code.
      This is controlled through the property
      workbench.sql.generate.defaultinsert.prepared=true
      in workbench.settings
Fix:  (87.3) Saving variables from within the WbVarList result was broken
Fix:  (87.3) When the source table was not found for the WbCopy command
      it was incorrectly reported as "Target table not found"
Fix:  (87.3) When switching result set tabs (inside a single panel) while
      editing a column, the new result tab(s) got corrupted.
Fix:  (87.3) When selecting from a different database with SQL Server
      the generated UPDATE statements did not include the 
      database
Fix:  (87.5) Cancelling a SELECT statement during processing of the 
      result was broken.
Fix:  (87.6) When running in batch mode, WbInclude (and other commands) 
      were not working relativ to their script's directory but were
      always using the current directory.
Fix:  (87.7) When using -referenceTables and -targetTables at the same time
      WbSchemaDiff did not report differences properly.
Fix:  (87.8) When a file is loaded in the editor, the file's directory 
      is used as the base directory for subsequent includes when running 
      the Script. Thanks to Christian d'Heureuse for this fix.
Fix:  (87.8) Prompting from within scripts that are called using wbinclude
      now works properly (when running in GUI mode)
Fix:  (87.8) When using a TAB character to separate the table name from the 
      table alias, auto-completion did not recognize the table
Fix:  (87.8) When a column is directky prefixed with a comma, auto-completion 
      was not working properly.
Fix:  (87.9) Statements using MS SQL Server's outer join syntax (using *=) 
      were not reformatted correctly.
Fix:  (87.9) Fixed some problems when re-formatting subselects
Fix:  (87.9) The USE command was broken with SQL Server when using
      quoted DB Names (e.g. [otherdb] or "otherdb")
      The usage of the setCatalog() function can be disabled using the property
      workbench.db.[dbid].usesetcatalog=false
Fix:  (87.10) When modifying a newly inserted row in the result that has already
      been saved, modified columns were not always detected correctly
Fix:  (87.11) Sub-selects in the WHERE clause where not formatted correctly      
      if the sub-selected used = instead of IN
Fix:  (87.13) Moving SQL tabs around was not always working properly (wrong
      statements were executed)
Fix:  (87.13) The display for start and end row was not always correct.
Fix:  (87.15) Switching between result sets in the same SQL panel would 
      discard any changes in done in the result set
      
Build 87, 08.05.2006
--------------------
Fix:  Some Workbench specific statements were broken when entered in lowercase

Build 85, 07.05.2006
--------------------
Enh:  (85.7) "Expand Editor" and "Expand Result" now act as a toggle. 
      The first time they are invoked they will expand the editor (or the
      result area) the second time they will undo the expand. 
      The "Undo Expand" will undo the last expand.
Enh:  (85.2) Reworked the Options dialog
Enh:  (85.9) The connection profile has a new attribute "Remove comments" which 
      is disabled by default. If enbled, any comments will be removed
      from the SQL statement before sending it to the server
Enh:  (85.14) Support for multiple result sets. This includes a change in the 
      display of the results. The result tab in the lower pane will not be 
      displayed unless the last SQL statement actually did produce a
      result set
Enh:  (85.14) Incremental search ("Search as you type") in auto completion
Enh:  (85.17) When using the auto completion in a GROUP BY the columns
      from the select list are now displayed
Enh:  (85.19) Added more properties to the options dialog
Enh:  (85.27) When undoing in the editor, the cursor now moves to the 
      position where the undo actually happened
Enh:  (85.32) The DbExplorer now includes a dropdown for the database 
      when connected to SQL Server (or any DBMS that supports catalogs)
Enh:  (85.38) BLOB columns are now displayed with a button that 
      will open a dialog to either save the blob or display it as
      text or an image. Files can also be "uploaded" from within
      that dialog.
Enh:  (85.39) If a macro definition contains the string ${selection}$ it 
      will be replaced with the selected text in the current editor. 
      If the definition contains the string ${current_statement}$ it will be 
      replaced with the sql statement at the cursor location.
      The replacement keys are case-sensitiv. 
Enh:  (85.43) Moved the "Remember DbExplorer Schema" option from the 
      global options to the profile options.
Enh:  (85.43) Additional Look & Feels can now be defined through the 
      Options dialog. Switching the Look & Feel has been moved to 
      the options dialog as well.
      
Fix:  (85.1) Not all settings were saved in the new options dialog
Fix:  (85.3) When generating SQL statements (INSERT, UPDATE,...) date 
      values where not formatted correctly for Oracle
Fix:  (85.5) The SQL Formatter inserted a space between two single quotes  
      inside a character literal
Fix:  (85.6) Oracle CLOB columns where not always copied correctly in the 
      DataPumper
Fix:  (85.6) When an error ocurred during copying, the DataPumper would 
      not always show the error.
Fix:  (85.7) The Options dialog would not open on a new installation
Fix:  (85.10) CLOB columns where not exported correctly for XML exports
Fix:  (85.16) When using "Save Data as" the options from the dialog
      where not correctly applied to the export file
Fix:  (85.19) Code completion inside a subselect was not working properly 
      if a statement contained more then one subselect
Fix:  (85.21) -commitevery was not working for WbImport if -usebatch was
      used (Thanks to Pascal for reporting this and also supplying the fix)
Fix:  (85.24) When using "Autojump to next statement" the result tab was 
      not selected when executing the last statement in the editor (using 
      "Execute Current"). 
Fix:  (85.25) Code completion was not working properly for statements 
      using the "new" JOIN syntax
Fix:  (85.29) Single line commands (such as SET SPOOL OFF) without a
      delimiter are now only detected when connected with an Oracle
      database. To (re-)enable this feature for other database systems
      add the DBID for your DBMS to the setting
      workbench.db.checksinglelinecmd
Fix:  (85.32) DESC dbname.owner.tablename was not working for SQL Server
Fix:  (85.34) Stored procedures where not displayed for SQL Server 
      when using multiple databases.
Fix:  (85.37) The USE command did not work with MySQL. This is actually 
      a "feature" of the MySQL driver which does not allow to change 
      the database with the USE command, only through Connection.setCatalog()
      which is now used internally by when a "USE dbname" is executed
Fix:  (85.38) WbVarDef was not working properly if a space was put around
      the equal sign (e.g. WbVarDef function_code = 1)
Fix:  (85.38) Time columns were not displayed correctly.
Fix:  (85.39) Detection of table alias for code completion 
      was not working properly any more
Fix:  (85.41) The application was not starting any more if no -configdir 
      was passed
Fix:  (85.43) The available tables were not recognized properly if 
      more then one JOIN was used.
Fix:  (85.45) The result of stored procedures that returned ResultSets 
      and updateCounts where not processed correctly
Fix:  (85.46) Update counts were sometimes reported twice
Fix:  (85.46) When trying to update a result based on a SELECT statement 
      with multiple tables, the tables were not listed correctly in the 
      dialog
Fix:  ALTER TABLE ... DROP CONSTRAINT was not considered for the "Ignore
      DROP errors" option. (Thanks, Janek for this)
Fix:  Statements immediately following a combination of multi-line and 
      single line statements were not always detected correctly and 
      thus not considered e.g. for the "Ignore DROP errors" option

Build 85, 20.02.2006
--------------------
Enh:  (84.2) The automatic scroll area of the editor ("electric scroll") can 
      now be configured with the property workbench.editor.electricscroll and 
      defines the number of lines where the electric scrolling should be 
      enabled. The current default is 3. This property can also be set
      through the options dialog ("Editor" tab)
      
      The color used to highlight statements that failed can now be configured 
      with the setting workbench.editor.color.error
      
Fix:  (84.1) When no profile was selected in the connect dialog, the OK button 
      could still be clicked (without result). Additionally if no profile 
      was selected, profile information could still be entered but would be lost
      when switching the profile
Fix:  (84.4) Code completion was not always working with subselects
Fix:  (84.4) WbSchemaDiff was not working any longer (due to the rename from 
      WbDiff
      
Build 84, 10.02.2006
--------------------
Enh:  (83.3) The number of columns the formatter ("Reformat SQL" menu item) puts
      into one line of a SELECT list, can now be defined:
      workbench.sql.formatter.select.columnsperline=1
Enh:  (83.2) When creating insert statements, columns defined as identity columns 
      are now ignored. This behaviour can be disabled (i.e. switch back to the 
      old way) by setting
      workbench.sql.generate.insert.ignoreidentity=false
Enh:  (83.7) Added the ability to define primary key columns for tables and views. 
      This can either be done using the new "WbDefinPk" command, or by defining 
      a mapping file that contains the definitions. The name of the mapping file 
      (which has to be a standard Java properties file with table=col1,col2 
      entries) can be defined in workbench.settings using
      workbench.pkmapping.file=filename
      The new commands to control this additional PK settings are:
      WbDefinePk - Define a PK mapping for one table
      WbListPkDef - List the currently active PK mapping
      WbLoadPkMap - Load a PK mapping from an external file
      WbSavePKMap - Save the current mapping to an external file
Enh:  (83.8) The way empty strings are treated and whether columns containing NULL
      values are included in INSERT statements can now be controlled in the 
      connection profile
Enh:  (83.9) Import progress (and other progress messages from the statusbar) can 
      now be enabled in the commandline (batch execution) with the parameter
      -showprogress=true
      As Java's support for the console is very limited this might not work
      properly in all situations
Enh:  (83.14) When displaying source for Oracle packaged functions, the editor
      not scrolls to the function.
Enh:  (83.14) The column header's tooltip now contains the datatype
Enh:  (83.15) WbImport now supports creating the target table if the import file
      is an XML file (-createtarget=true)
Enh:  (83.16) For Oracle the DESC command now also works for DBLinks (e.g. 
      desc table@dblink)
Enh:  (83.16) The path to the driver jar files can now contain the placeholder
       %LibDir%. The libdir can be specified in workbench.settings or using 
      the new command line -libdir
Enh:  (83.19) DbExplorers opened as a tab will store the selected schema in the 
      current workspace. This behavior can be disabled (old way) by setting
      workbench.dbexplorer.rememberSchema=false in workbench.settings
Enh:  (83.19) WbDiff has been renamed to WbSchemaDiff 
Fix:  (83.1) The shortcut @ for the WbInclude command is now only supported for 
      Oracle because e.g. SQL Server uses the @ sign to name procedure 
      parameters (and thus existing scripts do not work). 
Fix:  (83.2) Correct handling of MS SQL Server's BIT datatype when creating
      SQL statements.
Fix:  (83.3) Workaround for a bug in the Postgres JDBC driver which would 
      not show tables in the DbExplorer for the schemas pg_catalog and 
      information_schema
Fix:  (83.6) Minor bugfixes to the code completion
Fix:  (83.8) The defined date and timestamp format (Options) was not used
      when parsing dates entered.
Fix:  (83.10) Copying data as SQL statements was broken
Fix:  (83.10) FK Constraints were not compared correctly in the WbDiff command
Fix:  (83.11) Prevent sending another SQL Statement while a WbExport is running
Fix:  (83.12) Auto-completion was not working properly inside function calls
Fix:  (83.13) Copying selected data as SQL statements was broken
Fix:  (83.14) The SQL Formatter treats != as an operator (and does not separate
      the two characters)
Fix:  (83.19) A schema change (e.g. in Oracle via ALTER SESSION) was not always
      reflected in the connection info
Fix:  (83.22) WbExport did not export blob columns correctly when writing XML files
Fix:  (83.23) When creating procedures or functions in Oracle, the error information
      was not always displayed correctly.
Fix:  (83.25) When "Retrieve DbExplorer" was not enabled in the options dialog, 
      the schema dropdown was never populated in the DbExplorer
Fix:  (83.26) Displaying table structure in DbExplorer was broken with Oracle 8i
Fix:  (83.28) "Replace all" was not working with "Ignore case" in the editor

Build 83, 20.11.2005
--------------------
Enh:  (82.1) When running external files using WbInclude the directory of the 
      currently executed file is used as the "current" directory, so if the 
      executed file is using WbInclude (@) files can be referenced with a 
      relative path.
Enh:  (82.1) SQL Workbench now supports reading and writing blob columns to and 
      from external files. For updating blob and clob columns the usual 
      UPDATE and INSERT statements can be used with placeholders for the file 
      definition. To retrieve a blob the new WbSelectBlob command can be used. 
      When exporting data into an XML file, blob columns are now written
      into external files (the files are referenced from the XML output)
      This has been tested with Postgres 8.0, SQL Server (jTDS driver), MySQL,
      Firebird 1.5 and SQL Anywhere.
      For Oracle, the 10g driver is required. Earlier drivers do not support 
      the standard JDBC calls used for this feature.
Enh:  (82.1) When "confirming" updates, there was no way to cancel the execution
      completely. WbInclude is now also considered as an "updating" command.
Enh:  (82.2) Oracle 10g drivers do not work properly with Oracle 9i and date 
      columns. (The time part is not retrieved correctly). SQL Workbench now 
      always treats DATE columns as TIMESTAMP columns (i.e. it will 
      getTimestamp() and java.sql.Timestamp objects for those columns) to 
      preserve the time part. This can be switched off by setting 
      workbench.db.oracle.date.usetimestamp=false
      in workbench.settings
Enh:  (82.2) Added support for views, stored procedures and triggers for 
      MySQL 5.x in DbExplorer
Enh:  (82.3) WbReport now includes VIEW definitions
Enh:  (82.3) Added support for views and triggers for Apache Derby in DbExplorer
Enh:  (82.3) The password in the connection dialog can now be displayed in plain
      text
Enh:  (82.6) With WbImport -truncatetable=true can be used as a shortcut
      for -deletetarget=true -usetruncate=true. If -truncatetable is present
      -deletetarget will be ignored.
Enh:  (82.15) Filters can now be applied to all columns with a single expression
Enh:  (82.16) Oracle public synonyms can now optionally be included in the 
      auto completion popup. To enable this, a new property is available in 
      workbench.settings:
      workbench.editor.autocompletion.oracle.public_synonyms=true
Enh:  (82.18) The data tab in the DbExplorer now displays the current table name      
Enh:  (82.25) Tried to make concurrent access to the same connection more robust
Enh:  (82.27) The WbExport command can now write a skeleton for an SQL*Loader 
      control file when -oraldr=true is specified
Enh:  (82.28) Postgres: The source for a table now includes the index definition 
      as returned by the view pg_indexes, thus indexes with operator classes are 
      displayed correctly. The Index tab will still display it incorrectly though
      (the JDBC driver does not return the information)
Enh:  (82.29) WbDiff now includes Views
Enh:  (82.29) The "Create DDL Script" is now also available in the Procedures tab
      of the DBExplorer, not only the Objects tab.
Enh:  (82.30) Basic support for Oracle materialized views added

Fix:  (82.1) When an error occurs during inserting of new rows from a result set, 
      and the error is ignored, the status for the incorrect rows is lost, and 
      subsequent saving of the data will generate an UPDATE statement instead
      of an INSERT statement
Fix:  (82.2) When importing XML files with a CLOB column SQL Workbench/J would
      report an error. 
Fix:  (82.4) Fixed an error when loading files into the editor (files with CR/LF 
      ending were not loaded correctly)
Fix:  (82.5) Since 82.3 the assigned workspace file was not shown any longer in 
      the connection dialog
Fix:  (82.6) The defaults stated in the help for the WbDiff command did not  
      match the actual defaults used. The constraint comparing is now reported 
      correctly in the XML file as well.
Fix:  (82.6) The first column of a result set could not be edited any more.      
Fix:  (82.7) If an invalid regular expression is entered in the search dialog 
      of the editor, an error message is now displayed.
Fix:  (82.9) Replace & Next was not using regular expressions correctly for the 
      replacement string      
Fix:  (82.11) -decimal did not work for text imports
Fix:  (82.13) The tree display of foreign key references did not work any more
Fix:  (82.14) "Replace all" did not work any longer in the editor
Fix:  (82.15) When using a different table name for the generated script with 
      WbExport (with -type=sqlinsert) together with the -createtable option 
      the alternate name was not used for the PK, FK and Index definition.
Fix:  (82.18) Importing CLOB columns in Oracle did not work      
Fix:  (82.33) Checking for the MS SQL "GO" delimiter did not work properly 
Fix:  (82.34) When "Retrieve Explorer" was disabled, nothing was retrieved at 
      all when the Explorer was opened in a separate window
Fix:  (82.35) When using "Save Data as" date and timestamp columns were not
      written into the export file if not format was specified.

Build 82, 12.09.2005
--------------------
Fix:  @filename.sql was not working any longer
Fix:  Import of text files with the column definition in the header line was not 
      working

Build 81, 11.09.2005
--------------------
Enh:  (80.33) The filter definitions now support IS NULL and IS NOT NULL comparator
Enh:  (80.32) Auto completion now supports CREATE VIEW statements.
Enh:  (80.30) The SQL that is used for the UPDATE Statement in the WbImport command
      can now be "enhanced" with an additional WHERE clause. This can be specified
      with the parameter -updatewhere for the WbImport command. If this is specified
      e.g. -updatewhere="column=value" then this expression will be appended to the
      generated UPDATE statement with an AND condition. e.g. 
      UPDATE table SET col1=?, col2=? WHERE id=? AND (column=value)
      If the expression starts with the keyword AND or OR, then it will appended
      to the UPDATE staement as it is. If it does not start with either of the two
      keywords, it will be put into brackets and appended using AND.
      The expression -updatewhere="AND (col5=42 OR col5 = 43)" will be append "as is" 
      to the generated UPDATE statement.
Enh:  (80.29) The execution time of the last statement is now also shown
      in the statusbar.
Enh:  (80.26) The object types that are considered by the DbExplorer to contain
      data (i.e. that can be used in a SELECT statement) can now be configured. 
      The default setting is stored in the property 
      workbench.db.objecttype.data.default
      This can be overwritten for a specific dbms by replacing default with the
      DBID for the server, e.g. rdb or oracle
      
      workbench.db.objecttype.selectable.rdb=table,view,system,system view
      
      The values that should be listed in that property can be taken from 
      the TYPE column in the Object list of the DbExplorer
Enh:  (80.19) If a editor tab is associated with a file, the filename can now
      be displayed in the window title. This can be configured in workbench.settings
      with the property workbench.gui.display.showfilename 
      Possible values are none,name,path. If this property is set to "name", then 
      only the name of the current file (if any) is displayed in the window title.
      If it is set to "path", the full path will be displayed in the window title. 
      Otherwise (i.e. if the property is empty, or not present) the filename is
      not displayed at all.
Enh:  (80.19) Columns that are defined as NOT NULL are now displayed with 
      a different background color during editing. This feature can be disabled
      using the property:
      workbench.gui.edit.requiredfield.dohighlight=false
      The default highlight color is:
      workbench.gui.edit.requiredfield.color=255,100,100
      and can be changed with that property
Enh:  (80.18) The file to be used to store the connection profiles can now 
      be specified on the commandline using -profilestorage=filename.xml
      If the filename does not contain a directory, the configuration directory
      is used to search for the file, otherwise the full filename is used.
Enh:  (80.18) Editor Tabs that contain a file can now be renamed as well.
      The full filename is only available as the tooltip of the tab. To 
      restore the title to the file's name, rename the tab to an "empty" name
Enh:  (80.18) The editor tabs can now be re-ordered (right click on the
      tab, choose "Move left" or "Move right"
Enh:  (80.18) The retrieval of the row count can now be configured in the 
      data tab of the DbExplorer (using the "Settings" button)
Enh:  (80.17) Added a column filter and searcher to the column list display
      in the DbExplorer
Enh:  (80.13) The table list in the DbExplorer now uses a filter instead
      of simply searching for an object name.
Enh:  (80.12) Filtering of the resultset is now possible
Enh:  (80.6) Support for completion of INSERT statements added
Enh:  (80.10) The DbExplorer now lets you define the key columns for a table 
      in the data tab.
Fix:  (80.1) Fixed incorrect quoting for table names when creating 
      statements to save the changes to the data.
Fix:  (80.2) Fixed some errors in the generation of DbDesigner files
Fix:  (80.2) When using single line comments in the FROM list, the comments
      would show up in the generated update statemens when editing the data
Fix:  (80.3) When connecting to a database profile with a workspace assigned
      while a workspace was loaded the last tab would be removed from
      the currently active workspace
Fix:  (80.4) Re-introduced fix for the bug in Oracle 9 
      regarding the wrong information vor VARCHAR columns if NLS_LENGTH_SEMANTICS
      is set to char
Fix:  (80.5) Displaying procedures did not work any longer
Fix:  (80.7) Automatically detecting the alternate delimiter did not work 
      properly when using @ as a replacement of the WbInclude command
Fix:  (80.8) BIT and BOOLEAN fields where not handled correctly when importing
      XML files generated by SQL Workbench/J
Fix:  (80.9) Prevent endless loops with faulty JDBC drivers when retrieving warnings
      and errors after a retrieval.
Fix:  (80.12) When closing the search dialog in the editor with the ESC
      key, the search was performed anyway.
Fix:  (80.14) Fixed a bug with the autocompletion of columns in DELETE 
      statements
Fix:  (80.15) Using Ctrl-Space as the shortcut for code completion now works
      properly
Fix:  (80.19) The generated SQL for foreign key constraints in Oracle would 
      contain an "ON DELETE" rule which is not supported by Oracle
Fix:  (80.19) If the name of an editor tab contained a number equal to the 
      index of the tab, the shortcut was not displayed correctly
Fix:  (80.19) The scripts for SYNONYMs and SEQUENCEs were not created in 
      the DbExplorer (Create DDL Script)
Fix:  (80.19) When importing a text file that has fewer columns then the 
      target table, not all columns were imported properly
Fix:  (80.19) When a DbExplorer tab was currently selected, creating a new 
      SQL Tab did not work properly with JDK 1.5
Fix:  (80.20) The order of the foreign key/primary key columns was not correct 
      in the generated source for a table
Fix:  (80.21) Defined Filters were not displayed correctly when re-defining
Fix:  (80.25) WbReport now ensures, that the values stored in the DB Info part
      are valid XML by replacing potential illegal characters (e.g. (char)0) 
Fix:  (80.25) The size (width) limitation for the schema selector in the 
      DbExplorer has been removed 
Fix:  (80.25) New tabs were not always selected correctly (i.e. a different
      tab was considered the active tab)
Fix:  (80.35) When importing several files with the WbImport command that
      specified a different schema then the current one, SQL Workbench/J 
      tried to delete the tables in the schema defined by the files not
      by the -schema switch.
Fix:  (80.37) If running SQLWorkbench/J in batch mode and the specified connection 
      profile was not found, no clear error message was shown.
      
Build 80, 26.06.2005
--------------------
Enh:  (79.1) Workbench commands are now formatted correctly when using
      "Format SQL"
Enh:  (79.3) Added support for the new CHECK constraints in FirstSQL/J
Enh:  (79.3) Added a new menu item for controlling auto commit
Enh:  (79.3) Enhanced the performace of WBINCLUDE when processing scripts
      that are not read into memory completely.
Enh:  (79.3) Multiple Database Explorer windows and/or tabs can now be
      opened. The existing "Show Database Explorer" menu works as before.
      Additionally there is "New Db Explorer tab" and "New DbExplorer Window"
      It is strongly recommended to use the option "Separate connection for
      each tab" in this case to avoid threading problems in the JDBC driver
Enh:  (79.3) Sorting inside the result has been changed slightly. For
      performace reasons Strings are now compared using Java's internal
      compare which might produce incorrect results for certain languages
      (http://java.sun.com/j2se/1.4.2/docs/api/java/lang/String.html#compareTo(java.lang.String))
      To enable a language and country specific collation please use the
      following properties in workbench.setttings:
      workbench.sort.usecollator=true
      workbench.sort.language
      workbench.sort.country
      to specify the collation that should be used.
Enh:  (79.4) Code completion for tables and columns is now available. It can
      be activated by Ctrl-Q while the cursor is inside a SELECT, INSERT
      or UPDATE statement (other statements are not yet supported). To correctly
      identify the objects that need to be displayed it is required that the 
      statement is somewhat correct (it does not need to be complete, but 
      the statements in the editor have to be separated using ;)
      When a column or table name is pasted into the editor, it is pasted
      the way the JDBC driver returned the name. With
      workbench.editor.autocompletion.paste.case=lower
      this behaviour can be controlled in workbench.settings.
      Allowe values for this property are lower (names are pasted in lower case), 
      upper (names are pasted in upper case) or empty. If the property is empty
      or not present at all (default) then the names are pasted as they are
      returned from the driver
Enh:  (79.5) The usage of the schema name in DML statements generated by SQL Workbench
      can now be controlled. To do this, add the line 
      workbench.sql.ignoreschema.<dbid1>=schema1,...
      You can use * to ignore omit all schemas in DML statements, or list each 
      schema that should be ignored (e.g. PUBLIC) separately.
      The <dbid> that is generated for your DBMS is reported in the log file after a 
      successful connection (the log level needs to be set to INFO). 
      Look for the text "Using DBID"
Enh:  (79.6) WbImport now supports the -sourcedir parameter for text files as well.
Enh:  (79.6) WbDiff now supports more parameters to control the level of comparison
Enh:  (79.8) Added a workaround for the PostgreSQL JDBC driver not understanding
      the "dollar" quoting when creating functions.
Enh:  (79.12) Support for schema changes in HSQLDB and Oracle added

Fix:  (79.1) When no tables were found using WbExport -sourcetable=* no proper
      error was reported.
Fix:  (79.1) When using WbXslt the output file was not close properly and thus
      locked until the application was ended
Fix:  (79.1) When changing the selected table in the DbExplorer while a
      table definition was loaded, the application could hang.
Fix:  (79.2) Display (and export) of the time part of an Oracle DATE column
      was broken
Fix:  (79.3) when running "SET AUTOCOMMIT" the commit and rollback toolbar
      buttons where not enabled/disabled accordingly
Fix:  (79.3) Fixed a problem in the SQL parser with single line comments
      in the last statement of the editor
Fix:  (79.3) WBINCLUDE was not working if no encoding was specified
Fix:  (79.3) WBCOPY was not working when beeing used from within a batchfile
Fix:  (79.7) Fixed some problems with WBCOPY and creating tables during copying
Fix:  (79.7) When creating Oracle packages, errors were not shown correctly
Fix:  (79.7) Postgres' JDBC driver does not understand the "dollar quoting" 
      when creating stored procedures. A workaround was implemented to be 
      able to run the same scripts as with psql
Fix:  (79.9) Fixed a problem with detecting the "current" statement in the editor
      when using Ctrl-Enter
Fix:  (79.13) Cancelling a WbExport is now more reliable.
Fix:  (79.15) Fixed a bug in the handling of BIGINT columns.

Build 79, 25.04.2005
--------------------
Fix:  WbImport was not working if no encoding was specified

Build 78, 24.04.2005
--------------------
Enh:  (77.1) Prepared Statements (i.e. ? in a SELECT) are now supported
      This support relies on certain JDBC features which are
      not available e.g. in Oracle's or PostgreSQL's JDBC drivers.
      Currently this has been tested with Firebird and HSQLDB.
Enh:  (77.3) The source for stored procedure and views can now be
      displayed for Informix (thanks Meikel)
Enh:  (77.10) Errors during script execution can now be ignored by default
      (SQL -> Ignore errors)
Enh:  (77.12) When importing text files, columns can now be excluded
      from the import by specifying $wb_skip$ as the columnname
      in the -filecolumns parameter or by supplying a list of
      columns to be imported using the -importcolumns switch
Enh:  (77.12) When importing text file, filters based on regular expressions
      can now be applied either on column level or input line level
      (using the -columnfilter or -linefilter switch)
Enh:  (77.12) The WbImport command can now switch off the progress display
      of the current row which speeds up the process when importing from
      within the GUI (batch import does not suffer from the performance
      impact of the progress report). To disable the progress use
      -showprogress=false
      Alternatively the interval for the reporting can be selected as
      well -showprogress=100 will only update the display every 100 rows.
      Additionally the performance of the status display has been improved.
      Loading large result sets (which report the progress as well) and
      importing using -showprogress=true (the default) should run quicker now
Enh:  (77.14) The WBINCLUDE (and batch execution) command will not load script
      files into memory that exceed a certain size. They will be processed
      statement by statement which is a bit slower then loading them into
      memory. The threshold can be defined in workbench.settings with the
      property: workbench.sql.script.inmemory.maxsize
      The value is defined in bytes. Any file exceeding this size will be
      processed by not loading it into memory. The default threshold
      is 1MB (which means that any file that is smaller then 1MB will be
      processed in memory)
Enh:  (77.17) WBIMPORT now supports -importcolumns for XML files to
      select only certain columns from the input file
Enh:  (77.17) The DataPumper can now use a text or XML file as the source
Enh:  (77.18) A new command - WBDIFF - to generate an XML presentation of the
      difference between to schemas. The XML shows all modifications that
      need to be done to get the target schema to the same state
      as the reference (=source) schema. XSLTs to transform this XML
      into SQL scripts will follow
Enh:  (77.19) WBIMPORT now accepts -sourcedir for XML files to import
      all .xml files in that directory. When mixing XML files with long
      and short tags this works only if the files are created with
      this build, as the information about the tags used is available
      in the meta data of the XML file.
Enh:  (77.19) WBEXPORT now accepts -sourcetable=* to export all tables
Enh:  (77.22) Two new settings to control the formatting of generated
      SQL statements:
      workbench.sql.generate.insert.doformat
	  workbench.sql.generate.update.doformat
	  If set to false generated SQL statements (INSERT, UPDATE) will always
	  be put into a single line.
Enh:  (77.27) The default behaviour when creating text files with WBEXPORT
      for writing a header line, can now be defined using the property
      workbench.export.text.default.header
      (The existing setting workbench.export.text.includeheader stores
      the last selection when the export file was created using the GUI
      rather then WBEXPORT)

Fix:  (77.1) When a table was created using lowercase in Oracle, the
      DB Explorer would not work correctly for displaying data and
      dropping the table
Fix:  (77.2) Schemas with underscores where not treated correctly when
      creating UPDATE statements for the result set
Fix:  (77.4) SELECT statements that were immediately followed by a whitespace
      other then a regular space were not detected correctly when
      exporting data.
Fix:  (77.4) "Show table data" in the DbExplorer did not always use the
      correct table definition.
Fix:  (77.5) When a file was saved with an encoding other then the default
      encoding, the encoding was not properly restored when the workspace
      was loaded again.
Fix:  (77.6) Tried to make the workspace loading more robust to avoid
      corrupted workspaces.
Fix:  (77.10) SELECT .. INTO did no longer work with Informix and Postgres
Fix:  (77.11) Sometimes connection errors where not displayed correctly
      (the application would display the "Connecting to the database..."
      message indefinitely)
Fix:  (77.11) Fixed a problem when no workspace file was defined for
      a connection profile that was introduced with 77.6
Fix:  (77.12) Fixed a uppercase/lowercase problem when using WBIMPORT
Fix:  (77.12) When the -file switched is not supplied when using WBIMPORT
      a clear error message is now given.
Fix:  (77.15) Fixed a problem with the parsing of SQL statements with comments
Fix:  When importing text files with quote characters, empty fields ("") where
      not processed correctly (the import would fail with an error)
Fix:  (77.16) When exporting data from the select SQL statement, this now blocks
      the current panel (just like executing the statement would do) to avoid
      conflicts with non-threaded JDBC drivers
Fix:  (77.17) Ctrl-Enter was still working even if the application was
      disconnected.
Fix:  (77.20) Worked around a bug in the Oracle driver which would not
      return the correct objects for Timestamp (Oracle 9) columns
Fix:  (77.22) Entering timestamp values did not work.
Fix:  (77.23) [Oracle] In the DbExplorer the name for table level check
      constraints was not included in the SQL source
Fix:  (77.24) When using -charfunc for WBEXPORT the generated SQL Statements
      were not correct if a non-printable character was immediately followed
      by another non-printable character.
Fix:  (77.25) The source for Oracle packages are now displayed correctly
Fix:  (77.28) Date columns where not exported (Clipboard, WBEXPORT) correctly
      with Oracle (the export would not use to_date())

Build 77, 12.02.2005
--------------------
Enh:  When saving a result set using "Save as", the table to be used for INSERT
      statements can now be defined. (For UPDATE also, but that requires
      the retrieval of the PK columns prior to opening the dialog)
Enh:  The usage of the NULL keyword in a CREATE TABLE statement (DbExplorer)
      can now be configured. If the DBID of the connection is listed in the
      property workbench.db.nonullkeyword then the NULL keyword will not be
      used when generating the CREATE TABLE
Enh:  When copying data to the clipboard (Text, SQL), or saving the result set
      to a file (Data -> Save Data As) the columns that should be include can
      now be selected. When copying to the clipboard the selection dialog
      is displayed when pressing the CTRL key while clicking the menu item.
Enh:  When connected to a FirebirdSQL database, the command INPUT can also be
      used to call one SQL script from another.
Enh:  A query timeout can now be defined (Whether it is really working depends
      on the capabilities of the JDBC driver)
Enh:  Selected text (or the current line) can now be commented or un-commented
      using the Shortcuts Ctrl-Shift-C (Comment) or Ctrl-Shift-U (Uncomment)
Enh:  Added a "Select all" and "Select none" button to primary key select
      dialog (when updating a table without primary key definition)
Enh:  Added support for McKoi database
Enh:  The formatting of the generated INSERT statements can now be influenced
      by setting two properties in workbench.settings:

      workbench.sql.generate.insert.newlinethreshold
      defines the number of columns in the table before any reformatting of the
      column list or values list takes place

      workbench.sql.generate.insert.colsperline
      if the INSERT statement affects more then 'newlinethreshold' columns
      this value defines the number of columns to put into a single line.

      The default is newlinethreshold=5 and colsperline=1 which results in the
      same formatting used as before.

Enh:  Added more logging during connect
Enh:  The display format for DATE and DATE/TIME datatypes can now be specified
      seperately. With Oracle (at least Oracle8) however this does not work
      because there is no (real) distinction between DATE and TIMESTAMP
Enh:  The usage of the user name for SQL Statements created for "Export" can
      now be disabled using the property:
      workbench.export.sql.includeowner=false
Enh:  Data can now be saved and copied as DELETE/INSERT as well.
Fix:  The AVG() function was not displayed correctly
Fix:  When opening the Save as dialog, the application tried to check the
      update table even if "Disable automatic update check" was enabled
Fix:  Tried to fix a problem where the "Manage Driver" dialog was not displayed
      correctly under Linux
Fix:  The WBCOPY command did not properly report an error when the source or
      target table was not found.
Fix:  The WBCOPY command always issued an error if the JDBC driver does not
      support batch updates even if batchupdate was set to false.
Fix:  When using a separate connection per tab, connection errors that occurred
      during a connection for a tab were not displayed to the user, and the
      "Connecting..." message would not be closed
Fix:  If rows where only inserted into a table with no primary key, the
      DbExplorer would not update the table
Fix:  Syntax highlighting for statements with embedded # was not displayed
      correctly for non-MySql connections
Fix:  When spooling data from within the editor, the progress was not shown
      correctly
Fix:  When turning password encryption on (or off) the encrypted (or readable)
      passwords were only written to WbProfiles.xml if at least on Profile
      was changed.
Fix:  When an import was cancelled no messages were shown.
Fix:  When a driver class was defined with a trailing space, the driver
      definition was not found and the connection to the server failed.
Fix:  Date columns were not displayed according to the date format defined
      in the Options dialog

Build 76, 12.12.2004
--------------------
Enh:  Files can now be dropped on the editor tabs a the dropped file will
      be loaded into a new tab.
Enh:  The display of messages in the log/message panel can now be controlled
      by WBFEEDBACK [on|off]
      This will override the setting from the Options panel until
      WBFEEDBACK is executed again, or the application is restarted.
      It does not change the global (default) setting.
Enh:  Files can now be executed using @<filename> or wbinclude <filename>
      (in contrast to Oracle, this "command" does require a statement
      delimiter if used together with other statements, e.g. @myfile.sql;
Enh:  Autocommit can be controlled with SET AUTCOMMIT ON/OFF for all DBMS
Enh:  Added sequence definition display for HSQLDB 1.7.2
Enh:  Added basic metadata support for Ingres
      (Procedure, Trigger, Sequences, Synonyms and View source display)
Enh:  WBEXPORT does not use quoting at all if -quotechar is not specified.
Enh:  The line ending for text and XML export can now be defined
      through the -lineending switch for the WBEXPORT command. Supported values
      are: dos,win,crlf for the sequence CHR(13)CHR(10) (=\r\n) and
      lf,unix for the LF character CHR(10) or \n
      -lineending=dos is equivalent to -lineending=win and -lineending=crlf
      -lineending=unix is equivalent to -lineending=lf
      If no line ending is defined, then the default platform line ending will
      be used (the textexport did always use LF before)
Enh:  WBEXPORT can now escape non-ascii characters in a unicode manner
      (e.g. \u0123, \n, \t). This can be enabled with the -escapetext
      parameter. Valid values for this parameter are:
      ctrl - escape all characters below ascii 32
      7bit - escape all characters below ASCII 32 and above 126
      8bit - escape all characters below ASCII 32 and above 255
      extended - escape everything outside [32,126] and [161-255]
      WBIMPORT now supports the -decode switch to read files which contain
      escaped characters from the WBEXPORT command.
Enh:  WBEXPORT now supports the -quotealways=true flag. In this case
      the quote character is always put around data values (without this switch
      the quote character was only used if the delimiter was found in the
      data value)
Enh:  The schema report written with WBREPORT is now always sorted
      by table name and the columns are sorted as well to allow better
      comparison between two different reports.
Enh:  For drivers supporting batch updates, batch execution can now
      be enabled with WBSTARTBATCH. The queued statements are sent
      to the server when WBENDBATCH is executed.
Enh:  When loading and saving editor files, the encoding to be used
      can now be selected.
Enh:  When savind data directly from the result set, all options from
      WBEXPORT can now be specified.
Enh:  A new option for the connection profile to confirm execution of
      any statement that modifies the database or its content.
Enh:  The WBEXPORT command now supports the -usecdata flag. If set to true
      character data will be written as CDATA sections in XML exports
Enh:  The Schema Report can now be written in DbDesigner format
      (http://www.fabforce.net/dbdesigner4/) by supplying
      -format=dbdesigner switch for the WBREPORT command.
Enh:  When defining a variable the SQL Statement used to retrieve the value
      can now also include variables.
Enh:  The DbExplorer now displays the number of tables/objects displayed
Fix:  The editor now reads UTF files with a leading BOM correctly
Fix:  Text import now ignores empty lines
Fix:  Text import did not work, if the number of imported columns was
      different to the number of columns in the table.
Fix:  Leaving out the -quotechar for WBIMPORT still used " as the quote
      character.
Fix:  The parameter -continueOnError for WBIMPORT did not work.
Fix:  Specifying only -header=true for WBIMPORT did not work.
Fix:  When an invalid file was passed using the -script parameter no
      message was displayed to the console.
Fix:  Oracle's LONG columns were not handled properly for XML import/export
Fix:  -concat and -charfunc did not work for WBEXPORT's SQL format
Fix:  When a workspace was corrupted (e.g. ZIP file damaged) the application
      would hang when loading the workspace and no error was reported.
Fix:  The WBEXPORT command could not be cancelled
Fix:  Supplying username/password directly in the URL did not work for
      connection profiles
Fix:  When a variable was used more then once in a statement, it was not
      replaced correctly.
Fix:  Workaround in variable definition with a SELECT statement for HSQLDB.
      (Statements with group functions were not evaluated correctly)
Fix:  The parameter -append for WBEXPORT did not work anymore.
Fix:  "Jump to next Statement" did not work if "Highlight current statement"
      was enabled
Fix:  Tried to prevent a reload in the DbExplorer while a database update
      is running
Fix:  Multi-Line comments (using /* ... */) are now displayed correctly
Fix:  WBEXPORT would not report an error if the table defined in
      -sourcetable did not exist
Fix:  The editor tab width can now be set in the options dialog

Build 75, 08.10.2004
--------------------
Fix:  The display of table source was broken

Build 74, 07.10.2004
--------------------
Enh:  When an error occurs during data retrieval, the rows that have been
      retrieved until then will be retained and a warning will be displayed
      in the message panel
Enh:  Added -emptystringnull for text import (WbIMPORT) to specify the
      behaviour for empty strings during import. -emptystringnull=true will
      insert a NULL value for an empty string (string of length zero)
Enh:  Updated support for Cloudscape to include the move to Apache Derby
Enh:  When searching for text in the editor and the search string is not found,
      a message is now displayed.
Enh:  When executing several statements, the currently executed statement can
      now be highlighted
Enh:  An XML report of the database tables can now be generated using
      the WBREPORT command or from within the table list of the database
      explorer.
Enh:  If a table does not have primary key columns defined, the key columns
      that should be used for updating the table can now be defined
      (implicitely all columns were used before)
Enh:  Several WBEXPORT enhancements:
      The command now supports the -keycolumns switch, to define
      the key columns to be used when generating UPDATE statements
      (to either override the definition from the database, or defined
      key columns if the table does not have any)

      The command now supports the -sourcetable switch, to directly
      export one or more tables without the need of an additional
      SELECT statement. Using the -sourcetable switch requires the
      -outputdir switch, to define the target directory of the generated files

      The command now supports the -concatfunc switch which allows to set
      a function that concatenates strings. This is needed for e.g. for MySQL
      which does not support any (standard) concatenation operator at all.
      The -concat switch and the -concatfunc switch are mutually exclusive.

      The command now supports transforming the resulting XML file
      using XSLT. Two new parameters (-stylesheet and -xsltoutput) have been
      added to support this. The transformation will be executed after
      the XML file has been created.
      The transformation can also be executed "standalone" by using
      the new command XSLT (this could e.g. be used to transform the result
      of the WBREPORT command into a different format)

Enh:  Cancelling a SELECT statement now works also for JDBC drivers that
      do not support the cancel() operation.
Enh:  The source display in the DbExplorer can now be expanded to cover the
      full width by using Ctrl-Shift-T (or the little arrows in the split
      display). The shortcut actually toggles the display between full width
      and split display
Enh:  Only selected rows can now be copied to the clipboard (as text, INSERT
      or UPDATE statements)
Enh:  If the password should not be stored for a profile, the user is now
      prompted to enter the password when trying to connect using that profile
Enh:  For Oracle, table and column comments are now also created in the
      SQL statement to recreate a table. This requires that the Oracle
      JDBC driver returns the comments. See the online help for details
      on how to configure the connection to Oracle to show comments
Enh:  A new option has been added to the connection profile "Rollback before
      disconnect". Some DBMS (e.g. Cloudscape) require that all pending
      transactions are ended before disconnecting. Cloudscape already starts
      a transaction during a SELECT statement, and requires all transactions
      to be ended before disconnecting. If this option is enabled
      SQL Workbench/J will issue a rollback before doing the actual disconnect
Enh:  The logging has been improved. Logging to the console can
      now be disabled (workbench.log.console=false). If enabled
      it will now log to System.err (instead of System.out).
      The format of the log message can now be defined through
      workbench.log.format
      Valid placeholders are:
      {type}        DEBUG, INFO etc
      {timestamp}
      {message}     The actual log message
      {error}       The error message from the exception (if present)
      {source}      Where the error occurred
      {stacktrace}  The exception stacktrace if any (will always be displayed
                    after the log message regardless of the position in the
                    format string
      If the level is set to debug, the stacktrace will always be displayed
Enh:  The batch runner now displays the messages returned from the individual
      commands to System.out and doesn't use the logging facility any more.
      Combined with workbench.log.console=false the output of a batch run
      is now very similar to the messages printed in the GUI.
      Additionally result sets (if available) can now be printed to the console
      using the commandline switch -displayresult=true
Enh:  Views and triggers are now displayed for Cloudscape in the
      Database Explorer
Enh:  Added the commandline switch -ignoredroperrors for batch mode.
      This sets the "Ignore errors from DROP commands" property for the
      connection (same effect as connecting with a profile where this
      behaviour is enabled)
Enh:  Variable subsitution is now supported. Variables can be defined
      interactively (using WBVARDEF) from a file or as the result
      of a SQL query.
      A variable can be referenced so that Workbench prompts never, only once
      or always for a value.
      For details see the online help.
Enh:  When pressing Shift while selecting one of the "Optimize Column Width"
      menu items, the column label will be taken into account for the
      optimal size. Ctrl-Shift-W will optimize all columns with respecting
      to the column's name. This shortcut cannot be remapped currently.
Fix:  The SQL history is now written in UTF-8 to preserve special characters
Fix:  When the application was closed the user was asked up to three times if
      he wants to save modified files
Fix:  When importing textfiles, the dot was not the default decimal separator
      as stated in the manual
Fix:  When importing textfiles with wbimport the columnlist was not recognized
      correctly if the commas where followed by spaces
Fix:  Even if a statement consisted only of comments or whitespace it was
      still send to the server
Fix:  Fixed a memory leak in the retrieval of foreign keys
Fix:  If a workspace could not be loaded (due to an error), the user is asked
      if he wants to create a new workspace with that name.
Fix:  When an error occurred during an import into the current result set
      choosing "Cancel" or "Ignore all" had no effect, the import would
      continue in either case.
Fix:  When clicking quickly in the list of tables in the DbExplorer, it
      could happen, that the application locked up (when the DB responded
      to slowly)
Fix:  SQL Statements that contained german umlauts (and possibly other
      non ASCII characters) would fail to execute
Fix:  When importing a text file empty values for numeric fields gave an error.
      They are now treated as NULL.
Fix:  When trying to delete multiple rows before switching to edit mode, only
      the first row was deleted (because switching to edit mode resets the
      row selection)
Fix:  Generate Delete Script wasn't working if
      "Disable automatic update table check" was turned on for the profile
      Fixed some minor problems during delete script generation.
Fix:  After changing the object type in the DbExplorer the focus is not set
      to the table list
Fix:  A profile where the driverclass was registered more then once
      (using different names) was not copied correctly.
Fix:  When importing a text file with -header=false and -columns=... the first
      line of the file was not imported.

Build 73, 02.08.2004
--------------------
Enh:  The TableSearcher now displays the number of rows for each table
Enh:  The resource file with translations is now also searched in the
      subdirectory language (relative to the location of workbench.jar)
      Thus it is possible to install other languages without re-compiling
      the application.
Enh:  When starting to edit data in the result set, the text is now
      automatically seleted. This can be set to old behaviour
      by workbench.table.edit.autoselect=false in workbench.settings
Enh:  The shortcut for the Redo command can now be configured
Enh:  Indexes can now be dropped and created from within the DbExplorer
Enh:  CLOB columns are now displayed properly (only tested for Oracle),
      they still cannot be updated.
Enh:  LONG columns for Oracle can now be read and written
Enh:  The variable prefix when creating a code snippet can now be defined
      in workbench.settings. The property name is workbench.editor.codeprefix
Enh:  A SQL file can now be reloaded
Enh:  From the table list in the DbExplorer an empty INSERT statement can now
      be generated for the selected table(s).
Enh:  When creating a Java Code snippet, a trailing ; will be removed from
      the Java String
Enh:  The COPY command and the DataPumper now allow creating a table when
      a source query is used. If the JDBC driver of the source system does
      not provide the correct column information for the source columns, this
      will not work properly.
Fix:  Workaround for a bug in the HP/UX Java implementation when setting
      a system property
Fix:  When switching the selected table quickly in the DbExplorer
      the data display would stop working.
Fix:  The COPY command can now also be invoked using WBCOPY. This is
      necessary for PostgreSQL as it has its own COPY command.
Fix:  When retrieving long VARCHAR columns from a Sybase Server, the
      Sybase JDBC driver would trow an exception while retrieving the
      MetaData for the ResultSet.
Fix:  The formatter would split up >= <= with a space which does not work
      for some DBMS
Fix:  Copying data in the DataPumper would fail if the target table should be
      created on the fly.
Fix:  DbExplorer: with MS SQL Server the Owner selection did not work for the
      procedure tab.
Fix:  DbExplorer: Fixed a problem when retrieving procedures
Fix:  Fixed a small problem with parsing scripts that contain # style comments
Fix:  Cleaned up the code for setting the wait (hourglass) cursor to make it
      more robust.
Fix:  Added elsif as an keyword for the editor syntax highlighting
Fix:  If a macro contained more then one statement, only the first one was
      executed
Fix:  The "Include Constraints" option wasn't working when dropping tables
      from within the DbExplorer
Fix:  If a statement produced an error, the statement not always selected
      correctly in the editor
Fix:  Fixed a deadlock in the DbExplorer when right clicking immediately after
      clicking in the table list (while the table definition was still beeing
      retrieved)
Fix:  When an error occurred during updating the result set, the message to
      continue/abort was not always displayed.
Fix:  Comments in the source query for the COPY command are now preserved
Fix:  Delete scripts where not generated correctly

Build 72, 13.05.2004
--------------------
Enh:  Rows in the result set can now be copied ("cloned")
Enh:  The text file import now reports the rows which had problems
Enh:  If no look and feel has been selected by the user (e.g. when starting
      for the first time), SQL Workbench/J now uses the system look and feel
Enh:  The Table Search Panel now has a "Select All" and "Select None" button
      to ease the selection of tables.
Enh:  In the Table Search Panel, the search can now also be invoked by
      pressing ENTER in the text field for the criteria
Enh:  The automatic check for the update table after the retrieve can now
      be disabled per profile. This is useful for slow connections/databases
      where the retrieval of the table meta data takes long.
Enh:  Added default definitions for DB2 driver
Enh:  When using the EXPORT command -createtable now also works for SQL
      statements that contain a join. SQL Workbench/J tries to include a
      CREATE TABLE which matches the result set structure as close as possible
Enh:  SELECT ... FROM table INTO temp_table now works with Informix
      and for PostgreSQL (slightly different syntax)
Enh:  The database explorer now optionally uses the list of table types
      returned by the driver when selecting the type *
      The Postgres JDBC driver returns only certain types (e.g. not the system
      tables) even when all table types are requested. This behaviour can
      be controlled through the property workbench.dbexplorer.usetypelist
      (true or false)
Enh:  The SQL formatter does not add a space between a function and the
      following opening bracket. The function names which are included in this
      check are retrieved from the JDBC driver.
      The space would break SQL statements for MySQL as it does not comply with
      the SQL standard.
Enh:  Batch updates are now supported for the DataPumper, the COPY and IMPORT
      commands (depending on the support by the JDBC driver of course)
Enh:  SQL Workbench/J can now be configured to ignore certain SQL commands.
      This is useful for e.g. scripts that are written for SQL*Plus and contain
      SQL*Plus specific statements (e.g. EXIT, WHENEVER)
Fix:  Importing a text file did not work for data types other then VARCHAR
Fix:  Updating the database from the DbExplorer is now done in the background
      so that the GUI doesn't lock up.
Fix:  When updating a table from within the DbExplorer, the setting
      to preview the update statements was not used.
      (The preview was never shown)
Fix:  A single quote character in a comment would break the parser to
      recognize the individual statements
Fix:  When using several windows, only the workspace for the active
      window was saved when closing the application
Fix:  The procedure display for SQL Server was not correct (it would always
      show "RESULT" as the type even if it really was a procedure) therefor the
      generated DROP statements weren't correct.
Fix:  Using GO as the delimiter for SQL Server did not work any longer
Fix:  When using "New Window" to open a new window with a different connection
      the connection from the first window was broken
Fix:  When opening the driver manager dialog from the connection dialog,
      and closing the driver manager with OK, the selected driver class in
      the current profile was changed back to the first driver (Thanks Meikel!)
Fix:  The SQL formatter was removing the semicolon at the end of a statement


Build 71, 05.04.2004
--------------------
Enh:  The SQL parser now accepts # as a single line comment character as well
      (MySQL standard)
Enh:  The EXPORT command can now export to HTML as well.
Enh:  If an error occurs during sending result set updates to the database,
      the user can now choose to abort or ignore the errors.
Enh:  In the result sets more then one row can now be selected and deleted.
Enh:  The popup menu for the table list (in the DbExplorer) now offers the
      possibility to delete all table data.
Enh:  Procedures and packages can now be recompmiled for Oracle
Enh:  Files can now be dropped from the filesystem into the editor
Fix:  If no development build is available the version check information does
      not show anything at all
Fix:  When closing tabs with files in it, subsequent tabs without names where
      not reloaded correctly the next time.
Fix:  The label for the alternate delimiter in the options dialog was not
      displayed correctly
Fix:  When using MS SQL Server with autocommit off, the update table was not
      retrieved correctly and thus "Copy as INSERT" was not working
Fix:  If a file was opened using Ctrl-O or saved using Ctrl-S the tab label
      was not updated.
Fix:  If the DataPumper (or import) was defined with update mode and only
      key columns where selected, it would fail without reporting the cause
      of the problem.
Fix:  When opening multiple windows, the DatabaseExplorer would not work
      properly if the Connection Profile was set to "One Connection per Tab"
Fix:  Workspaces where one editor tab was completely empty were not loaded
      properly.
Fix:  The page setup dialog (from within the print preview) caused the
      application to hang when run under Linux

Build 70, 05.03.2004
--------------------
Enh:  The EXPORT command now supports the -append parameter to append text of
      SQL output to an already existing file
Enh:  When printing, the page now contains a header identifying the source of
      the data (e.g. the table's name when printing its definition or the
      beginning of the select statement)
Enh:  Reworked the layout of the DataPumper
Enh:  Errors reported from Oracle's SET command are now ignored. Thus scripts
      intended for SQL*Plus containing things like SET LINESIZE can be executed
      without an error message.
Enh:  Column/Table level constraints defined with the check() keyword are now
      displayed in the SQL source for a table. Currently this is implemented for
      Firebird, Postgres, SQL Server, Oracle, Adaptive Server Anywhere and
      HSQLDB >= 1.7.2 RC2
Enh:  The DatabaseExplorer now shows Sequences for Oracle
Enh:  The connection info can now be configured with the property
      workbench.gui.connectiondisplay
      The value for that property can contain the following placeholders:
      %username%, %url%, %profile%, %catalog%
      The placeholders are case sensitiv!
      If this property is not set, the old display will be shown. The following
      entry would re-created the old display: User=%username%, URL=%url%

Fix:  Oracle: VARCHAR columns with UTF8 and nls_length_semantics = char are now
      displayed correctly
Fix:  The setting to disable/enable the DBMS_OUTPUT package by default for
      Oracle was not saved (so it was enabled always)
Fix:  Oracle: When retrieving LONG columns with DBMS_OUTPUT support enabled,
      the whole statement would fail
Fix:  If a workspace was closed, the first tab was not renamed correctly
Fix:  SQL Workbench/J changed the color of the grid lines to a light gray which
      causes problems for some background/foreground color combinations. The
      grid color can now be configured. To get the default dark gray back, add

      workbench.table.gridcolor=128,128,128

      to your workbench.settings
Fix:  The shortcut for the DatabaseExplorer (Ctrl-D) could not be
      remapped correctly
Fix:  "Match Bracket" did not show up in the shortcut list (and on the menu)
Fix:  The display was not scrolled properly when jumping to the end of a line
      which does not fit into the editor horizontally
Fix:  Creating a new Connection Profile did not always work
Fix:  Fixed some problems with SQL Server, because the MS JDBC driver did not
      allow for multiple concurrent statement objects to be created.
Fix:  -mode=update,insert did not work for the COPY command because the
      parameter for the key columns was not parsed
Fix:  When an error occurred during the update of the database, the message
      was not displayed correctly (missing key in the resource file)
Fix:  If an error occurred when saving the contents of the SQL editor to a
      file, no message was displayed to the user.

Build 69, 01.02.2004
--------------------
Fix:  When using a DBMS with schemas, the DbExplorer would not always
      retrieve the data correctly
Fix:  When running scripts with a large number of CREATE statements, a "Maximum
      number of open cursors exceeded" could occur with Oracle
Fix:  Workaround for JDBC drivers that do not support the setMaxRows() function
Fix:  When saving data from the result set, the export type was determined by
      the extension and not by the selected file filter. Thus an export into
      a text file with an extension other then txt did not work.
Fix:  The macro manager could not be closed if no macro was defined
Fix:  The Oracle data types NVARCHAR2 and NCHAR were not displayed
      correctly in the table definition
Fix:  The COPY command always required a -targetprofile
Fix:  The source for functions in PostgreSQL is not displayed correctly
Enh:  Added support for ThinkSQL
Enh:  Added support for DBMS which only allows definition of foreign and
      primary keys inside the CREATE TABLE statement
Enh:  The status bar is now always displayed in the main window (not only when
      the result panel is visible)
Enh:  Data can now be saved as SQL UPDATE statements as well (if the table
      has a primary key defined)
Enh:  IMPORT, COPY and the DataPumper can now optionally update existing records
Enh:  When using "Execute Current" the editor now (optionally) jumps to the next
      statement.
Enh:  The COPY command does not require a profile any more. If neither source nor
      target profile are specified the current connection will be used for both.


Build 68, 20.01.2004
--------------------
Fix:  Spooling of more then one table from within the DbExplorer did not work


Build 67, 20.01.2004
--------------------
Enh:  Selected text can now be indented and un-indented using the tab key
      (or Shift-Tab)
Enh:  Column selection mode can now also be activated by keyboard.
      Alt-Q will activate the column selection mode for the next selection
      Column selection is always possible by holding down the Ctrl key while
      selecting with the mouse
Enh:  Jump to first statement and jump to last statement are now
      available for the statement history.
Enh:  If a statement fails (while executing several statements),
      it is now highlighted in the editor
Fix:  When cancelling an update, or an error occured during the update
      of changes made directly in the result set, the changes were lost.
Fix:  The SQL source for a table was wrong for Firebird, because Firebird
      does not understand the NULL keyword
Fix:  Macros where not saved
Fix:  The MacroManager did not work if no macros where defined.
Fix:  The COPY command did not work if no columns where specified
Fix:  Adjusted the MetaData SQL for HSQLDB 1.7.2 Triggers
      (which unfortunately breaks the trigger display for earlier versions
      as the column names where changed)
Fix:  The source code for VIEWS was wrong
Fix:  The last SQL tab could be closed.


Build 66, 10.01.2004
--------------------
Enh:  A Data Pumper is now available which makes it possible to copy
      tables directly from one database to another without using export files
      (Tools->Data Pumper)
      The same functionality is also available through the COPY command.
Enh:  The connect dialog now has a separate button to copy a profile
Enh:  The export command now supports the -showprogress switch
Enh:  If DBMS_OUTPUT package for Oracle is enabled by default, a default buffer
      size can now be defined
Enh:  You can now check if newer versions are available from the WebSite
      (Help -> Check for updates)
Enh:  With MySQL the database explorer now displays correctly columns of
      type enum or set (complete definition)
Enh:  Reworked the documentation about using batch files
Fix:  Logging with type INFO did not work
Fix:  When reformatting SQL statements the formatter would remove closing
      brackets in some cases.
Fix:  Fixed a repainting problem in the editor
Fix:  The table to be updated for in-place editing and importing was not
      recognized properly if it was prefixed with a user
      (e.g. SELECT * FROM myuser.mytable)
Fix:  When changing a connection profile and saving the profiles from within
      the connect dialog, the application would still ask if the profiles
      should be saved when exiting.
Fix:  -commitevery for IMPORT was not recognized for text imports
Fix:  With Oracle the DbExplorer would sometimes not display anything if
      something other then "*" was selected in the "Type" dropdown of the
      table list.
Fix:  The -profile and -script parameters were broken (Thanks Jared!)
Fix:  The SQL formatter would remove a semicolon at the end of a statement
Fix:  Fixed a small bug when creating an IN list with numbers
Fix:  The current "MaxRows" setting is now stored in the workspace

Build 65, 13.12.2003
--------------------
Fix:  Horizontal scrolling would overwrite the line numbers
      (Thanks Vano!)

Build 64, 12.12.2003
--------------------
Enh:  When executing a macro through the menu, pressing shift will replace
      the current editor text.
Enh:  A macro can now be executed by double-clicking in the "Manage Macros"
      window
Enh:  Macros now got a menu of their own, to make it faster to select
      a specific macro
Enh:  More detailed logging (in Debug mode) when finding a driver class
Fix:  When opening a new file, the user was not prompted if pending changes
      in the current file should be saved
Fix:  If a tab contains a file, and the user cancelled the file open dialog
      the file icon was removed from the tab
Enh:  Searching and replacing text always took the entered value as a regular
      expression.  Now the dialogs have a checkbox where the use of a regular
      expression can be turned off (so it is now possible to search for (+) )
Fix:  The DEFAULT clause for a column for Oracle was not generated correctly in
      the DbExplorer
Enh:  The file encoding can now be specified with XML export and import.
Enh:  XML import can now be cancelled
Enh:  The editor now displays line numbers (View->Show line numbers)
Enh:  Text file import is now possible through the IMPORT command
Enh:  Log messages are now appended to the log file. The max size for the log
      file can be specified with the property
      workbench.log.maxfilesize
      in workbench.settings
Enh:  Added metadata stuff for Adaptive Server Anywhere
Fix:  Fixed a bug in the tree display for foreign keys. If there were circular
      references the code was stuck in an endless loop
Enh:  COMMIT and ROLLBACK can now be executed through the menu as well.
      Alt-M is the shortcut for COMMIT
      Alt-R is the shortcut for ROLLBACK
Fix:  Errors during the parsing of the various XML configuration files are now logged
Fix:  As Ctrl-M is now opening the Manage Macro Dialog, F7 is the new shortcut to set
      the focus to the "Max. Rows" field
Fix:  The SQL Formatter now handles CREATE TABLE and CREATE VIEW better.
      Also comments in the script are handled better now.
Enh:  Shortcuts can now be configured
Enh:  The title bar now show a little indicator as long as a statement is running


Build 63, 16.11.2003
--------------------
Fix:  Under Firebird, listdb would throw a NullPointerException. LISTDB now
      correctly displays nothing, as catalogs are not supported by Firebird
Fix:  Disconnect did not work properly if "One Connection per tab" was enabled
      in the profile.
Fix:  The current workspace was not saved, when File->Disconnect was selected


Build 62, 15.11.2003
--------------------
Fix:  The oracle driver tries to do an ANALYZE on the table when
      retrieving the table indexes, which fails (and is dead slow as well)
      when using an account which does not have privileges to do so.
      The indexes for Oracle are now retrieved with an own SQL statement
      rather then using the driver.
Fix:  When switching back to a panel which was currently executing a
      statement the application would hang.
Fix:  If a comment appeared after the last alternate delimiter in a
      statement the alternate delimiter was not recognized.
Enh:  The newline character in code snippets can now be supressed
      with a property in workbench.settings
      workbench.javacode.includenewline=false
Enh:  Enabled the old shortcuts for previous and next statement
      (Ctrl-P, Ctrl-N) again. They are available as an alternative
      to Alt-Left and Alt-Right.
Fix:  When a different tab was selected while running a statement
      the editor of the initial tab got the focus once its statement
      had finished
Enh:  SQL Workbench nows displays a MessageBox when the connection fails.
Fix:  When the connection failed, the DbExplorer was enabled although
      it wouldn't work anyway.
Enh:  The SQL formatter can now format more then one statement
Fix:  Fixed some problems in the editor, when the scrollbars weren't
      updated correctly after deleting the entire text, or pasting new
      text over the existing
Enh:  The table source now shows the grants made for a table
Fix:  The update of the database name in the connection info did not work
      with the SQL Server Desktop Engine and the MS JDBC driver
Fix:  When restoring window size & position make sure the coordinates
      fit into the current screen
Fix:  When inserting a new row into the result set, where the first column
      did not contain a value, the resulting INSERT statement was not correct
Fix:  Tabs with an index > 9 would still receive a shortcut and the index itself
      was not correct in the tab label
Enh:  Reworked SQL Macro handling. File->Manage Macros has been removed and
      merged with "SQL->SQL Macros->Run macro...". The combined functionality
      is now available under "SQL->Manage Macros..."
      The new Dialog also offers the possibility to replace the current editor
      text with the SQL text from the macro. When executing a macro by typing
      its name in the editor the text will still not be replaced
Enh:  Under Oracle the DbExplorer now displays the definition for function based
      indexes correctly.
Enh:  If a workspace for a profile does not exist when connecting to that profile
      the user will now be prompted if the workspace should be created, or a different
      workspace should be loaded.


Build 61, 02.11.2003
--------------------
Enh:  The default type which is selected in the drop down of the table
      list panel in the DbExplorer can be defined now. If this
      property is set, the dropdown will default to this selection
      when the DbExplorer is opened.
Fix:  When configuring several drivers with the same driver class (but
      different descriptions) the wrong jar file was used to retrieve
      the driver class.
Enh:  Changed Ctrl-K as the shortcut for "Close Tab" as Ctrl-W is
      already bound to "Optimize all column widths"
Fix:  When copying data to the clipboard, data after a zero byte would
      be ignored
Enh:  Option to consolidate ("compress") log messages when executing
      a script
Fix:  When retrieving Oracle LOBs an exception was thrown by the
      driver when the Workbench tried to analyze the ResultSet metadata.
Fix:  Some SQL statements (like executing stored procedures or SHUTDOWN)
      could lead to an OutOfMemory error (this is due to a bug in most
      of the JDBC drivers. A workaround for retrieving the results in
      such cases prevents now the OutOfMemory error)
Enh:  The workspace can now be saved automatically whenever a SQL
      statement is executed. This can be enabled with
      workbench.workspace.autosave=true in workbench.settings
      (no GUI available yet)
Fix:  when changing the number of decimal digits, the Workbench had
      to be restarted to pick up the new value
Fix:  "Workspace->Save As" now correctly assigns the workspace to the profile
Fix:  Deleting SQL Macros did not work properly
Enh:  Workbench can now import the XML files generated by the SPOOL
      (=EXPORT) command. For this, the XML format had to be changed
Enh:  Tweaked the SQL formatter a little bit
Enh:  Disconnecting and connecting is now done in its own Thread, so
      that the gui doesn't lock up when the DBMS connection is slow
Enh:  Added meta data queries for Firebird DBMS (http://www.firebirdsql.org/)
Fix:  The procedure panel in the DbExplorer was not displayed if the
      connection was changed, and if the DbExplorer was displayed as
      a tab.
Fix:  The DbExplorer did not retrieve itself when it was opened as a tab
Enh:  Memory consumption for SaveAs (HTML, XML, TXT, SQL) has been reduced.
Enh:  The table search tab in the DbExplorer now tries to guess if the
      user is doing a case-insesitive search on databases which are
      case sensitive.
Enh:  For The SQL formatter a max length for sub-SELECTs can be
      defined, where any sub-SELECT shorter then this maximum will not
      be reformatted.


Build 60, 12.09.2003
--------------------
Enh: When the active database is changed in MS SQL Server with the command USE
     the connection info is now updated, so that the current database is displayed
     correctly
Fix: When running in batch mode, SQL scripts where no longer executed correctly
Enh: Tweaked the SQL formatter a little bit


Build 59, 10.09.2003
--------------------
Enh: Basic reformatting for SQL statments implemented.
     It is available under SQL->Reformat SQL
Enh: The use of an animated gif icon can be now be disabled.
     In some cases this improves the CPU usage of SQL Workbench.
     This option is available from the option dialog (Tools->Options)
Fix: When assigning a workspace through Workspace -> Assign workspace
     the changes would not be saved to the profile


Build 58, 06.09.2003
--------------------
Fix: Sometimes a wrong "Statement cancelled" would be printed in the message area
Fix: After importing a text file, the "Save" button was not enabled
Enh: The verifying of the JDBC URL via acceptsUrl() can be disabled
     by an entry in workbench.settings
     workbench.db.verifydriverurl=false
Fix: "Clean Java Code" now replaces single line comments // with --
Fix: Sometimes "Execute current" would fail with finding the "current"
     Statement and the whole text would be executed
Enh: Text can now be searched and replaced in the SQL Editor
Enh: Tabs can now be added and closed with Ctrl-T and Ctrl-W (same
     shortcuts as Mozilla)
Enh: Changed data in the DbExplorer could not be saved.
Fix: Tabs where an external file is loaded can no longer be renamed
Fix: When saving a workspace, for any tab where an external file
     is loaded, the user is now prompted if the external file should
     be saved as well.
Fix: When a profile is loaded with a link to an external file, and the
     file cannot be loaded the "normal" history is displayed.
Enh: The editor tab now indicates with an icon, if an external file is
     loaded.
Fix: When an external file was modified, the user was not asked if the
     file should be saved, when closing the file
Enh: The DbExplorer now allows to create a script for several tables at once


Build 57, 12.08.2003
--------------------
Fix: When the default workspace has only one statement tab, and the DbExplorer
     was shown as a tab, the statement tab would disappear after loading the
     workspace (thanks for catching that Patrick!)
Enh: Added Ctrl-B shortcut to jump to the location of the matching bracket
Fix: The hyperlinks in the help window did not work
Enh: Added F1 as the shortcut for Help
Enh: When running SQL Workbench in batch mode, no profiles need to be defined
     in advance. The full connection details can now be defined on the commandline
Fix: Table sorting is now done based on the system's default locale
Fix: The editor selection wasn't restored, if the selection started at the very
     first character of the text
Enh: The result data can now be printed
Fix: Oracle: The display of compilation errors for CREATE PROCEDURE did not work
     for some statements


Build 56, 19.07.2003
--------------------
Enh: The help file is now included in Workbench.jar, thus the Help
     menu does not try to display the internet page any longer.
     Displaying the "plain" HTML file is a workaround, until the full
     JavaHelp is available


Build 55, 19.07.2003
--------------------
Fix: The data for PUBLIC synonyms in Oracle would not be displayed
Fix: Support for DBMS_OUTPUT package was broken
Enh: DBMS_OUTPUT package can now be enabled automatically (Tools -> Options)
Fix: When adding more then 9 tabs to the main window, tabs >= 10 are no longer
     assigned a shortcut (to make sure the shortcuts stay unique)
Fix: When switching the connection profile while the DbExplorer was open, the DbExplorer would
     not work any longer when the DbExplorer window was re-opened
Fix: The "Ignore DROP errors" attribute for a connection was always (implicitly) stored as
     enabled. Unfortunately the fix means that this attribute needs to be re-enabled for
     old profiles.
Enh: It's now possible to define "Macros". A simple alias for a lengthy SQL
     statement. The macros are available under SQL/SQL Macros
Enh: Support for driver specific JDBC properties (Extended Properties)
Enh: Changed the "Stop" icon in the toolbar (That's for you Felix!)


Build 54, 05.07.2003
--------------------
Fix: The "Spool data" menu item did not work, if SQL statement ended with a semicolon
Fix: When the rowcount for a table is retrieved in the DbExplorer, an hourglass
     is now displayed next to the "Total:" label, to indicate that the SQL
     query is running.
Enh: The data tab in the DbExplorer is now using the same component as the SQL panel
     in the main window, thus the max row setting moved to the lower right corner
Enh: The data in the data tab of the DbExplorer can now be changed and saved
     to the database.
Fix: The table rowcount and data was retrieved too often in the DbExplorer
Enh: When spooling data to XML format, the date and number format can now
     specified with the spool command (same as with spool type=txt)
Enh: Importing a file into the current table, can now be cancelled
Enh: Updating the database can now be cancelled
Fix: If the connection URL for a driver is wrong, a more detailed error message
     is now displayed
Fix: The "Separate connection for each tab" property was broken with the new
     Workspace features
Fix: When closing the workbench while a statement which cannot be cancelled
     is running, the application can now be closed gracefully
Enh: The application identifies itself now in the connection properties for
     Oracle and SQL Server (session output from v$session or sp_who2 will
     show SQL Workbench/J as the application name)


Build 53, 17.06.2003
--------------------
Fix: When loading workspaces where a script file was open, they were not restored
     correctly
Fix: When closing a tab in a workspace, the following tabs would not keep their
     correct names if they had a non standard name
Fix: Fixed a bug when the alternate delimiter was set to / and the
     script contained C-Style comments with /* ... */
Fix: Leading spaces where strippped of the SQL Statements when loaded
     from a workspace
Fix: The table searcher now works with Oracle synonyms (the searcher replaces
     the synonym name with the real table name)
Enh: The table search now shows the SQL Statements executed in a separate
     editor pane as a refernce
		 
Build 52, 11.06.2003
--------------------
Fix: Fixed a problem when loading workspaces. Newlines were added incorrectly
Fix: When cancelling the Connect Dialog and then closing the main window,
     the default workspace would get overwritten with an empty workspace file.
Enh: When searching table in the DbExplorer the expression used for the column's
     name, can now be defined


Build 51, 03.06.2003
--------------------
Enh: Improved Workspace handling:
     - A profile can now be connected to a workspace
     - Moved all Workspace menu items to a new main menu called Workspace
     - When using a Workspace, the tabs can be renamed
     - Text selection and cursor position is now stored in the workspace as well
Enh: Data can now be exported to XML as well
Enh: Improved SQL History handling (selection and cursor position are stored
     and maintained)
Fix: Worked around a bug in the PostgreSQL JDBC driver, where the columns for a
     for foreign key definition would appear twice


Build 50, 19.05.2003
--------------------
Enh: The spool command now supports the following additional parameters for text export
     -dateformat
     -timestampformat
     -delimiter
     -quotechar
     -cleancr
     -decimal

     and the following additional parameters for SQL Export
     -charfunc
     -concat

     See the User's Manual for a detailed explanation on how the parameters work

Fix: Fixed a bug in the SQL parser, when a quote character occurred inside quotes (e.g. "'")


Build 49, 16.05.2003
--------------------
Fix: -script parameter was broken


Build 48, 14.05.2003
--------------------
Fix: When saving changes to the database, JWorkbench would build all update
     statements in memory which causes trouble when importing large files
Fix: When an operation generates an OutOfMemoryError, a message is displayed
     to the user.
Fix: Fixed connection problems if the JDBC driver does not support
     getSchemaTerm(), getCatalogTerm() or getProductName()
Fix: When closing the main window with the close button in the window title bar
     and profiles where changed, the application was exited even if Cancel
     was selected from the message box
Enh: When importing text files, the number format and the quote character can
     now be specified
Enh: When issuing the SHUTDOWN command for HSQLDB, the connection will be closed
     as well (because the HSQLDB engine is no longer available)
Enh: The windows launcher now supports the following new command line parameters:
     -jdk=<dir>
     -debug
     -? (-help -h)
Enh: When switching to the data tab in the DbExplorer, the retrieval of the data
     can be prevent if the shift button is hold down, when switching the tab.
     Even if "Automatic retrieve" is activated.
     The data display can also be configured to show a warning when retrieving more
     then a specific number of rows (independently of the max rows setting)
Enh: Documented the DbExplorer's data tab (and its settings)
