<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="make-dev-jar" name="Workbench">

  <property name="root" value=".."/>
  <property name="doc" value="../doc"/>
  <property name="src" value="../src"/>
  <property name="csrc" value="../launcher"/>
  <property name="scriptsrc" value="."/>
  <property name="libdir" value="../libs"/>
  <property name="build" value="../build"/>
  <property name="classes" value="../classes"/>
  <property name="distdir" value="../dist"/>
  <property name="version" value="0.1"/>
  <property name="jarfile" value="Workbench.jar"/>
  <property name="javadocdir" value="../javadoc"/>
  <property name="srczipname" value="WorkbenchSrc.zip"/>
  <property name="srczip" value="${root}/${srczipname}"/>
  <property name="packagezip" value="${root}/release/workbench.zip"/>
  <property name="packagetar" value="${root}/release/workbench.tar.gz"/>
  <property name="doczip" value="${root}/release/html-manual.zip"/>

  <!-- location of the docbook installation and the FOP installation -->
  <property name="docbook.root" value="${doc}/docbook"/>
  <property name="fop.root" value="c:/etc/fop"/>

  <target name="init">
    <tstamp>
      <format pattern="yyyy-MM-dd HH:mm" property="build_date"/>
    </tstamp>
    <tstamp>
      <format pattern="dd.MM.yyyy" property="formatted_build_date"/>
    </tstamp>
  </target>

  <path id="docbook.extensions.path">
    <pathelement location="c:/etc/xalan/bin/xalan.jar"/>
    <pathelement location="c:/etc/xalan/bin/xercesImpl.jar"/>
    <pathelement location="${docbook.root}/extensions/xalan25.jar"/>
    <pathelement path="${classpath}"/>
  </path>

  <path id="saxon.path">
    <pathelement location="c:/etc/saxon/saxon8.jar"/>
    <pathelement path="${classpath}"/>
  </path>

  <path id="fop.path">
    <fileset dir="${fop.root}/lib">
      <include name="**/*.jar"/>
    </fileset>
    <pathelement location="${fop.root}/build/fop.jar"/>
  </path>

  <target name="set-build-number" depends="init">
        <property name="release-src-dir" value="release"/>
    <buildnumber file="build.number"/>
    <echo message="Build number is ${build.number}"/>

    <!-- Reset the sub-build number for dev-builds -->
    <propertyfile file="devbuild.number">
        <entry key="dev-build.number" type="int" operation="=" value="0"/>
    </propertyfile>

  </target>

  <target name="set-dev-build" depends="init">
        <property name="release-src-dir" value="dist"/>
    <propertyfile file="devbuild.number">
        <entry key="dev-build.number" type="int" operation="+" value="1"/>
    </propertyfile>

    <!-- <echo message="sub ${dev-build.number}"/> -->
    <loadproperties srcFile="release.property"/>
    <loadproperties srcFile="devbuild.number"/>

    <property name="build.number" value="${release.build.number}.${dev-build.number}"/>
    <echo message="Build number is ${build.number}"/>

  </target>

  <target name="get-dev-build" depends="init">
    <loadproperties srcFile="release.property"/>
    <loadproperties srcFile="devbuild.number"/>

    <property name="build.number" value="${release.build.number}.${dev-build.number}"/>
    <echo message="Build number is ${build.number}"/>
  </target>

  <target name="clean">
    <delete dir="${build}/workbench" failonerror="false"/>
    <delete dir="${build}/language" failonerror="false"/>
    <delete dir="${build}/help" failonerror="false"/>
    <delete file="${scriptsrc}/history.new" failonerror="false" />
    <mkdir dir="${build}"/>
    <mkdir dir="${distdir}"/>
  </target>

  <target name="prepare" depends="init">
    <copy todir="${build}">
      <fileset dir="${src}">
        <include name="**/*.gif"/>
        <include name="**/*.ico"/>
        <include name="**/*.png"/>
        <include name="**/*.xml"/>
        <include name="**/*.html"/>
      </fileset>
    </copy>
    <copy todir="${build}">
      <fileset dir="${src}">
        <include name="**/*.properties"/>
      </fileset>
      <filterset begintoken="@" endtoken="@">
        <filter token="BUILD_DATE" value="${build_date}"/>
        <filter token="BUILD_NUMBER" value="${build.number}"/>
      </filterset>
    </copy>

    <copy todir="${build}">
      <fileset dir="${src}">
        <include name="**/BaseValueObject.java"/>
        <include name="**/BaseTablePersistence.java"/>
      </fileset>
    </copy>
  </target>

  <target name="compile" depends="prepare">
    <javac debug="off" debuglevel="source,lines" destdir="${build}" optimize="on" srcdir="${src}" >
        <exclude name="workbench/test/**"/>
    </javac>
  </target>

  <target name="compile_debug" depends="prepare">
    <javac debug="on" debuglevel="source,lines" destdir="${build}" optimize="on" srcdir="${src}" >
        <exclude name="workbench/test/**"/>
    </javac>
  </target>

  <target name="compile_jikes" depends="prepare">
    <javac executable="c:/etc/jikes/bin/jikes.exe" compiler="jikes" debug="on" debuglevel="source,lines" destdir="${build}" optimize="on" srcdir="${src}" >
        <exclude name="workbench/test/**"/>
    </javac>
  </target>

  <!-- Manual related tasks -->

  <!-- Create the FO file which will in turn be transformed
       into the PDF manual by the target "pdf"
  -->
  <target name="fop" depends="init">
    <copy overwrite="true" todir="${doc}/pdf">
      <fileset dir="${doc}/xml">
        <include name="*.xml"/>
      </fileset>

      <filterset begintoken="@" endtoken="@">
        <filter token="BUILD_DATE" value="${build_date}"/>
        <filter token="BUILD_NUMBER" value="${build.number}"/>
        <filter token="IMAGE_DIR" value="${src}/workbench/resource/images"/>
      </filterset>
    </copy>

    <xslt in="${doc}/pdf/Manual.xml" out="${doc}/pdf/manual.fo" style="${doc}/xsl/workbench-pdf.xsl">
      <xmlcatalog>
        <dtd publicId="-//OASIS//DTD DocBook XML V4.2//EN"
             location="${doc}/dtd/docbookx.dtd"/>
      </xmlcatalog>
      <param name="paper.type" expression="A4"/>
      <param name="margin.bottom" expression="1.5cm"/>
      <param name="margin.top" expression="1.5cm"/>
      <param name="margin.left" expression="1.5cm"/>
      <param name="margin.right" expression="1.5cm"/>
      <param name="generate.section.toc.level" expression="3"/>
      <param name="toc.indent.width" expression="24"/>
      <param name="toc.max.depth" expression="3"/>
      <param name="toc.section.depth" expression="3"/>
      <param name="title.margin.left" expression="0pt"/>
      <param name="body.start.indent" expression="0pt"/>
      <param name="section.autolabel" expression="1"/>
      <param name="section.autolabel.max.depth" expression="3"/>
      <param name="alignment" expression="left"/>
      <param name="use.extensions" expression="0"/>
    </xslt>

    <delete>
      <fileset dir="${doc}/pdf">
        <include name="*.xml"/>
      </fileset>
    </delete>
  </target>

  <!-- Create the pdf version of the manual -->
  <target name="pdf" depends="fop">
    <java classname="org.apache.fop.apps.Fop" classpathref="fop.path">
      <arg value="${doc}/pdf/manual.fo"/>
      <arg value="${doc}/pdf/SQLWorkbench-Manual.pdf"/>
    </java>
    <delete file="${doc}/pdf/manual.fo"/>
  </target>

  <!-- Create the html help files for putting them into the
       distribution jar
  -->

  <target name="build-help" depends="prepare">
    <delete dir="${build}/help" failonerror="false"/>
    <mkdir dir="${build}/help"/>
    <echo message="Generating HTML Help"/>
    <!-- copy overwrite="true" todir="${build}/help" file="${doc}/xml/docbookx.dtd"/ -->
    <copy overwrite="true" todir="${build}/help">
      <fileset dir="${doc}/xml">
        <include name="*.xml"/>
      </fileset>

      <filterset begintoken="@" endtoken="@">
        <filter token="BUILD_DATE" value="${build_date}"/>
        <filter token="BUILD_NUMBER" value="${build.number}"/>
        <filter token="IMAGE_DIR" value="../workbench/resource/images"/>
      </filterset>
    </copy>

    <xslt basedir="${build}/help" includes="Manual.xml" style="${doc}/docbook/html/chunk.xsl" destdir="${build}/help">
      <xmlcatalog>
        <dtd publicId="-//OASIS//DTD DocBook XML V4.2//EN"
             location="${doc}/dtd/docbookx.dtd"/>
      </xmlcatalog>

      <param name="root.filename" expression="workbench-manual"/>
      <param name="html.stylesheet" expression="html-internal.css"/>
      <!--
      <param name="admon.graphics.path" expression="../workbench/resource/images/"/>
      <param name="admon.graphics.extension" expression=".gif"/>
      <param name="admon.graphics" expression="1"/>
      -->
      <param name="admon.textlabel" expression="1"/>
      <param name="chunk.first.sections" expression="1"/>
      <param name="chunker.output.indent" expression="yes"/>
      <param name="chunk.quietly" expression="1"/>
      <param name="chunk.fast" expression="1"/>
      <param name="toc.section.depth" expression="3"/>
      <param name="use.id.as.filename" expression="1"/>
      <param name="section.autolabel" expression="1"/>
      <param name="table.borders.with.css" expression="0"/>
      <param name="table.cell.border.style" expression="solid"/>
      <param name="table.cell.border.thickness" expression="1px"/>
      <param name="table.frame.border.style" expression="solid"/>
      <param name="table.frame.border.thickness" expression="1px"/>
      <param name="make.valid.html" expression="1"/>
      <param name="html.cleanup" expression="1"/>
      <param name="navig.showtitles" expression="1"/>
      <param name="css.decoration" expression="1"/>
    </xslt>
    <!-- delete file="${build}/help/docbookx.dtd"/ -->
    <delete file="${build}/help/Manual.html"/>
    <delete>
      <fileset dir="${build}/help">
        <include name="*.xml"/>
      </fileset>
    </delete>

    <copy overwrite="true" todir="${build}/help" file="${doc}/css/html-internal.css"/>
  </target>

  <target name="init-help">
    <property name="html-stylesheet" value="html-internal.css"/>
    <property name="html-outdir" value="${build}/help"/>
    <property name="html-resource-dir" value="../workbench/resource/images"/>
    <property name="index-file-name" value="index"/>
    <property name="html-css-tables" value="0"/>
  </target>

  <!-- Create the HTML files suitable for publishing on the website -->
  <target name="publish" depends="init-publish,build-html">
  </target>

  <target name="init-publish">
    <property name="html-stylesheet" value="html-publish.css"/>
    <property name="html-outdir" value="${distdir}/manual"/>
    <property name="html-resource-dir" value="./images"/>
    <property name="index-file-name" value="workbench-manual"/>
    <property name="html-css-tables" value="1"/>

    <delete dir="${html-outdir}" failonerror="false"/>
    <mkdir dir="${html-outdir}"/>
    <mkdir dir="${html-outdir}/images"/>

    <copy todir="${html-outdir}/${html-resource-dir}" flatten="true">
      <fileset dir="${src}/workbench/resource/images">
        <include name="ExecuteSel16.gif"/>
        <include name="Remove16.gif"/>
        <include name="filter16.gif"/>
        <include name="New16.gif"/>
        <include name="Delete16.gif"/>
        <include name="CopyProfile16.gif"/>
        <include name="ExecuteSel16.gif"/>
        <include name="note.gif"/>
      </fileset>
    </copy>
  </target>

  <target name="build-html" depends="prepare">

    <echo message="Generating HTML in ${html-outdir}"/>
    <!-- copy overwrite="true" todir="${html-outdir}" file="${doc}/xml/docbookx.dtd"/ -->

    <copy overwrite="true" todir="${html-outdir}">
      <fileset dir="${doc}/xml">
        <include name="*.xml"/>
      </fileset>

      <filterset begintoken="@" endtoken="@">
        <filter token="BUILD_DATE" value="${build_date}"/>
        <filter token="BUILD_NUMBER" value="${build.number}"/>
        <filter token="IMAGE_DIR" value="${html-resource-dir}"/>
      </filterset>
    </copy>

    <copy overwrite="true" tofile="${html-outdir}/history.txt" file="${scriptsrc}/history.new"/>

    <xslt basedir="${html-outdir}" includes="Manual.xml" style="${doc}/docbook/html/chunk.xsl"
          destdir="${html-outdir}" classpathref="saxon.path">
      <xmlcatalog>
        <dtd publicId="-//OASIS//DTD DocBook XML V4.2//EN"
             location="${doc}/dtd/docbookx.dtd"/>
      </xmlcatalog>
      <param name="use.extensions" expression="0"/>
      <param name="textinsert.extension" expression="1"/>
      <param name="root.filename" expression="${index-file-name}"/>
      <param name="html.stylesheet" expression="${html-stylesheet}"/>
      <param name="admon.graphics.path" expression="${html-resource-dir}/"/>
      <param name="admon.graphics.extension" expression=".gif"/>
      <param name="admon.graphics" expression="1"/>
      <param name="admon.textlabel" expression="0"/>
      <param name="chunk.first.sections" expression="1"/>
      <param name="chunker.output.indent" expression="yes"/>
      <param name="chunk.quietly" expression="1"/>
      <param name="chunk.fast" expression="1"/>
      <param name="use.id.as.filename" expression="1"/>
      <param name="section.autolabel" expression="1"/>
      <param name="table.borders.with.css" expression="${html-css-tables}"/>
      <param name="table.cell.border.style" expression="solid"/>
      <param name="table.cell.border.thickness" expression="1px"/>
      <param name="table.frame.border.style" expression="solid"/>
      <param name="table.frame.border.thickness" expression="1px"/>
      <param name="toc.section.depth" expression="3"/>
      <param name="make.valid.html" expression="1"/>
      <param name="html.cleanup" expression="1"/>
      <param name="navig.showtitles" expression="1"/>
      <param name="css.decoration" expression="1"/>
    </xslt>
    <!-- delete file="${html-outdir}/docbookx.dtd"/ -->
    <delete file="${html-outdir}/Manual.html"/>
    <delete>
      <fileset dir="${html-outdir}">
        <include name="*.xml"/>
      </fileset>
    </delete>

    <delete file="${html-outdir}/Manual.xml"/>
    <copy overwrite="true" todir="${html-outdir}" file="${doc}/css/${html-stylesheet}"/>
  </target>

  <!-- End Manual related tasks -->

  <target name="make-jar" depends="prepare">
    <copy failonerror="false" overwrite="true" file="${scriptsrc}/history.new" tofile="${build}/help/history.txt" />
    <copy failonerror="false" overwrite="true" file="${scriptsrc}/history.new" tofile="${distdir}/history.txt" />

    <jar compress="true" jarfile="${distdir}/${jarfile}">
      <manifest>
        <attribute name="Main-Class" value="workbench.WbStarter"/>
        <attribute name="Class-Path" value="."/>
        <attribute name="Created-By" value="Thomas Kellerer (info@sql-workbench.net)"/>
        <attribute name="WbBuild-Number" value="${build.number}"/>
        <attribute name="WbBuild-Date" value="${build_date}"/>
      </manifest>
      <fileset dir="${build}">
        <exclude name="**/package.html"/>
      </fileset>
    </jar>

  </target>

  <target name="publish-dev" depends="get-dev-build, copy-history, publish, clean-history">
  </target>

  <target name="make-src-zip">
    <delete file="${srczip}"/>

    <zip zipfile="${srczip}">
      <zipfileset dir="${src}" prefix="src">
        <include name="**/*.*"/>
        <exclude name="**/*.class"/>
        <exclude name="**/*.java~"/>
        <exclude name="**/workbench.settings"/>
        <exclude name="**/CVS/*"/>
        <exclude name="**/.cvsignore"/>
        <exclude name="**/.nb*"/>
        <exclude name="**/tags"/>
        <exclude name="help/*.*"/>
        <exclude name="**/Test/*"/>
        <exclude name="**/*.tws"/>
      </zipfileset>

      <zipfileset dir="${scriptsrc}" prefix="scripts">
        <exclude name="**/.nb*"/>
        <exclude name="**/.new"/>
      </zipfileset>

      <zipfileset dir="${doc}" prefix="doc">
        <include name="**/*.*"/>
        <exclude name="**/.nb*"/>
        <exclude name="html/**/*.*"/>
        <exclude name="openoffice/**/*.*"/>
        <exclude name="documentation.project"/>
        <exclude name="docbook/**/*.*"/>
        <exclude name="manual/**/*.*"/>
        <exclude name="jhelp/**/*.*"/>
        <exclude name="**/*pdf*/*.*"/>
        <exclude name="dtd/**/*.*"/>
      </zipfileset>

      <zipfileset dir="..\website" prefix="website">
        <include name="*.xml"/>
        <include name="*.xslt"/>
        <include name="wb.css"/>
      </zipfileset>

    </zip>
  </target>

  <!-- build a full relase with documentation and source distribution -->
  <target name="release" depends="clean, set-build-number, copy-history, build-help, compile, make-jar, pdf, publish, release-src-zip, release-package, restart-history, clean-history">
    <tstamp>
      <format pattern="yyyy-MM-dd" property="today"/>
    </tstamp>

    <!-- reset the release property file -->
    <delete file="release.property"/>

    <propertyfile file="release.property">
      <entry key="release.build.number" value="${build.number}"/>
      <entry key="release.build.date" value="${today}"/>
    </propertyfile>
    <ant dir="..\website" inheritall="false" target="noDev">
    </ant>
  </target>

  <target name="make-dev-jar" depends="get-dev-build, clean, copy-history, prepare, compile_debug, make-jar, clean-history">
  </target>

  <!-- build a development release -->
  <target name="dev-release" depends="set-dev-build, clean, copy-history, prepare, compile_debug, build-help, release-src-zip, make-jar, clean-history">
    <tstamp>
      <format pattern="yyyy-MM-dd" property="today"/>
    </tstamp>

    <propertyfile file="release.property">
        <entry key="dev.build.date" value="${today}"/>
        <entry key="dev.build.number" value="${build.number}"/>
    </propertyfile>

    <ant dir="..\website" inheritall="false" target="withDev">
    </ant>
  </target>


  <target name="copy-history">
    <copy file="${scriptsrc}/history.txt" overwrite="true" tofile="${scriptsrc}/history.new">
      <filterset begintoken="@" endtoken="@">
        <filter token="BUILD_DATE" value="${formatted_build_date}"/>
        <filter token="BUILD_NUMBER" value="${build.number}"/>
      </filterset>
    </copy>
  </target>

  <target name="restart-history">
    <concat destfile="${scriptsrc}/history.txt">
      <filelist dir="${scriptsrc}" files="history.header,history.new"/>
    </concat>
  </target>
  <target name="clean-history">
    <delete file="${scriptsrc}/history.new" failonerror="false"/>
  </target>

  <target name="release-package" depends="init">

    <copy file="${scriptsrc}/history.new" overwrite="true" failonerror="false" tofile="${root}/release/history.txt"/>

    <copy file="${doc}/pdf/SQLWorkbench-Manual.pdf" overwrite="true" todir="${root}/release"/>

    <delete dir="${root}/release/manual" failonerror="false"/>
    <mkdir dir="${root}/release/manual"/>

    <copy todir="${root}/release/manual">
        <fileset dir="${html-outdir}"/>
    </copy>

    <delete>
      <fileset dir="${root}/release">
        <include name="Workbench-Build*.zip"/>
        <include name="Workbench-Build*.tar.gz"/>
      </fileset>
    </delete>

    <zip zipfile="${root}/release/Workbench-Build${build.number}.zip">
      <zipfileset dir="${distdir}">
        <include name="Workbench.jar"/>
        <include name="history.txt"/>
      </zipfileset>
      <zipfileset dir="${distdir}">
        <include name="JWorkbench.exe"/>
        <include name="DataPumper.exe"/>
        <include name="DbExplorer.exe"/>
      </zipfileset>
      <zipfileset dir="${scriptsrc}">
        <include name="jworkbench"/>
        <include name="datapumper"/>
        <include name="dbexplorer"/>
      </zipfileset>
      <zipfileset dir="${html-outdir}" prefix="manual">
        <include name="**/*.*"/>
      </zipfileset>
      <zipfileset dir="${scriptsrc}" prefix="xslt">
        <include name="**/*.xslt"/>
      </zipfileset>
    </zip>

    <tar destfile="${root}/release/Workbench-Build${build.number}.tar.gz" compression="gzip">
      <tarfileset dir="${root}/dist">
        <include name="Workbench.jar"/>
        <include name="history.txt"/>
      </tarfileset>
      <tarfileset dir="${root}/scripts" mode="755">
          <include name="jworkbench"/>
          <include name="datapumper"/>
          <include name="dbexplorer"/>
      </tarfileset>
      <tarfileset dir="${html-outdir}" prefix="manual">
        <include name="**/*.*"/>
      </tarfileset>
      <tarfileset dir="${scriptsrc}" prefix="xslt">
        <include name="**/*.xslt"/>
      </tarfileset>
    </tar>

  </target>

    <target name="release-src-zip" depends="init">
    <delete failonerror="false">
      <fileset dir="${root}/${release-src-dir}">
        <include name="WorkbenchSrc*.zip"/>
      </fileset>
    </delete>

    <zip zipfile="${root}/${release-src-dir}/WorkbenchSrc-Build${build.number}.zip">
      <zipfileset dir="${src}" prefix="src">
        <include name="**/*.*"/>
        <exclude name="**/workbench.settings"/>
        <exclude name="**/test/*"/>
        <exclude name="**/CVS/*"/>
        <exclude name="**/.cvsignore"/>
        <exclude name="**/.nb*"/>
        <exclude name="**/*.dfPackage"/>
        <exclude name="**/tags"/>
        <exclude name="help/*.*"/>
        <exclude name="**/*.tws"/>
      </zipfileset>

      <zipfileset dir="${scriptsrc}" prefix="scripts">
        <include name="build.xml"/>
        <include name="history.txt"/>
        <include name="build.number"/>
        <include name="history.header"/>
        <include name="jworkbench"/>
        <include name="datapumper"/>
        <include name="dbexplorer"/>
        <include name="*.xslt"/>
      </zipfileset>

      <zipfileset dir="${doc}" prefix="doc">
        <include name="css/*.*"/>
        <include name="xml/*.*"/>
        <include name="xsl/*.*"/>
        <exclude name="**/CVS/*"/>
        <exclude name="**/.cvsignore"/>
        <exclude name="**/.nb*"/>
        <exclude name="**/tags"/>
        <exclude name="help/*.*"/>
        <exclude name="**/*.tws"/>
      </zipfileset>
    </zip>
    </target>

  <target name="src" depends="make-src-zip"/>

</project>