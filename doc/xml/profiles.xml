<section id="profiles">
  <title>Connecting to the database</title>

  <indexterm><primary>Connection profile</primary></indexterm>

  <section id="profile-intro">

	<title>Connection profiles</title>
	<para>&wb-productname; uses the concept of profiles to store
    connection information. A connection profile stores two different types
		of settings:

		<itemizedlist>
			<listitem><simpara>JDBC related properties such as the JDBC driver class, the connection URL, the username etc.</simpara></listitem>
			<listitem><simpara>&wb-productname; related properties such as the profile name the associated workspace, etc.</simpara></listitem>
		</itemizedlist>
	</para>

	<para>
		After the program is started, you are prompted to choose a
		connection profile to connect to a database. The dialog will display a list
		of available profiles on the left side. When selecting a profile, its details
		(JDBC and &wb-productname; settings) are displayed on the right side of the
		window.
	</para>

	<para>
    <indexterm><primary>Connection profile</primary><secondary>create</secondary></indexterm>
    To create a new profile click on the
		<literal>New Profile</literal> button (<guiicon><inlinegraphic width="16" depth="16" fileref="@IMAGE_DIR@/NewProfile16.gif" format="GIF"/></guiicon>).
		This will create a new profile with the name "New Profile". The new profile
		will be created in the currently active group.
		The other properties will be empty. To create a copy of the currently
		selected profile click on the <literal>Copy Profile</literal> button
		(<guiicon><inlinegraphic width="16" depth="16" fileref="@IMAGE_DIR@/CopyProfile16.gif" format="GIF"/></guiicon>).
		The copy will be created in the current group. If you want to place the copy
		into a different group, you can either choose to Copy &amp; Paste a copy of the profile
		into that group, or move the copied profile, once it is created.
	</para>

	<para>
    <indexterm><primary>Connection profile</primary><secondary>delete</secondary></indexterm>
		To delete an existing profile, select the profile in the list and
		click on the <literal>Delete Profile</literal> button
		(<guiicon><inlinegraphic width="16" depth="16" fileref="@IMAGE_DIR@/Delete16.gif" format="GIF"/></guiicon>)
	</para>

</section>

<section id="profile-groups">
	<title>Managing profile groups</title>
	<para>
		Profiles can be organized in groups, so you can group them by type (test, integration, production)
		or customer or database system. When you start &wb-productname; for the first time,
		no groups are created and the tree will only display the default group node.
		To add a new group click on the <literal>Add profile group</literal>
		(<guiicon><inlinegraphic width="16" depth="16" fileref="@IMAGE_DIR@/NewFolder16.gif" format="GIF"/></guiicon>)
		button. The new group will be appended at the end of the tree. If you create a new profile, it will
		be created in the currently selected group. If a profile is selected in the tree and not a group
		node, the new profile will be created in the group of the currently selected profile.
	</para>

	<note><para>
			Empty groups are discarded (i.e. not saved) when you restart &wb-productname;
	</para></note>

	<para>
		You can move profiles from one group to another but right clicking on the profile, then choose
		<guimenuitem>Cut</guimenuitem>. Then right-click on the target group and select
		<guimenuitem>Paste</guimenuitem> from the popup menu. If you want to put the profile
		into a new group that is not yet created, you can choose <guimenuitem>Paste to new folder</guimenuitem>.
		You will be prompted to enter the new group name.
	</para>
	<para>
		If you choose <guimenuitem>Copy</guimenuitem> instead of <guimenuitem>Cut</guimenuitem>,
		a copy of the selected profile will be pasted into the target group. This is similar to
		copying the currently selected profile.
	</para>

	<para>
		To rename a group, select the node in the tree, then press the <guibutton>F2</guibutton> key.
		You can now edit the group name.
	</para>

	<para>
		To delete a group, simply remove all profiles from that group. The group will then automatically
		be removed.
	</para>

</section>

<section id="profile-jdbc-properties">
	<title>JDBC related profile settings</title>

  <section id="profile-driver">
    <title>Driver</title>
    <para>This is the classname for the JDBC driver. The exact
      name depends on the DBMS and driver combination. The documentation
      for your driver should contain this information. &wb-productname; has some
      drivers pre-configured. See <xref linkend="jdbc-setup"/> for details on
      how to configure your JDBC driver for &wb-productname;.
    </para>
  </section>

  <section id="profile-url">
    <title>URL</title>
    <indexterm><primary>Connection profile</primary><secondary>connection URL</secondary></indexterm>
    <para>
        The connection URL for your DBMS.
        This value is DBMS specific. The pre-configured drivers from &wb-productname; contain
        a sample URL. If the sample URL (which gets filled into the text field
        when you select a driver class) contains words in brackets, then these
        words (including the brackets) are placeholders for the actual values.
        You have to replace them (including the brackets) with the appropriate values
        for your DBMS connection.
    </para>
  </section>

  <section id="profile-username">
    <title>Username</title>
    <para>This is the name of the DBMS user account</para>
  </section>

  <section id="profile-password">
    <title>Password</title>
    <para>
      This is the password for your DBMS user account. You can
      choose not to store the password in the connection profile.
    </para>
  </section>

  <section id="profile-autocommit">
    <indexterm><primary>Connection profile</primary><secondary>autocommit</secondary></indexterm>
    <title>Autocommit</title>
    <para>
      This checkbox enables/disables the "auto commit" property for the connection.
      If autocommit is enabled, then each SQL statement
      is automatically committed on the DBMS. If this is disabled, any DML
      statement (<literal>UPDATE, INSERT, DELETE, ...</literal>) has to be
      committed in order to make the change permanent. Some DBMS
      require a commit for DDL statements (<literal>CREATE TABLE, ...</literal>)
      as well. Please refer to the documentation of your DBMS.
    </para>
  </section>

  <section id="profile-fetch-size">
    <indexterm><primary>Connection profile</primary><secondary>default fetch size</secondary></indexterm>
    <title>Fetch size</title>
    <para>
      This setting controls the default fetch size for data retrieval. This parameter will directly be passed to the
      <ulink url="http://java.sun.com/javase/6/docs/api/java/sql/Statement.html#setFetchSize(int)">setFetchSize()</ulink>
      method of the <literal>Statement</literal> object.
      For some combinations of JDBC driver and DBMS, setting this parameter to a
      rather large number can improve retrieval performance because it saves network traffic.
    </para>
    <para>
      The <ulink url="http://jdbc.postgresql.org">JDBC driver</ulink> for <ulink url="http://www.postgresql.org/">PostgreSQL</ulink> controls the <ulink url="http://jdbc.postgresql.org/documentation/80/query.html#query-with-cursor">caching</ulink>
      of ResultSets through this parameter. As the results are cached by &wb-productname;
      anyway, it is suggested to set this parameter to a value greater then zero to disable
      the caching in the driver. Especially when exporting large results using
      <link linkend="command-export">WbExport</link> or <link linkend="command-copy">WbCopy</link>
      it is recommended to turn off the caching in the driver (e.g. by setting the value
      for this property to 1).
    </para>
    <para>
      You can change the fetch size for the current connection manually by running the &wb-productname; specific
      command <link linkend="command-fetchsize">WbFetchSize</link>
    </para>
  </section>

	<section id="profile-timeout">
    <indexterm><primary>Connection profile</primary><secondary>timeout</secondary></indexterm>
    <title>Timeout</title>
    <para>
      This property defines a timeout in seconds that is applied when establishing the connection to the
      database server. If no connection is possible in that time, the attempt will be aborted. If this
      is empty, the default timeout defined by the JDBC driver is used.
    </para>
  </section>
</section>

<section id="profile-extended-properties">
	<title>Extended properties for the JDBC driver</title>
  <indexterm><primary>Connection profile</primary><secondary>extended properties</secondary></indexterm>
  <indexterm><primary>JDBC Connection</primary><secondary>connection properties</secondary></indexterm>

	<para>
		JDBC drivers support additional connection properties where
		you can fine tune the behaviour of the driver or enable special features
		that are not switched on by default. Most drivers support passing properties
    as part of the URL, but sometimes they need to be passed to the driver using
    a different method called extended properties.
	</para>

	<para>
		If you need to pass an additional paramter to your driver you can do that
		with the <guibutton>Extended Properties</guibutton> button. After clicking that
		button, a dialog will appear with a table that has two columns. The first column
		is the name of the property, the second column the value that you want to pass to
		the driver.
	</para>

	<para>
		To create a new property click on the new button. A new row will be inserted
		into the table, where you can define the property. To edit an existing property,
		simply doubleclick in the table cell that you want to edit. To delete an existing property
		click on the <literal>Delete</literal> button
		(<guiicon><inlinegraphic width="16" depth="16" fileref="@IMAGE_DIR@/Delete16.gif" format="GIF"/></guiicon>).
	</para>

  <para>
    Some driver require those properties to be so called "System properties" (see the manual
    of your driver for details). If this is the case for your driver, check the option
    <literal>Copy to system properties before connecting</literal>.
  </para>

</section>

<section id="profile-workbench-settings">
	<title>&wb-productname; specific settings</title>

	<section id="prompt-username">
		<title>Prompt for username</title>

		<para>
			If this option is enabled (i.e. checked) you will be asked to enter the username and password
      each time you connect to the specified database server. If this is checked, the input fields
      for username and password are disabled (but the values will still be saved in the profile).
		</para>
		<para>
      This is useful if you have many different usernames for the same DBMS server and don't want to create
      a connection profile for each user.
    </para>
	</section>

	<section id="profile-save-password">
		<title>Save password</title>

		<para>
			If this option is enabled (i.e. checked) the password for the
			profile will also be stored in the profile file. If the global
			option <link linkend="options-encrypt-password">Encrypt Passwords</link>
			is selected, then the password will be stored encrypted,
			otherwise it will be stored in plain text!
		</para>
		<para>
			If you choose not to store the password, you will be prompted for it each
			time you connect using the profile.
		</para>
	</section>

	<section id="profile-separate-connection">
		<title>Separate connection per tab</title>
    <indexterm><primary>Connection profile</primary><secondary>separate connection</secondary></indexterm>
    <indexterm><primary>Connection profile</primary><secondary>separate session</secondary></indexterm>

		<para>
			If this option is enabled, then each tab in the main window
      will open a separate (phyiscal) connection to the database server. This is
			useful, if the JDBC driver is not multi-threaded and does not allow
			to execute two statements concurrently on the same connection.
		</para>

		<para>
			The connection for each tab will not be opened until the tab
			is actually selected.
		</para>
		<para>
			Enabling this option has impact on transaction handling as well. If
			only one connection for all tabs (including the <link linkend="dbexplorer">Database Explorer</link>)
			is used, then a transaction that is started in one tab is "visible" to all other tabs
			(as they share the same connection). Changes done in one tab via <literal>UPDATE</literal>
			are seen in all other tabs (including the Database Explorer).
			If a separate connection is used for each tab, then each tab will have its own
			transaction context. Changes done in one tab will not be visible in other
			tabs until they are committed (depending on the isolation level of the database of
			course)
		</para>

		<para>If you intend to execute several statements in parallel then it's strongly
			recommended to use one connection for each tab. Most JDBC drivers are not multi-threaded
			and thus cannot run more then on statement on the same connection. &wb-productname; does
			try to detect conflicting usages of a single connection as far as possible,
			but it is still possible to lock the GUI when running multiple statements on
			the same connection
		</para>
		<para>
			When you disable the use of separate connections per tab, you can still
			create new a (physical) connection for the current tab later, by selecting
			<menuchoice><guimenu>File</guimenu><guimenuitem>New Connection</guimenuitem></menuchoice>.
			That menu item will be disabled if <literal>Separate connection per tab</literal> is
			disabled or you have already created a new connection for that tab.
		</para>

	</section>

	<section id="profile-ignore-drop-error">
		<title>Ignore DROP errors</title>

		<para>
			If this option is enabled, any error reported by the database
			server when issuing a statement that begins with DROP, will be
			ignored. Only a warning will be printed into the message area. This
			is useful when executing SQL scripts to build up a schema, where a
			<literal>DROP TABLE</literal> is executed before each <literal>CREATE TABLE</literal>. If the table does
			not exist the error which the <literal>DROP</literal> statement will report, is not
			considered as an error and the script execution continues.
		</para>
		<para>
			When running &wb-productname; in batchmode this option can be defined
			using a separate command line parameter. See <xref linkend="using-scripting"/> for details.
		</para>
	</section>

	<section id="profile-rollback-before-disconnect">
		<title>Rollback before disconnect</title>

		<para>
			Some DBMS require that all open transactions are closed before actually
			closing the connection to the server. If this option is enabled, &wb-productname;
			will send a <literal>ROLLBACK</literal> to the backend server before
			closing the connection. This is e.g. required for Cloudscape/Derby because executing
			a <literal>SELECT</literal> query already starts a transaction. If you see
			errors in your log file while disconnecting, you might need to enable this
			for your database as well.
		</para>
	</section>

	<section id="profile-confirm-updates">
		<title>Confirm updates</title>
		<para>
			If this option is enabled, then &wb-productname; will ask you to confirm
			the execution of any SQL statement that is updating or changing the database in
			any way (e.g. UPDATE, DELETE, INSERT, DROP, CREATE, COMMIT, ...).
		</para>
		<para>
			If you save changes from within the result list, you will be prompted even
			if <link linkend="options-confirm-update">Confirm result set updates</link> is disabled.
		</para>
		<para>
			This option cannot be selected together with the "Read only" option.
		</para>
    <para>
      The read only state of the connection can temporarily be changed (without
      modifying the profile) using the <link linkend="command-wbmode">WbMode</link>
      command.
    </para>
	</section>

	<section id="profile-readonly">
		<title>Read only</title>
		<para>
			If this option is enabled, then &wb-productname; will never run any statements
			that might change the database. Changing of retrieved data is also disabled in this
			case. This option can be used to prevent accidental changes to important
			data (e.g. a production database)
		</para>
		<para>
			&wb-productname; cannot detect all possible statements that may change the
			database. Especially when calling stored procedures &wb-productname; cannot
			know if they will change the database. But they might be needed to retrieve data,
			this cannot be disabled alltogether.
		</para>
		<para>
			You can extend the list of keywords known to update the data in the
			<link linkend="db-settings-updatingcommands"><literal>workbench.settings</literal></link>
			file.
		</para>
		<note>
			<para>
				&wb-productname; will not guarantee that there is no way (accidentally or intended)
				to change data when this option is enabled. Please do not rely on this option
				when dealing with important data that must not be changed.
			</para>
			<para>
				If you really need to guarantee that no data is changed, you have to do this
				with the security mechanism of your DBMS, e.g. by creating a read-only user.
			</para>
		</note>
		<para>
			This option cannot be selected together with the "Confirm updates" option.
		</para>

    <para>
      The read only state of the connection can temporarily be changed (without
      modifying the profile) using the <link linkend="command-wbmode">WbMode</link>
      command.
    </para>

	</section>

	<section id="profile-empty-string-is-null">
		<title>Empty string is NULL</title>
		<para>
      If this option is enabled, then a NULL value will be sent to the database for an empty
			(zero length) string. Everything else will be sent to the database as entered.
    </para>

    <para>
      Empty values for non-character values (dates, numbers etc) are always treated as <literal>NULL</literal>.
		</para>

    <para>
      If this option is disabled you can still set a column's value to <literal>NULL</literal> while
      editing a result set. Please see <link linkend="edit-set-null">Editing data</link> for details
    </para>

	</section>

		<section id="profile-insert-null-column">
			<title>Include NULL columns in INSERT</title>
			<para>
				This setting controls whether columns where the value from the result grid
				is null are included in INSERT statements. If this setting is enabled, then
				columns for new rows that have a null value are listed in the column list
				for the <literal>INSERT</literal> statement (with the corresponding <literal>NULL</literal>
				value passed in the <literal>VALUES</literal> list).
				If this property is un-checked, then those columns will not be listed in
				<literal>INSERT</literal> statements. This is useful if you have e.g.
				auto-increment columns that only work if the columns are not listed in the
				DML statement.
			</para>
		</section>

		<section id="profile-remove-comments">
			<title>Remove comments</title>
			<para>
				If this option is checked, then comments will be removed from the SQL
				statement before it is sent to the database. This covers
				single line comments using -- or multi-line comments using /* .. */
			</para>
			<para>
				As an ANSI compliant SQL Lexer is used for detecting comments, this does
				<emphasis role="bold">not</emphasis> work for non-standard MySQL comments
				using the # character.
			</para>
		</section>

		<section id="options-explorer-remember-schema" xreflabel="Remember DbExplorer Schema">
			<title>Remember DbExplorer Schema</title>

			<para>
				If this option is enabled, the currently selected schema in the
				DbExplorer will be stored in the workspace associated with the current
				connection profile. If this option is not enabled, the DbExplorer
				tries to pre-select the current schema when it's opened.
			</para>

		</section>

		<section id="profile-trim-char-data">
			<title>Trim <literal>CHAR</literal> data</title>

			<para>
				For columns defined with the CHAR datatype, some DBMS pad the values
				to the length defined in the column definition (e.g. a CHAR(80) column
				will always contain 80 characters).
				If this option is enabled, &wb-productname; will remove trailing
				spaces from the values retrieved from the database. When running &wb-productname;
				in batch mode, this flag can be enabled using the <literal>-trimCharData</literal> switch.
			</para>
		</section>

		<section id="profile-hide-warnings">
			<title>Hide warnings</title>
			<para>
				When a SQL statement returns warnings from the DBMS, these are usually displayed
				after the SQL statement has finished. By enabling this option, warnings that are
				returned from the DBMS are never displayed.
			</para>
			<para>
				Note that for some DBMS (e.g. MS SQL Server) server messages
				(<literal>PRINT 'Hello, world'</literal>) are also returned	as a warning by the driver.
				If you disable this property, those messages will also not be displayed.
			</para>
			<para>
				If you hide warnings when connected to a PostgreSQL server, you will also not see
				messages that are returned e.g. by the <literal>VACUUM</literal> command.
			</para>
		</section>

		<section id="profile-open-trans">
			<title>Check for uncommitted changes</title>
			<para>
        This option is (currently) only available for PostgreSQL, HSQLDB 2.x and Oracle
			</para>
			<para>
        When closing the application (or a SQL panel) &wb-productname; will check if the current
        transaction has changes that were not committed and will issue a warning.
			</para>
      <para>
        For more details see the description of <link linkend="dbms-specific">DBMS specific features</link>.
      </para>
		</section>

		<section id="profile-info-background">
			<title>Info Background</title>
			<para>
				Once a connection has been established, information about the connection are display
				in the toolbar of the main window. You can select a color for the background of this
				display to e.g. indicate "sensitive" connections. To use the default background,
				click on the <literal>Reset</literal> (<guiicon><inlinegraphic width="16" depth="16" fileref="@IMAGE_DIR@/Delete16.gif" format="GIF"/></guiicon>)
				button. If no color is selected this is indicated with the text <literal>(None)</literal>
				next to the selection button. If you have selected a color, a preview of the color is
				displayed.
			</para>
		</section>

		<section id="profile-alternate-delimiter">
			<title>Alternate delimiter</title>
			<para>
				If an alternate delimiter is defined, and the statement that is executed ends with the
				defined delimiter, this one will be used instead of the standard semicolon. The profile
				setting will overwrite the global setting for this connection. This way you can
				define the <literal>GO</literal> keyword for SQL Server connections, and use
				the forward slash in Oracle connections. The delimiter can be defined as a "single line delimiter",
				which means that it will only be recognized if put on a single line.
				Please refer to <link linkend="understand-alternate-delim">using the alternate delimiter</link>
				for details on this property.
			</para>
		</section>

		<section id="profile-workspace-file">
			<title>Workspace</title>

			<para>
				For each connection profile, a workspace file can (and should) be assigned. When you
				create a new connection, you can either leave this field empty or supply a name for a new profile.
			</para>
			<para>
				If the profile that you specify does not exist, you will be prompted
				if you want to create a new file, load a different workspace or want to
				ignore the missing file. If you choose to ignore, the association
				with the workspace file will be cleared and the default workspace will be loaded.
			</para>
			<para>
				If you choose to leave the workspace file empty, or ignore the missing
				file, you can later save your workspace to a new file. When you do that,
				you will be prompted if you want to assign the new workspace to the current
				connection profile.
			</para>
			<para>
				To save you current workspace choose
				<menuchoice><guimenu>Workspace</guimenu><guimenuitem>Save Workspace as</guimenuitem></menuchoice>
				to create a new workspace file.
			</para>

			<para>
				If you specify a filename that does not contain a directory or is a relative filename, it is assumed
        the workspace is stored in <link linkend="cmdline-parameter-configdir">configuration directory</link>.
			</para>

			<note><para>
				As the workspace stores several settings that are related to the connection
				(e.g. the selected schema in the <link linkend="dbexplorer">DbExplorer</link>) it is recommended to create one
				workspace for each connection profile.
			</para></note>
		</section>

		<section id="profile-connect-scripts">
			<title>Connect scripts</title>

			<para>
				You can define a SQL script that is executed immediately after a connection for this
				profile has been established, and a script that is executed before a connection
				is about to be closed. To define the scripts, click on the button <guibutton>Connect scripts</guibutton>.
				A new window will be opened that contains two editors. Enter the script that should be
				executed upon connecting into the upper editor, the script to be executed before
				disconnecting into the lower editor. You can put more than one statement into the
				scripts. The statements have to be separated by a semicolon.
			</para>
			<para>
				The statements that are executed will be logged in the message panel of the
				SQL panel where the connection is created. You will not see the log when
				a connection for the DbExplorer is created.
			</para>
			<para>
				Execution of the script will stop at the first statement that throws an error.
				The error message will also be logged to the message panel. If the connection
				is made for a DbExplorer panel, the errors will only be visible in the log file.
			</para>

			<simplesect id="profile-keep-alive">
				<title>Keep alive script</title>

				<para>
					Some DBMS are configured to disconnect an application that has been idle
					for some time. You can define an idle time and a SQL statement that is executed
					when the connection has been idle for the defined interval. This is also available
					when clicking on the <guibutton>Connect scripts</guibutton>.
				</para>

				<para>
					The keep alive statement can not be a script, it can only be a <emphasis role="bold">single</emphasis>
					SQL statement (e.g. <literal>SELECT version()</literal> or <literal>SELECT 42 FROM dual</literal>).
					You may not enter the trailing semicolon.
				</para>

				<para>
					The idle time is defined im milliseconds, but you can also enter the
					interval in seconds or minutes by appending the letter 's' (for seconds)
					or 'm' (for minutes) to the value.
					e.g.: <literal>30000</literal> (30 seconds), or <literal>45s</literal> (45 seconds), or
					<literal>10m</literal> (10 minutes).
				</para>
				<para>
					You can disable the keep alive
					feature by deleting the entry for the interval but keeping the SQL statement.
					Thus you can quickly turn off the keep alive feature but keep the
					SQL statement for the next time.
				</para>

			</simplesect>

		</section>
    <section id="profile-filters">
      <title>Schema and Catalog filters</title>
      <para>
        If your database contains a lot of schema or catalogs that you don't want to be listed in the dropdown
        of the <link linkend="dbexplorer">DbExplorer</link>, you can define filter expressions to hide certain entries.
      </para>
      <para>
        The filters are defined by clicking on the <guibutton>Schema/Catalog Filter</guibutton> button.
        The filter dialog contains two input fields, one to filter schema name and one to filter catalog names.
      </para>
      <para>
        Each line of the filter definition defines a single regular expression of schema/catalog names to be <emphasis>excluded</emphasis>
        from the dropdown, i.e. if a schema/catalog matches the defined name, it will not be listed in the dropdown.
      </para>
      <para>
        The filter items are treated as regular expressions, so the standard SQL wildcards will not work here. The basic
        expression is just a name (e.g. MDSYS). Comparison is always done case-insensitive. So <emphasis>mdsys</emphasis>
        and <emphasis>MDSYS</emphasis> will achieve the same thing.
      </para>
      <para>
        If you want to filter all schemas that start with a certain value, the regular expression would be:
        <literal>^pg_toast.*</literal>. Note the dot followed by a * at the end. In a regular expression the dot matches
        any character, and the * will allow any number of characters to follow. The ^ specifies that the whole string must
        occur at the beginning of the value.
      </para>
      <para>
        The regular expression must match completely in order to exlude the value from the dropdown.
      </para>
      <para>
        If you want to learn more about regular expressions, please have a look at <ulink url="http://www.regular-expressions.info/"/>
      </para>
    </section>

    <section id="profile-icon">
      <title>Main window icon</title>
      <para>
        You can assign an icon file for each connection profile. The icon will then be used for the main window
        instead of the default application icon.
      </para>
      <para>
        The icon file can <emphasis role="bold">only</emphasis> be a <literal>png</literal> or <literal>gif</literal> file.
      </para>
      <para>
        Do <emphasis role="bold">not</emphasis> use an animated GIF file because that will hang the application!
      </para>
      <para>
        At least one file with an icon of 16x16 pixel should be selected. You can select multiple files with different
        icon sizes (e.g. a 16x16 and a 32x32 icon). Whether or not the additional sizes (i.e. bigger than 16x16)
        will be used depends on your operating system and desktop theme.
      </para>
    </section>
  </section>

	<section id="oracle-sysdba-connection">
		<title>Connect to Oracle with SYSDBA privilege</title>
		<para>
			Connecting to Oracle with SYSDBA privilege can be done by checking the option <literal>as SYSDBA</literal> next to the username.
      when using this option, you have to use an Oracle user account that is allowed to connect as SYSDBA (e.g. SYS).
		</para>
	</section>

  <section id="odbc">
		<title>ODBC connections without a data source</title>
    <para>
      <important>
        The ODBC bridge has been removed from the Java with the release of Java 8.
      </important>
    </para>
		<para>
			On Microsoft Windows&reg; you can use the ODBC bridge to connect to
			ODBC datasources. For some drivers you don&#39;t need to create an ODBC
			datasource in order to be able to use the ODBC driver. The following
			URLs can be used to connect to data files directly.
		</para>
    <para>
      The class name of the driver (in Java7 and earlier) is
        <emphasis role="bold"><literal>sun.jdbc.odbc.JdbcOdbcDriver</literal></emphasis>
    </para>

		<informaltable frame="all">
			<tgroup cols="2" align="left">
				<colspec colname="c1" colwidth="2cm" />
				<colspec colname="c2"  />
				<thead valign="top">
					<row>
						<entry>ODBC Connection</entry>
						<entry>URL to be used</entry>
					</row>
				</thead>
				<tbody valign="top">
					<row>
						<entry> <para>Excel</para> </entry>
						<entry><para>jdbc:odbc:DRIVER={Microsoft Excel Driver (*.xls)};DBQ=&#60;filename&#62;</para> </entry>
					</row>
					<row>
						<entry> <para>Access</para> </entry>
					<entry> <para>jdbc:odbc:DRIVER={Microsoft Access Driver (*.mdb)};DBQ=&#60;filename&#62;</para> </entry> </row>
					<row>
						<entry> <para>dBase</para> </entry>
						<entry>  <para>jdbc:odbc:DRIVER={Microsoft dBase Driver (*.dbf)};DefaultDir=&#60;directory where the .dbf files are located&#62;</para></entry>
					</row>
				</tbody>
			</tgroup>
		</informaltable>

	</section>


</section>