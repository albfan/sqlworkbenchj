<section id="troubleshooting">
	<title>Common problems</title>

  <section id="driver-not-found">
    <title>The driver class was not found</title>
    <indexterm><primary>Problems</primary><secondary>driver not found</secondary></indexterm>

    <para>
      If you get an error <literal>"Driver class not registered"</literal> or
      <literal>"Driver not found"</literal> please check the following settings:
      <itemizedlist>
        <listitem><para>Make sure you have specified the correct location of the jar file. Some drivers (e.g. for IBM DB2)
        may require more than one jar file.</para></listitem>
        <listitem><para>Check the spelling of the driver's class name. Remember that it's case sensitive. If you don't know
        the driver's class name, simply press the <keycap>Enter</keycap> key inside the input field of the jar file location.
        &wb-productname; will then scan the jar file(s) to find the JDBC driver</para></listitem>
      </itemizedlist>
    </para>
  </section>

  <section id="error-create-procedure">
    <title>Syntax error when creating stored procedures</title>
    <indexterm><primary>Problems</primary><secondary>create stored procedure</secondary></indexterm>
    <indexterm><primary>Problems</primary><secondary>create trigger</secondary></indexterm>

    <para>
      When creating a stored procedure (trigger, function) it is necessary to use a delimiter other than
      the normal semicolon because &wb-productname; does not know if a semicolon inside the stored procedure
      ends the procedure or simply a single statement inside the procedure.
    </para>
    <para>
      Therefor you must use an alternate delimiter when running a DDL statement that contains "embedded" semicolons.
      For details please refer to <link linkend="understand-alternate-delim">using the alternate delimiter</link>.
    </para>
  </section>

  <section id="sql-source-incorred">
    <title>The SQL source code for tables or indexes is incorrect</title>
    <indexterm><primary>Problems</primary><secondary>wrong DDL</secondary></indexterm>
    <indexterm><primary>Problems</primary><secondary>wrong table source</secondary></indexterm>
    <indexterm><primary>Problems</primary><secondary>wrong index source</secondary></indexterm>

    <para>
      &wb-productname; re-creates the source code for tables and indexes based on
      the information returned by the JDBC driver. This does not alway match the original DDL used to
      create the table or index due to the limited information available by the JDBC API.
    </para>
    <para>
      If the DBMS supports a SQL query to retrieve the real (native) source of a table or index, the
      query can be configured to be used instead of the generic reverse engineering built into &wb-productname;
    </para>
    <para>
      Please see the chapter <link linkend="settings-table-source-retrieval">Customize table source retrieval</link> for
      details on how to configure the query.
    </para>
  </section>

  <section id="wrong-tz-display">
    <title>Timestamps with timezone information are not displayed correctly</title>
    <indexterm><primary>Problems</primary><secondary>timezone</secondary></indexterm>
    <indexterm><primary>Problems</primary><secondary>timestamp with timezone</secondary></indexterm>

    <para>
      When using databases that support timestamps or time data with a timezone, the display in &wb-productname; might not
      always be correct. Especially when daylight savings time (DST) is in effect.
    </para>
    <para>
      This is caused by the handling of time data in Java and is usually <emphasis>not</emphasis> caused by the database, the driver or &wb-productname;
    </para>
    <para>
      If your time data is not displayed correctly, you might try to explicitely specify the time zone when starting the application.
      This is done by passing the system property <literal>-Duser.timezone=XYZ</literal> to the application, where XYZ
      is the time zone where the computer is located that runs &wb-productname;
    </para>
    <para>
      The time zone should be specified relativ to GMT and not with a logical name. If you are in Germany and DST is active, you need
      to use <literal>-Duser.timezone=GMT+2</literal>. Specifying <literal>-Duser.timezone=Europe/Berlin</literal> does usually
      <emphasis role="bold">not</emphasis> work.
    </para>
    <para>
      When using the <link linkend="launcher-using">Windows launcher</link> you have to prefix the paramter with -J to identify it as a parameter
      for the Java runtime not for the application.
    </para>
  </section>

  <section id="problem-window-sizes">
    <title>Some of the dialogs are too small</title>
    <indexterm><primary>Problems</primary><secondary>dialog too small</secondary></indexterm>
    <indexterm><primary>Options dialog</primary><secondary>dialog too small</secondary></indexterm>
    <indexterm><primary>Profile dialog</primary><secondary>dialog too small</secondary></indexterm>
    <para>
      When using non-default font sizes in the operating system, it can happen that the windows
      shown in &wb-productname; are sometimes too small and some GUI elements are cut off
      or not visible at all.
    </para>
    <para>
      All windows and dialogs can be resized and will remember their size. If GUI controls are not visible or are cut-off
      simply resize the window until everything is visible. The next time the dialog is opened, the chose
      size will be restored.
    </para>
  </section>

  <section id="excel-export">
    <title>Excel export not available</title>
    <indexterm><primary>Excel export</primary><secondary>installation</secondary></indexterm>
    <indexterm><primary>Problems</primary><secondary>Excel export not possible</secondary></indexterm>
    <para>
      In order to write the proprietary Microsoft Excel format, additional libraries are needed. Please
      refer to <link linkend="poi-installation">Exporting Excel files</link> for details.
    </para>
  </section>

  <section id="out-of-memory-error">
    <title>Out of memory errors</title>
    <indexterm><primary>Problems</primary><secondary>out of memory</secondary></indexterm>

    <para>
      The memory that is available to the application is limited by
      the Java virtual machine to ensure that applications don't use all
      available memory which could potentially make a system unusable.
    </para>
    <para>
      If you retrieve large resultsets from the database, you may receive
      an error message indicating that the application does not have
      enough memory to store the data.
    </para>
    <para>
      Please refer to <link linkend="install-increase-memory">Increasing the memory</link> for details
      on how to increase the memory that is available to &wb-productname;
    </para>
  </section>

  <!--
  <section id="no-ddraw">
    <title>Display problems when running under Windows&reg;</title>

    <para>
      If you experience problems when running &wb-productname; (or
      other Java/Swing based applications) on the Windows&reg; platform, this
      might be due to problems with the graphics driver and/or the
      DirectDraw installation. If upgrading the graphics driver or the
      DirectDraw/DirectX version is not an option (or does not solve the
      problem), try to run SQL Workbench with the direct draw feature
      turned off:
    </para>

    <programlisting>java -Dsun.java2d.noddraw=true -jar sqlworkbench.jar</programlisting>

    <para>
      When using the exe launcher, you can use the following syntax:
    </para>

    <programlisting>SQLWorkbench64.exe -Dsun.java2d.noddraw=true</programlisting>

    <para>
      If you run &wb-productname; through a program that enables remote
      access to a Windows&reg; workstations (PC-Duo, VNC, NetMeeting, etc),
      you may need to disable the use of DirectDraw for Java as well.
    </para>

  </section>
  -->

  <section id="hi-cpu-usage">
    <title>High CPU usage when executing statements</title>

    <para>
      If you experience a high CPU usage when running a SQL statement,
      this might be caused by a combination of the graphics driver, the JDK and
      the Windows&reg; version you are using. This is usually caused by the animated
      icon which indicates a running statement (the yellow smiley). This animation can
      be turned off in <menuchoice><guimenu>Tools</guimenu><guimenuitem>Options</guimenuitem></menuchoice>
      See <xref linkend="option-animated-icon"/> for details. A different
      icon (not animated) will be used if that option is disabled.
    </para>
  </section>

  <section id="gui-freeze">
    <title>The GUI freezes when displaying menus or context menus</title>
    <indexterm><primary>Problems</primary><secondary>GUI freezes</secondary></indexterm>
    <indexterm><primary>Problems</primary><secondary>Context menu not displayed</secondary></indexterm>
    <para>
      With certain Linux Desktops combined with OpenJDK it has been observed that displaying context menus
      (by using the right mouse button) freezes the GUI. Please use the Oracle JDK (or JRE) if this happens.
    </para>
  </section>

</section>

