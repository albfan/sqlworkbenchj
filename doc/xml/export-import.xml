  <section id="export-import">
    <title>Exporting and importing data</title>
    <section id="export">
      <title>Export data</title>

      <para>You can export the data of the <emphasis role="strong">result set</emphasis> into local files of the
      following formats:</para>

      <itemizedlist>
        <listitem>
          <para>HTML</para>
        </listitem>

        <listitem>
          <para>SQL INSERT syntax</para>
        </listitem>

        <listitem>
          <para>XML format</para>
        </listitem>

        <listitem>
          <para>Tab separated text file. Columns are separated with a tab, rows are separated with a newline character</para>
        </listitem>
      </itemizedlist>

      <para>To copy the data into the clipboard choose <menuchoice><guimenu>Data</guimenu><guimenuitem>Copy into
      Clipboard</guimenuitem></menuchoice> from the data menu. The export dialog uses default
      settings for the creation of the files. If you want to have more control
      over the generated output file, use the <link linkend="command-spool">EXPORT</link>
      command.</para>
      <para>Please keep in mind that exporting the data from the result set
      requires you to load everything into memory. If you need to export
      data sets which are too big to fit into memory, you should use the XML files
      generated by the <link linkend="command-spool">EXPORT</link> command.
      The IMP (IMPORT) command can read those files without the need to load the whole
      file into memory. The command can write the data directly into a file without the
      need to load all rows into memory and is the recommended way of moving data from
      one system to another. For details refer to the section
      <xref linkend="xml-export-import"/></para>
    </section>

    <section id="import">
      <title>Import data</title>

      <para>&wb-productname; can import tab separated text files into the current
      result set. This means, that you need to issue the approriate <literal>SELECT</literal>
      statement first. The structure of the file has to match the structure of the result set,
      otherwise an error will occur. To initiate the import select
      <menuchoice><guimenu>Data</guimenu><guimenuitem>Import</guimenuitem></menuchoice></para>

      <para>When selecting the file, you can change some parameters for the
      import:</para>

      <informaltable frame="all" >
        <tgroup cols="2" align="left">
          <colspec colname="c1" colwidth="5cm" />
          <colspec colname="c2" colwidth="10cm" />
          <thead valign="top">
            <row>
              <entry>Option</entry>
              <entry>Description</entry>
            </row>
          </thead>
          <tbody valign="top">
            <row>
              <entry><para>Header</para></entry>
              <entry><para>if this option this is checked, the first line of the import file will be ignored</para></entry>
            </row>
            <row>
              <entry><para>Delimiter</para></entry>
              <entry><para>the delimiter used to separate column values. Enter \t for the tab character</para></entry>
            </row>
            <row>
              <entry><para>Date Format</para></entry>
              <entry><para>The format in which date fields are specified. The
                format of this parameter is the same as the SimpleDateFormat class from
                the JDK.</para></entry>
            </row>
            <row>
               <entry><para>Number Format</para></entry>
               <entry><para>The format in which numeric values are specified.
      						Most import if a comma or a point are used as the decimal separator. In
      						the above example a point is used. Enter #,# if a comma is used.</para></entry>
            </row>
            <row>
              <entry><para>Quote char</para></entry>
              <entry><para>The character used to quote values with special
      						characters. Make sure that each opening quote is followed by a
      						closing quote in your text file.</para>
							</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
      <para></para>
      <note><para>Using the <link linkend="command-import">IMPORT</link> command together
      with an XML file is the recommended way of importing data.</para></note>
    </section>

	  <section id="xml-export-import" xreflabel="XML Export and Import">
	      <title>XML Export and Import</title>
			 <para>You can use &wb-productname;'s XML files to copy data from
       one system to another.</para>
       <para>You need to create the XML file first, using the EXPORT (or SPOOL) command
       from within the workbench, beeing connected to the source system. Suppose your data
       is stored in the table <literal>PERSON</literal> on your source system
       and you want to only select the columns <literal>lastname, firstname, birthday</literal>
       to be transferred to your target system.
       </para>
       <para>To create the XML file the following command should be used:</para>
          <programlisting>EXPORT -type=xml -file=&quot;c:/data/person.xml&quot; -table=contact;
SELECT lastname, firstname, birthday FROM person;</programlisting>
       <para>As the data should be imported into the table <literal>CONTACT</literal>
       the <literal>-table=contact</literal> parameter is passed to the <literal>EXPORT</literal>
       command. You can achieve the same, by editing the XML file afterwards and
       change the contents of of the <literal>&lt;table-name&gt; </literal> tag.</para>
       <para>Once the XML file is generated, you can connect to your source system and
       import the file with the following command:</para>
       <programlisting>IMPORT -type=xml -file=&quot;c:/data/person.xml&quot;;</programlisting>
       <para>&wb-productname; will read the XML file and insert every row into the table <literal>CONTACT</literal>
       of the database. AS the XML format generated by &wb-productname; includes the internal long value for date
       objects, it is not necessary to set the date or datetime format when importing the data.
       If you have a file with a lot of rows, you might want to set the parameter <literal>-commitevery=n</literal>.
       Some DBMS work faster if you commit more frequently instead of commit a huge number of inserts at the end.
       </para>
		</section>
  </section>