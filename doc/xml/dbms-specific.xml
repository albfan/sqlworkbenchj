<section id="dbms-specific">
	<title>DBMS specific features</title>

  <section id="dbms-specific-postgres">
     <title>PostgreSQL specific features</title>

     <section id="postgres-open-trans">
       <indexterm><primary>PostgreSQL</primary><secondary>check for pending transactions</secondary></indexterm>
       <title>Checking for un-committed changes</title>
       <para>
         Before a SQL panel (or the application) is closed, &wb-productname; will check if the current connection
         has any un-committed changes (e.g. an <literal>INSERT</literal> without a <literal>COMMIT</literal>).
         This is done by checking the <ulink url="http://www.postgresql.org/docs/current/static/view-pg-locks.html"><literal>pg_locks</literal></ulink>
         system view. The information in this view might not always be 100% correct and can report open transactions even though
         there are none.
       </para>
       <para>
         The checking for un-committed changes can be controlled through the <link linkend="profile-open-trans">connection profile</link>.
       </para>
     </section>
     <section id="postgres-copy-api">
       <indexterm><primary>PostgreSQL</primary><secondary>COPY</secondary></indexterm>
       <title>Using the COPY API for client side files</title>
       <para>
         <link linkend="command-import">WbImport</link> can make use of PostgreSQL's <literal>COPY</literal> API
         to send client side files to the server. <literal>COPY from stdin</literal> does not work through
         the JDBC API, but when using WbImport, the file contents can be <link linkend="import-pg-copy">sent through the COPY API</link>
       </para>
     </section>
  </section>

  <section id="dbms-specific-oracle">
     <title>Oracle specific features</title>
     <section id="oracle-open-trans">
       <indexterm><primary>Oracle</primary><secondary>check for pending transactions</secondary></indexterm>
       <title>Checking for un-committed changes</title>
       <para>
         Before a SQL panel (or the application) is closed, &wb-productname; will check if the current connection
         has any un-committed changes (e.g. an <literal>INSERT</literal> without a <literal>COMMIT</literal>).
         This is done by checking the <ulink url="http://docs.oracle.com/cd/E11882_01/server.112/e25513/dynviews_3114.htm"><literal>V$TRANSACTION</literal></ulink>
         system view.
       </para>
       <para>
         <note>By default a regular user does not have <literal>SELECT</literal> privilege on <literal>V$TRANSACTION</literal>,
         please grant the privilege before enabling this feature.</note>
       </para>
       <para>
         The checking for un-committed changes can be controlled through the <link linkend="profile-open-trans">connection profile</link>.
       </para>
     </section>

     <section id="oracle-autotrace">
       <indexterm><primary>Oracle</primary><secondary>autotrace</secondary></indexterm>
       <title>SQL*Plus autotrace mode</title>

       <para>
         &wb-productname; supports the a mode similar to <ulink url="http://docs.oracle.com/cd/E11882_01/server.112/e16604/ch_twelve040.htm#i2698680">"autotrace"</ulink> mode in SQL*Plus.
         The command to turn on autotrace is the same as in SQL*Plus and supports the same options.
         For details see the description of the <link linkend="command-set-autotrace">SET</link> command.
       </para>
       <para>
         The current user needs to have the <ulink url="http://docs.oracle.com/cd/E11882_01/server.112/e16604/ch_eight.htm#i1037226"><literal>PLUSTRACE</literal></ulink>
         role in order to be able to see statement statistics (which is required by SQL*Plus as well).
         The <literal>PLUSTRACE</literal> role grants the <literal>SELECT</literal>
         privilege on the system views: <literal>V$SESSTAT</literal>, <literal>V$STATNAME</literal> and <literal>V$MYSTAT</literal>. The role
         is not required for the <literal>traceonly explain</literal> option.
       </para>

       <para>
         As an extension to the Oracle syntax, &wb-productname; supports the keyword <literal>realplan</literal> as a
         substiture for <literal>explain</literal>. In that case the execution plan is also displayed but not by
         using <literal>EXPLAIN PLAN</literal> but by retrieving the actual execution plan that is available
         via <literal>dbms_xplan.display_cursor()</literal>. In order to use that package, the execute SQL
         will be changed by &wb-productname;. It will prepend it with a unique identifier so that the SQL can be
         found again in Oracle's system views and it will add the <literal>gather_plan_statistics</literal> hint
         to the statement in order to get more detailed statistics in the execution plan.
       </para>
       <para>
         In order to see the "real" execution plan, use <literal>set autotrace traceonly realplan</literal> instead
         of <literal>set autotrace traceonly explain</literal>.
       </para>
       <para>
         When using <literal>statistics</literal> together with <literal>explain</literal> or <literal>realplan</literal>,
         &wb-productname; will have to retrieve the generated <literal>SQL_ID</literal> in order to get the
         execution plan using <literal>dbms_xplan.display_cursor()</literal>. To use that function the SQL_ID is required
         which is retrieved from <literal>V$SQL</literal> using a unique comment that is added to the SQL statement
         before it is sent to the database. Querying <literal>V$SQL</literal> based on the column <literal>SQL_TEXT</literal>
         is quite an expensive operation and might create unwanted latch contention on the server. If you want to
         avoid that overhead do not use the <literal>statistics</literal> option when also displaying the execution plan.
       </para>
       <section id="ora-autotrace-examples">
         <title>Examples</title>
         <para>
           Show statistics without retrieving the actual data:
         </para>
         <programlisting>set autotrace traceonly statistics</programlisting>

         <para>
           Retrieve the data and show statistics
         </para>
         <programlisting>set autotrace on statistics</programlisting>

         <para>
           Display the statistics and the execution plan but do not retrieve the data
         </para>
         <programlisting>set autotrace traceonly explain statistics</programlisting>

         <para>
           Display the statistics and the actual execution plan but do not retrieve the data
         </para>
         <programlisting>set autotrace traceonly realplan statistics</programlisting>

       </section>
     </section>

  </section>

</section>