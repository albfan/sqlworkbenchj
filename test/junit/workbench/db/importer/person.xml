<?xml version="1.0" encoding="ISO-8859-1"?>
<wb-export>
  <meta-data>

    <generating-sql>
    <![CDATA[
    select id, firstname, lastname
from person
    ]]>
    </generating-sql>

    <created>2013-08-09 12:58:32.140 MESZ</created>
    <jdbc-driver>PostgreSQL Native Driver</jdbc-driver>
    <jdbc-driver-version>PostgreSQL 9.2 JDBC4 (build 1002)</jdbc-driver-version>
    <connection>User=thomas, Schema=public, URL=jdbc:postgresql://localhost/wbtest</connection>
    <schema>public</schema>
    <catalog></catalog>
    <database-product-name>PostgreSQL</database-product-name>
    <database-product-version>9.2.4</database-product-version>
    <wb-tag-format>long</wb-tag-format>
  </meta-data>

  <table-def>
    <!-- The following information was retrieved from the JDBC driver's ResultSetMetaData -->
    <!-- column-name is retrieved from ResultSetMetaData.getColumnName() -->
    <!-- java-class is retrieved from ResultSetMetaData.getColumnClassName() -->
    <!-- java-sql-type-name is the constant's name from java.sql.Types -->
    <!-- java-sql-type is the constant's numeric value from java.sql.Types as returned from ResultSetMetaData.getColumnType() -->
    <!-- dbms-data-type is retrieved from ResultSetMetaData.getColumnTypeName() -->

    <!-- For date and timestamp types, the internal long value obtained from java.util.Date.getTime()
         is written as an attribute to the <column-data> tag. That value can be used
         to create a java.util.Date() object directly, without the need to parse the actual tag content.
         If Java is not used to parse this file, the date/time format used to write the data
         is provided in the <data-format> tag of the column definition
    -->

    <table-name>foobar</table-name>
    <column-count>3</column-count>

    <column-def index="0">
      <column-name>id</column-name>
      <java-class>java.lang.Integer</java-class>
      <java-sql-type-name>INTEGER</java-sql-type-name>
      <java-sql-type>4</java-sql-type>
      <dbms-data-type>integer</dbms-data-type>
    </column-def>
    <column-def index="1">
      <column-name>firstname</column-name>
      <java-class>java.lang.String</java-class>
      <java-sql-type-name>VARCHAR</java-sql-type-name>
      <java-sql-type>12</java-sql-type>
      <dbms-data-type>varchar(50)</dbms-data-type>
    </column-def>
    <column-def index="2">
      <column-name>lastname</column-name>
      <java-class>java.lang.String</java-class>
      <java-sql-type-name>VARCHAR</java-sql-type-name>
      <java-sql-type>12</java-sql-type>
      <dbms-data-type>varchar(50)</dbms-data-type>
    </column-def>
  </table-def>

  <data>
    <row-data row-num="1">
      <column-data index="0">1</column-data>
      <column-data index="1">Arthur</column-data>
      <column-data index="2">Dent</column-data>
    </row-data>
    <row-data row-num="2">
      <column-data index="0">2</column-data>
      <column-data index="1">Zaphod</column-data>
      <column-data index="2">Beeblebrox</column-data>
    </row-data>
    <row-data row-num="3">
      <column-data index="0">3</column-data>
      <column-data index="1">Tricia</column-data>
      <column-data index="2">McMillian</column-data>
    </row-data>
    <row-data row-num="4">
      <column-data index="0">4</column-data>
      <column-data index="1">Mary</column-data>
      <column-data index="2">Moviestar</column-data>
    </row-data>
  </data>
</wb-export>
